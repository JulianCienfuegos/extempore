(sys:load "examples/external/shader-tutorials/shader-setup.xtm")

(bind-func gl_set_depth_test
  (lambda ()
    (glEnable GL_DEPTH_TEST)
    (glDepthFunc 257)
    (glEnable GL_LINE_SMOOTH))) ;; GL_LESS

(gl_set_depth_test)

(define narrows 100)

(bind-val vertices float* (* narrows 2))
(bind-val colours float* (* narrows 4))

(define shader-program
  (create_shader (file->string "examples/external/shader-tutorials/triangle.vert")
                 (file->string "examples/external/shader-tutorials/triangle.frag")))

(bind-func draw
  (let ((narrows 100)
        (vert_vbo (create_vbo vertices (* 2 narrows)))
        (colour_vbo (create_vbo colours (* narrows 4)))
        (vao (create_vao vert_vbo 2 colour_vbo 4)))
    (lambda (program)
      (glClear (+ GL_COLOR_BUFFER_BIT GL_DEPTH_BUFFER_BIT))        
      (glUseProgram program)
      (glBindVertexArray vao)
      (glDrawArrays GL_LINES 0 narrows)
      (update_vbo vert_vbo vertices (* 2 narrows))
      void)))

(bind-func munge_points
  (lambda (n factor)
    (doloop (i (/ n 2))
      (pset! vertices (+ (* i 4) 0) 0.)
      (pset! vertices (+ (* i 4) 1) 0.)
      (pset! vertices (+ (* i 4) 2) (cos (/ (* 8.0 3.1415 factor (convert i)) (convert n))))
      (pset! vertices (+ (* i 4) 3) (sin (/ (* 8.0 3.1415 factor (convert i)) (convert n))))
      (doloop (j 4)
        (pset! colours (+ (* i 4) j) (random .8 1.))))))

(define gl-loop
  (lambda (time delta-t)
    (munge_points (* narrows 2) (* 13.4 (cos (* (* .04 pi) (/ time 44100.)))))
    (draw shader-program)
    (gl:swap-buffers *gl-window*)
    ;; (println 'time: time)
    (callback (+ time (* *second* delta-t) 0.5)
              'gl-loop
              (+ time (* *second* delta-t)) 
              delta-t)))

(gl-loop (now) 1/30)


;; bg shader

(define bg-shader-program
  (create_shader (file->string "examples/external/shader-tutorials/bg.vert")
                 (file->string "examples/external/shader-tutorials/bg.frag")))

(bind-func draw
  (let ((fullscreen_verts:float* (zalloc 18))
        (res (pfill! fullscreen_verts
                     -1.0 -1.0 0.0
                     -1.0 1.0 0.0
                     1.0 1.0 0.0
                     1.0 1.0 0.0
                     1.0 -1.0 0.0
                     -1.0 -1.0 0.0))
        (vbo (create_vbo_packed_floats fullscreen_verts 18))
        (vao (create_vao_1 vbo 3)))
    (lambda (program)
      ;; set the uniforms
      (glUniform2f (glGetUniformLocation program "resolution") width height)
      (glUniform1f (glGetUniformLocation program "clock") (/ (convert (now)) 44100.))
      (glClear (+ GL_COLOR_BUFFER_BIT GL_DEPTH_BUFFER_BIT))
      (glUseProgram program)
      (glBindVertexArray vao)
      (glDrawArrays GL_TRIANGLES 0 2)
      void)))

(define gl-loop
  (lambda (time delta-t)
    (draw bg-shader-program)
    (gl:swap-buffers *gl-window*)
    ;; (println 'time: time)
    (callback (+ time (* *second* delta-t) 0.5)
              'gl-loop
              (+ time (* *second* delta-t)) 
              delta-t)))

(gl-loop (now) 1/30)
