;;; mpi.xtm -- OpenMPI bindings

;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: libopenmpi

;;; Commentary:

;; 

;;; Code:

(sys:load-preload-check 'mpi)
(define *xtmlib-mpi-loaded* #f)

;; set up the current dylib name and path (for precompilation)
(sys:precomp:set-dylib-name-info
 'libmpi
 (cond ((string=? (sys:platform) "OSX")
        "libmpi.dylib")
       ((string=? (sys:platform) "Linux")
        "libmpi.so")
       ((string=? (sys:platform) "Windows")
        "libmpi.dll")
       (else
        (begin (print-with-colors 'red 'default #f (print "Error"))
               (print ": unsupported platform ")
               (print-with-colors 'yellow 'default #f (print (sys:platform)))))))

;; load the dylib               
(define libmpi
  (sys:load-dylib (cdr *sys:precomp:current-load-dylib-info*)))

;; opaque struct pointers

(bind-alias MPI_Comm i8*) ;; ompi_communicator_t*
(bind-alias MPI_Datatype i8*) ;; ompi_datatype_t*
(bind-alias MPI_Errhandler i8*) ;; ompi_errhandler_t*
;; #if OMPI_PROVIDE_MPI_FILE_INTERFACE
;; (bind-alias MPI_File i8*) ;; ompi_file_t*
;; #endif
(bind-alias MPI_Group i8*) ;; ompi_group_t*
(bind-alias MPI_Info i8*) ;; ompi_info_t*
(bind-alias MPI_Op i8*) ;; ompi_op_t*
(bind-alias MPI_Request i8*) ;; ompi_request_t*
(bind-alias MPI_Message i8*) ;; ompi_message_t*
(bind-alias MPI_Status i8*) ;; ompi_status_public_t
(bind-alias MPI_Win i8*) ;; ompi_win_t*
(bind-alias MPI_T_enum i8*) ;; mca_base_var_enum_t*

(bind-lib libmpi MPI_Init [i32,i32*,i8***]*)
(bind-lib libmpi MPI_Comm_size [i32,MPI_Comm,i32*]*)
(bind-lib libmpi MPI_Comm_rank [i32,MPI_Comm,i32*]*)
(bind-lib libmpi MPI_Get_processor_name [i32,i8*,i32*]*)
(bind-lib libmpi MPI_Send [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm]*)
(bind-lib libmpi MPI_Recv [i32,i8*,i32,MPI_Datatype,i32,i32,MPI_Comm,MPI_Status*]*)
(bind-lib libmpi MPI_Abort [i32,MPI_Comm,i32]*)
(bind-lib libmpi MPI_Finalize [i32]*)

(bind-lib-val libmpi ompi_mpi_comm_world_addr MPI_Comm)
(bind-lib-val libmpi ompi_mpi_comm_self_addr MPI_Comm)
(bind-lib-val libmpi ompi_mpi_comm_null_addr MPI_Comm)

(bind-val MPI_COMM_WORLD MPI_Comm)
(bind-val MPI_COMM_SELF MPI_Comm)
(bind-val MPI_COMM_NULL MPI_Comm)
(call-as-xtlang (set! MPI_COMM_WORLD ompi_mpi_comm_world_addr))
(call-as-xtlang (set! MPI_COMM_SELF ompi_mpi_comm_self_addr))
(call-as-xtlang (set! MPI_COMM_NULL ompi_mpi_comm_null_addr))

;; opaque structs (but defining them as pointers)

(bind-alias ompi_predefined_datatype_t i8*)
(bind-lib-val libmpi ompi_mpi_unavailable ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_lb ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_ub ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_char ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_signed_char ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_unsigned_char ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_byte ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_short ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_unsigned_short ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_int ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_unsigned ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_long ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_unsigned_long ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_long_long_int ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_unsigned_long_long ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_float ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_double ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_long_double ompi_predefined_datatype_t)
;; /*
;;  * C++ / C99 datatypes
;;  */
(bind-lib-val libmpi ompi_mpi_c_bool ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_cxx_bool ompi_predefined_datatype_t)
;; /*
;;  * Complex datatypes for C (base types), C++, and fortran
;;  */
(bind-lib-val libmpi ompi_mpi_c_float_complex ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_c_complex ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_c_double_complex ompi_predefined_datatype_t)
(bind-lib-val libmpi ompi_mpi_c_long_double_complex ompi_predefined_datatype_t)

(bind-val  MPI_STATUS_IGNORE MPI_Status* 0)
(bind-val  MPI_STATUSES_IGNORE MPI_Status* 0)

(define *xtmlib-mpi-loaded* #t)
