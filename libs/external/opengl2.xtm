;; Author: Ben Swift
;; Keywords: extempore
;; Required dylibs: libGL.dylib libGLU.dylib libGLUT.dylib

;;; Commentary:

;; If you'd prefer to use a more modern OpenGL (version 3+) library,
;; then then you should use libs/external/opengl4.xtm instead

;;; Code:

;; Constants

(sys:precomp:set-dylib-name-info
 'libGL
 (cond ((string=? (sys:platform) "Linux")
        "libGL.so")
       ((string=? (sys:platform) "Windows")
        "Gl32.dll")
       ((string=? (sys:platform) "OSX")
        "/System/Library/Frameworks/OpenGL.framework/OpenGL")
       (else
        (begin (print-with-colors 'red 'default #f (print "Error"))
               (print ": unknown platform ")
               (print-with-colors 'yellow 'default #f (print (sys:platform)))))))

(define libGL
  (sys:load-dylib (cdr *sys:precomp:current-load-dylib-info*)))

;; if on windows also check for opengl32.dll
(if (or (eq? #f libGL) (null? libGL))
    (if (string=? "Windows" (sys:platform))
        (begin (set! libGL (sys:load-dylib "opengl32.dll"))
               (if (or (null? libGL)
                       (eq? #f libGL))
                   (sys:load-escape "Error loading opengl library")))
        (sys:load-escape "Error loading opengl library")))

;; (if (not (string=? (sys:platform) "Windows"))
;;     (begin (llvm:compile "declare i32 @glGetUniformBlockIndex(i32, i8*)")
;;            (llvm:compile "declare void @glUniformBlockBinding(i32, i32, i32)")
;;            (llvm:compile "declare void @glBindBufferRange(i32,i32,i32,i32,i32)")))

;; gltypes.h

(bind-alias GLenum i32) ;; unsigned int
(bind-alias GLboolean i8) ;; unsigned char
(bind-alias GLbitfield i32) ;; unsigned int
(bind-alias GLbyte i8) ;; signed char
(bind-alias GLshort i16)
(bind-alias GLint i32)
(bind-alias GLsizei i32)
(bind-alias GLubyte i8) ;; unsigned char
(bind-alias GLushort i16) ;; unsigned short
(bind-alias GLuint i32) ;; unsigned int
(bind-alias GLfloat float)
(bind-alias GLclampf float)
(bind-alias GLvoid i8) ;; actually 'void', but used as for void pointers
(bind-alias GLdouble double)
(bind-alias GLclampd double)

(bind-alias GLintptr i32)
(bind-alias GLsizeiptr i32)
(bind-alias GLchar i8)

;; gl.h

;; /* For compatibility with OpenGL v1.0 */
;; (bind-val ;; i32 GL_LOGIC_OP)
;; (bind-val ;; i32 GL_TEXTURE_COMPONENTS)

(bind-val GL_VERSION_1_1 i32 1)
(bind-val GL_VERSION_1_2 i32 1)
(bind-val GL_VERSION_1_3 i32 1)
(bind-val GL_VERSION_1_4 i32 1)
(bind-val GL_VERSION_1_5 i32 1)
(bind-val GL_VERSION_2_0 i32 1)
(bind-val GL_VERSION_2_1 i32 1)

;; /* AccumOp */
(bind-val GL_ACCUM                         i32 #x0100)
(bind-val GL_LOAD                          i32 #x0101)
(bind-val GL_RETURN                        i32 #x0102)
(bind-val GL_MULT                          i32 #x0103)
(bind-val GL_ADD                           i32 #x0104)

;; /* AlphaFunction */
(bind-val GL_NEVER                         i32 #x0200)
(bind-val GL_LESS                          i32 #x0201)
(bind-val GL_EQUAL                         i32 #x0202)
(bind-val GL_LEQUAL                        i32 #x0203)
(bind-val GL_GREATER                       i32 #x0204)
(bind-val GL_NOTEQUAL                      i32 #x0205)
(bind-val GL_GEQUAL                        i32 #x0206)
(bind-val GL_ALWAYS                        i32 #x0207)

;; /* AttribMask */
(bind-val GL_CURRENT_BIT                   i32 #x00000001)
(bind-val GL_POINT_BIT                     i32 #x00000002)
(bind-val GL_LINE_BIT                      i32 #x00000004)
(bind-val GL_POLYGON_BIT                   i32 #x00000008)
(bind-val GL_POLYGON_STIPPLE_BIT           i32 #x00000010)
(bind-val GL_PIXEL_MODE_BIT                i32 #x00000020)
(bind-val GL_LIGHTING_BIT                  i32 #x00000040)
(bind-val GL_FOG_BIT                       i32 #x00000080)
(bind-val GL_DEPTH_BUFFER_BIT              i32 #x00000100)
(bind-val GL_ACCUM_BUFFER_BIT              i32 #x00000200)
(bind-val GL_STENCIL_BUFFER_BIT            i32 #x00000400)
(bind-val GL_VIEWPORT_BIT                  i32 #x00000800)
(bind-val GL_TRANSFORM_BIT                 i32 #x00001000)
(bind-val GL_ENABLE_BIT                    i32 #x00002000)
(bind-val GL_COLOR_BUFFER_BIT              i32 #x00004000)
(bind-val GL_HINT_BIT                      i32 #x00008000)
(bind-val GL_EVAL_BIT                      i32 #x00010000)
(bind-val GL_LIST_BIT                      i32 #x00020000)
(bind-val GL_TEXTURE_BIT                   i32 #x00040000)
(bind-val GL_SCISSOR_BIT                   i32 #x00080000)
(bind-val GL_ALL_ATTRIB_BITS               i32 #x000fffff)

;; /* BeginMode */
(bind-val GL_POINTS                        i32 #x0000)
(bind-val GL_LINES                         i32 #x0001)
(bind-val GL_LINE_LOOP                     i32 #x0002)
(bind-val GL_LINE_STRIP                    i32 #x0003)
(bind-val GL_TRIANGLES                     i32 #x0004)
(bind-val GL_TRIANGLE_STRIP                i32 #x0005)
(bind-val GL_TRIANGLE_FAN                  i32 #x0006)
(bind-val GL_QUADS                         i32 #x0007)
(bind-val GL_QUAD_STRIP                    i32 #x0008)
(bind-val GL_POLYGON                       i32 #x0009)

;; /* BlendEquationMode */
;; /*      GL_LOGIC_OP */
;; /*      GL_FUNC_ADD */
;; /*      GL_MIN */
;; /*      GL_MAX */
;; /*      GL_FUNC_SUBTRACT */
;; /*      GL_FUNC_REVERSE_SUBTRACT */

;; /* BlendingFactorDest */
(bind-val GL_ZERO                           i32 0)
(bind-val GL_ONE                            i32 1)
(bind-val GL_SRC_COLOR                      i32 #x0300)
(bind-val GL_ONE_MINUS_SRC_COLOR            i32 #x0301)
(bind-val GL_SRC_ALPHA                      i32 #x0302)
(bind-val GL_ONE_MINUS_SRC_ALPHA            i32 #x0303)
(bind-val GL_DST_ALPHA                      i32 #x0304)
(bind-val GL_ONE_MINUS_DST_ALPHA            i32 #x0305)
;; /*      GL_CONSTANT_COLOR */
;; /*      GL_ONE_MINUS_CONSTANT_COLOR */
;; /*      GL_CONSTANT_ALPHA */
;; /*      GL_ONE_MINUS_CONSTANT_ALPHA */

;; /* BlendingFactorSrc */
;; /*      GL_ZERO */
;; /*      GL_ONE */
(bind-val GL_DST_COLOR                      i32 #x0306)
(bind-val GL_ONE_MINUS_DST_COLOR            i32 #x0307)
(bind-val GL_SRC_ALPHA_SATURATE             i32 #x0308)
;; /*      GL_SRC_ALPHA */
;; /*      GL_ONE_MINUS_SRC_ALPHA */
;; /*      GL_DST_ALPHA */
;; /*      GL_ONE_MINUS_DST_ALPHA */
;; /*      GL_CONSTANT_COLOR */
;; /*      GL_ONE_MINUS_CONSTANT_COLOR */
;; /*      GL_CONSTANT_ALPHA */
;; /*      GL_ONE_MINUS_CONSTANT_ALPHA */

;; /* Boolean */
(bind-val GL_TRUE                           i32 1)
(bind-val GL_FALSE                          i32 0)

;; /* ClearBufferMask */
;; /*      GL_COLOR_BUFFER_BIT */
;; /*      GL_ACCUM_BUFFER_BIT */
;; /*      GL_STENCIL_BUFFER_BIT */
;; /*      GL_DEPTH_BUFFER_BIT */

;; /* ClientArrayType */
;; /*      GL_VERTEX_ARRAY */
;; /*      GL_NORMAL_ARRAY */
;; /*      GL_COLOR_ARRAY */
;; /*      GL_INDEX_ARRAY */
;; /*      GL_TEXTURE_COORD_ARRAY */
;; /*      GL_EDGE_FLAG_ARRAY */

;; /* ClipPlaneName */
(bind-val GL_CLIP_PLANE0                    i32 #x3000)
(bind-val GL_CLIP_PLANE1                    i32 #x3001)
(bind-val GL_CLIP_PLANE2                    i32 #x3002)
(bind-val GL_CLIP_PLANE3                    i32 #x3003)
(bind-val GL_CLIP_PLANE4                    i32 #x3004)
(bind-val GL_CLIP_PLANE5                    i32 #x3005)

;; /* ColorMaterialFace */
;; /*      GL_FRONT */
;; /*      GL_BACK */
;; /*      GL_FRONT_AND_BACK */

;; /* ColorMaterialParameter */
;; /*      GL_AMBIENT */
;; /*      GL_DIFFUSE */
;; /*      GL_SPECULAR */
;; /*      GL_EMISSION */
;; /*      GL_AMBIENT_AND_DIFFUSE */

;; /* ColorPointerType */
;; /*      GL_BYTE */
;; /*      GL_UNSIGNED_BYTE */
;; /*      GL_SHORT */
;; /*      GL_UNSIGNED_SHORT */
;; /*      GL_INT */
;; /*      GL_UNSIGNED_INT */
;; /*      GL_FLOAT */
;; /*      GL_DOUBLE */

;; /* ColorTableParameterPName */
;; /*      GL_COLOR_TABLE_SCALE */
;; /*      GL_COLOR_TABLE_BIAS */

;; /* ColorTableTarget */
;; /*      GL_COLOR_TABLE */
;; /*      GL_POST_CONVOLUTION_COLOR_TABLE */
;; /*      GL_POST_COLOR_MATRIX_COLOR_TABLE */
;; /*      GL_PROXY_COLOR_TABLE */
;; /*      GL_PROXY_POST_CONVOLUTION_COLOR_TABLE */
;; /*      GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE */

;; /* ConvolutionBorderMode */
;; /*      GL_REDUCE */
;; /*      GL_IGNORE_BORDER */
;; /*      GL_CONSTANT_BORDER */

;; /* ConvolutionParameter */
;; /*      GL_CONVOLUTION_BORDER_MODE */
;; /*      GL_CONVOLUTION_FILTER_SCALE */
;; /*      GL_CONVOLUTION_FILTER_BIAS */

;; /* ConvolutionTarget */
;; /*      GL_CONVOLUTION_1D */
;; /*      GL_CONVOLUTION_2D */

;; /* CullFaceMode */
;; /*      GL_FRONT */
;; /*      GL_BACK */
;; /*      GL_FRONT_AND_BACK */

;; /* DataType */
(bind-val GL_BYTE                           i32 #x1400)
(bind-val GL_UNSIGNED_BYTE                  i32 #x1401)
(bind-val GL_SHORT                          i32 #x1402)
(bind-val GL_UNSIGNED_SHORT                 i32 #x1403)
(bind-val GL_INT                            i32 #x1404)
(bind-val GL_UNSIGNED_INT                   i32 #x1405)
(bind-val GL_FLOAT                          i32 #x1406)
(bind-val GL_2_BYTES                        i32 #x1407)
(bind-val GL_3_BYTES                        i32 #x1408)
(bind-val GL_4_BYTES                        i32 #x1409)
(bind-val GL_DOUBLE                         i32 #x140A)

;; /* DepthFunction */
;; /*      GL_NEVER */
;; /*      GL_LESS */
;; /*      GL_EQUAL */
;; /*      GL_LEQUAL */
;; /*      GL_GREATER */
;; /*      GL_NOTEQUAL */
;; /*      GL_GEQUAL */
;; /*      GL_ALWAYS */

;; /* DrawBufferMode */
(bind-val GL_NONE                           i32 0)
(bind-val GL_FRONT_LEFT                     i32 #x0400)
(bind-val GL_FRONT_RIGHT                    i32 #x0401)
(bind-val GL_BACK_LEFT                      i32 #x0402)
(bind-val GL_BACK_RIGHT                     i32 #x0403)
(bind-val GL_FRONT                          i32 #x0404)
(bind-val GL_BACK                           i32 #x0405)
(bind-val GL_LEFT                           i32 #x0406)
(bind-val GL_RIGHT                          i32 #x0407)
(bind-val GL_FRONT_AND_BACK                 i32 #x0408)
(bind-val GL_AUX0                           i32 #x0409)
(bind-val GL_AUX1                           i32 #x040A)
(bind-val GL_AUX2                           i32 #x040B)
(bind-val GL_AUX3                           i32 #x040C)

;; /* Enable */
;; /*      GL_FOG */
;; /*      GL_LIGHTING */
;; /*      GL_TEXTURE_1D */
;; /*      GL_TEXTURE_2D */
;; /*      GL_LINE_STIPPLE */
;; /*      GL_POLYGON_STIPPLE */
;; /*      GL_CULL_FACE */
;; /*      GL_ALPHA_TEST */
;; /*      GL_BLEND */
;; /*      GL_INDEX_LOGIC_OP */
;; /*      GL_COLOR_LOGIC_OP */
;; /*      GL_DITHER */
;; /*      GL_STENCIL_TEST */
;; /*      GL_DEPTH_TEST */
;; /*      GL_CLIP_PLANE0 */
;; /*      GL_CLIP_PLANE1 */
;; /*      GL_CLIP_PLANE2 */
;; /*      GL_CLIP_PLANE3 */
;; /*      GL_CLIP_PLANE4 */
;; /*      GL_CLIP_PLANE5 */
;; /*      GL_LIGHT0 */
;; /*      GL_LIGHT1 */
;; /*      GL_LIGHT2 */
;; /*      GL_LIGHT3 */
;; /*      GL_LIGHT4 */
;; /*      GL_LIGHT5 */
;; /*      GL_LIGHT6 */
;; /*      GL_LIGHT7 */
;; /*      GL_TEXTURE_GEN_S */
;; /*      GL_TEXTURE_GEN_T */
;; /*      GL_TEXTURE_GEN_R */
;; /*      GL_TEXTURE_GEN_Q */
;; /*      GL_MAP1_VERTEX_3 */
;; /*      GL_MAP1_VERTEX_4 */
;; /*      GL_MAP1_COLOR_4 */
;; /*      GL_MAP1_INDEX */
;; /*      GL_MAP1_NORMAL */
;; /*      GL_MAP1_TEXTURE_COORD_1 */
;; /*      GL_MAP1_TEXTURE_COORD_2 */
;; /*      GL_MAP1_TEXTURE_COORD_3 */
;; /*      GL_MAP1_TEXTURE_COORD_4 */
;; /*      GL_MAP2_VERTEX_3 */
;; /*      GL_MAP2_VERTEX_4 */
;; /*      GL_MAP2_COLOR_4 */
;; /*      GL_MAP2_INDEX */
;; /*      GL_MAP2_NORMAL */
;; /*      GL_MAP2_TEXTURE_COORD_1 */
;; /*      GL_MAP2_TEXTURE_COORD_2 */
;; /*      GL_MAP2_TEXTURE_COORD_3 */
;; /*      GL_MAP2_TEXTURE_COORD_4 */
;; /*      GL_POINT_SMOOTH */
;; /*      GL_LINE_SMOOTH */
;; /*      GL_POLYGON_SMOOTH */
;; /*      GL_SCISSOR_TEST */
;; /*      GL_COLOR_MATERIAL */
;; /*      GL_NORMALIZE */
;; /*      GL_AUTO_NORMAL */
;; /*      GL_VERTEX_ARRAY */
;; /*      GL_NORMAL_ARRAY */
;; /*      GL_COLOR_ARRAY */
;; /*      GL_INDEX_ARRAY */
;; /*      GL_TEXTURE_COORD_ARRAY */
;; /*      GL_EDGE_FLAG_ARRAY */
;; /*      GL_POLYGON_OFFSET_POINT */
;; /*      GL_POLYGON_OFFSET_LINE */
;; /*      GL_POLYGON_OFFSET_FILL */
;; /*      GL_COLOR_TABLE */
;; /*      GL_POST_CONVOLUTION_COLOR_TABLE */
;; /*      GL_POST_COLOR_MATRIX_COLOR_TABLE */
;; /*      GL_CONVOLUTION_1D */
;; /*      GL_CONVOLUTION_2D */
;; /*      GL_SEPARABLE_2D */
;; /*      GL_HISTOGRAM */
;; /*      GL_MINMAX */
;; /*      GL_RESCALE_NORMAL */
;; /*      GL_TEXTURE_3D */

;; /* ErrorCode */
(bind-val GL_NO_ERROR                       i32 0)
(bind-val GL_INVALID_ENUM                   i32 #x0500)
(bind-val GL_INVALID_VALUE                  i32 #x0501)
(bind-val GL_INVALID_OPERATION              i32 #x0502)
(bind-val GL_STACK_OVERFLOW                 i32 #x0503)
(bind-val GL_STACK_UNDERFLOW                i32 #x0504)
(bind-val GL_OUT_OF_MEMORY                  i32 #x0505)
;; /*      GL_TABLE_TOO_LARGE */

;; /* FeedBackMode */
(bind-val GL_2D                             i32 #x0600)
(bind-val GL_3D                             i32 #x0601)
(bind-val GL_3D_COLOR                       i32 #x0602)
(bind-val GL_3D_COLOR_TEXTURE               i32 #x0603)
(bind-val GL_4D_COLOR_TEXTURE               i32 #x0604)

;; /* FeedBackToken */
(bind-val GL_PASS_THROUGH_TOKEN             i32 #x0700)
(bind-val GL_POINT_TOKEN                    i32 #x0701)
(bind-val GL_LINE_TOKEN                     i32 #x0702)
(bind-val GL_POLYGON_TOKEN                  i32 #x0703)
(bind-val GL_BITMAP_TOKEN                   i32 #x0704)
(bind-val GL_DRAW_PIXEL_TOKEN               i32 #x0705)
(bind-val GL_COPY_PIXEL_TOKEN               i32 #x0706)
(bind-val GL_LINE_RESET_TOKEN               i32 #x0707)

;; /* FogMode */
;; /*      GL_LINEAR */
(bind-val GL_EXP                            i32 #x0800)
(bind-val GL_EXP2                           i32 #x0801)

;; /* FogParameter */
;; /*      GL_FOG_COLOR */
;; /*      GL_FOG_DENSITY */
;; /*      GL_FOG_END */
;; /*      GL_FOG_INDEX */
;; /*      GL_FOG_MODE */
;; /*      GL_FOG_START */

;; /* FrontFaceDirection */
(bind-val GL_CW                             i32 #x0900)
(bind-val GL_CCW                            i32 #x0901)

;; /* GetColorTableParameterPName */
;; /*      GL_COLOR_TABLE_SCALE */
;; /*      GL_COLOR_TABLE_BIAS */
;; /*      GL_COLOR_TABLE_FORMAT */
;; /*      GL_COLOR_TABLE_WIDTH */
;; /*      GL_COLOR_TABLE_RED_SIZE */
;; /*      GL_COLOR_TABLE_GREEN_SIZE */
;; /*      GL_COLOR_TABLE_BLUE_SIZE */
;; /*      GL_COLOR_TABLE_ALPHA_SIZE */
;; /*      GL_COLOR_TABLE_LUMINANCE_SIZE */
;; /*      GL_COLOR_TABLE_INTENSITY_SIZE */

;; /* GetConvolutionParameterPName */
;; /*      GL_CONVOLUTION_BORDER_COLOR */
;; /*      GL_CONVOLUTION_BORDER_MODE */
;; /*      GL_CONVOLUTION_FILTER_SCALE */
;; /*      GL_CONVOLUTION_FILTER_BIAS */
;; /*      GL_CONVOLUTION_FORMAT */
;; /*      GL_CONVOLUTION_WIDTH */
;; /*      GL_CONVOLUTION_HEIGHT */
;; /*      GL_MAX_CONVOLUTION_WIDTH */
;; /*      GL_MAX_CONVOLUTION_HEIGHT */

;; /* GetHistogramParameterPName */
;; /*      GL_HISTOGRAM_WIDTH */
;; /*      GL_HISTOGRAM_FORMAT */
;; /*      GL_HISTOGRAM_RED_SIZE */
;; /*      GL_HISTOGRAM_GREEN_SIZE */
;; /*      GL_HISTOGRAM_BLUE_SIZE */
;; /*      GL_HISTOGRAM_ALPHA_SIZE */
;; /*      GL_HISTOGRAM_LUMINANCE_SIZE */
;; /*      GL_HISTOGRAM_SINK */

;; /* GetMapTarget */
(bind-val GL_COEFF                          i32 #x0A00)
(bind-val GL_ORDER                          i32 #x0A01)
(bind-val GL_DOMAIN                         i32 #x0A02)

;; /* GetMinmaxParameterPName */
;; /*      GL_MINMAX_FORMAT */
;; /*      GL_MINMAX_SINK */

;; /* GetPixelMap */
;; /*      GL_PIXEL_MAP_I_TO_I */
;; /*      GL_PIXEL_MAP_S_TO_S */
;; /*      GL_PIXEL_MAP_I_TO_R */
;; /*      GL_PIXEL_MAP_I_TO_G */
;; /*      GL_PIXEL_MAP_I_TO_B */
;; /*      GL_PIXEL_MAP_I_TO_A */
;; /*      GL_PIXEL_MAP_R_TO_R */
;; /*      GL_PIXEL_MAP_G_TO_G */
;; /*      GL_PIXEL_MAP_B_TO_B */
;; /*      GL_PIXEL_MAP_A_TO_A */

;; /* GetPointerTarget */
;; /*      GL_VERTEX_ARRAY_POINTER */
;; /*      GL_NORMAL_ARRAY_POINTER */
;; /*      GL_COLOR_ARRAY_POINTER */
;; /*      GL_INDEX_ARRAY_POINTER */
;; /*      GL_TEXTURE_COORD_ARRAY_POINTER */
;; /*      GL_EDGE_FLAG_ARRAY_POINTER */

;; /* GetTarget */
(bind-val GL_CURRENT_COLOR                  i32 #x0B00)
(bind-val GL_CURRENT_INDEX                  i32 #x0B01)
(bind-val GL_CURRENT_NORMAL                 i32 #x0B02)
(bind-val GL_CURRENT_TEXTURE_COORDS         i32 #x0B03)
(bind-val GL_CURRENT_RASTER_COLOR           i32 #x0B04)
(bind-val GL_CURRENT_RASTER_INDEX           i32 #x0B05)
(bind-val GL_CURRENT_RASTER_TEXTURE_COORDS  i32 #x0B06)
(bind-val GL_CURRENT_RASTER_POSITION        i32 #x0B07)
(bind-val GL_CURRENT_RASTER_POSITION_VALID  i32 #x0B08)
(bind-val GL_CURRENT_RASTER_DISTANCE        i32 #x0B09)
(bind-val GL_POINT_SMOOTH                   i32 #x0B10)
(bind-val GL_POINT_SIZE                     i32 #x0B11)
(bind-val GL_POINT_SIZE_RANGE               i32 #x0B12)
(bind-val GL_POINT_SIZE_GRANULARITY         i32 #x0B13)
(bind-val GL_LINE_SMOOTH                    i32 #x0B20)
(bind-val GL_LINE_WIDTH                     i32 #x0B21)
(bind-val GL_LINE_WIDTH_RANGE               i32 #x0B22)
(bind-val GL_LINE_WIDTH_GRANULARITY         i32 #x0B23)
(bind-val GL_LINE_STIPPLE                   i32 #x0B24)
(bind-val GL_LINE_STIPPLE_PATTERN           i32 #x0B25)
(bind-val GL_LINE_STIPPLE_REPEAT            i32 #x0B26)
;; /*      GL_SMOOTH_POINT_SIZE_RANGE */
;; /*      GL_SMOOTH_POINT_SIZE_GRANULARITY */
;; /*      GL_SMOOTH_LINE_WIDTH_RANGE */
;; /*      GL_SMOOTH_LINE_WIDTH_GRANULARITY */
;; /*      GL_ALIASED_POINT_SIZE_RANGE */
;; /*      GL_ALIASED_LINE_WIDTH_RANGE */
(bind-val GL_LIST_MODE                      i32 #x0B30)
(bind-val GL_MAX_LIST_NESTING               i32 #x0B31)
(bind-val GL_LIST_BASE                      i32 #x0B32)
(bind-val GL_LIST_INDEX                     i32 #x0B33)
(bind-val GL_POLYGON_MODE                   i32 #x0B40)
(bind-val GL_POLYGON_SMOOTH                 i32 #x0B41)
(bind-val GL_POLYGON_STIPPLE                i32 #x0B42)
(bind-val GL_EDGE_FLAG                      i32 #x0B43)
(bind-val GL_CULL_FACE                      i32 #x0B44)
(bind-val GL_CULL_FACE_MODE                 i32 #x0B45)
(bind-val GL_FRONT_FACE                     i32 #x0B46)
(bind-val GL_LIGHTING                       i32 #x0B50)
(bind-val GL_LIGHT_MODEL_LOCAL_VIEWER       i32 #x0B51)
(bind-val GL_LIGHT_MODEL_TWO_SIDE           i32 #x0B52)
(bind-val GL_LIGHT_MODEL_AMBIENT            i32 #x0B53)
(bind-val GL_SHADE_MODEL                    i32 #x0B54)
(bind-val GL_COLOR_MATERIAL_FACE            i32 #x0B55)
(bind-val GL_COLOR_MATERIAL_PARAMETER       i32 #x0B56)
(bind-val GL_COLOR_MATERIAL                 i32 #x0B57)
(bind-val GL_FOG                            i32 #x0B60)
(bind-val GL_FOG_INDEX                      i32 #x0B61)
(bind-val GL_FOG_DENSITY                    i32 #x0B62)
(bind-val GL_FOG_START                      i32 #x0B63)
(bind-val GL_FOG_END                        i32 #x0B64)
(bind-val GL_FOG_MODE                       i32 #x0B65)
(bind-val GL_FOG_COLOR                      i32 #x0B66)
(bind-val GL_DEPTH_RANGE                    i32 #x0B70)
(bind-val GL_DEPTH_TEST                     i32 #x0B71)
(bind-val GL_DEPTH_WRITEMASK                i32 #x0B72)
(bind-val GL_DEPTH_CLEAR_VALUE              i32 #x0B73)
(bind-val GL_DEPTH_FUNC                     i32 #x0B74)
(bind-val GL_ACCUM_CLEAR_VALUE              i32 #x0B80)
(bind-val GL_STENCIL_TEST                   i32 #x0B90)
(bind-val GL_STENCIL_CLEAR_VALUE            i32 #x0B91)
(bind-val GL_STENCIL_FUNC                   i32 #x0B92)
(bind-val GL_STENCIL_VALUE_MASK             i32 #x0B93)
(bind-val GL_STENCIL_FAIL                   i32 #x0B94)
(bind-val GL_STENCIL_PASS_DEPTH_FAIL        i32 #x0B95)
(bind-val GL_STENCIL_PASS_DEPTH_PASS        i32 #x0B96)
(bind-val GL_STENCIL_REF                    i32 #x0B97)
(bind-val GL_STENCIL_WRITEMASK              i32 #x0B98)
(bind-val GL_MATRIX_MODE                    i32 #x0BA0)
(bind-val GL_NORMALIZE                      i32 #x0BA1)
(bind-val GL_VIEWPORT                       i32 #x0BA2)
(bind-val GL_MODELVIEW_STACK_DEPTH          i32 #x0BA3)
(bind-val GL_PROJECTION_STACK_DEPTH         i32 #x0BA4)
(bind-val GL_TEXTURE_STACK_DEPTH            i32 #x0BA5)
(bind-val GL_MODELVIEW_MATRIX               i32 #x0BA6)
(bind-val GL_PROJECTION_MATRIX              i32 #x0BA7)
(bind-val GL_TEXTURE_MATRIX                 i32 #x0BA8)
(bind-val GL_ATTRIB_STACK_DEPTH             i32 #x0BB0)
(bind-val GL_CLIENT_ATTRIB_STACK_DEPTH      i32 #x0BB1)
(bind-val GL_ALPHA_TEST                     i32 #x0BC0)
(bind-val GL_ALPHA_TEST_FUNC                i32 #x0BC1)
(bind-val GL_ALPHA_TEST_REF                 i32 #x0BC2)
(bind-val GL_DITHER                         i32 #x0BD0)
(bind-val GL_BLEND_DST                      i32 #x0BE0)
(bind-val GL_BLEND_SRC                      i32 #x0BE1)
(bind-val GL_BLEND                          i32 #x0BE2)
(bind-val GL_LOGIC_OP_MODE                  i32 #x0BF0)
(bind-val GL_INDEX_LOGIC_OP                 i32 #x0BF1)
(bind-val GL_COLOR_LOGIC_OP                 i32 #x0BF2)
(bind-val GL_AUX_BUFFERS                    i32 #x0C00)
(bind-val GL_DRAW_BUFFER                    i32 #x0C01)
(bind-val GL_READ_BUFFER                    i32 #x0C02)
(bind-val GL_SCISSOR_BOX                    i32 #x0C10)
(bind-val GL_SCISSOR_TEST                   i32 #x0C11)
(bind-val GL_INDEX_CLEAR_VALUE              i32 #x0C20)
(bind-val GL_INDEX_WRITEMASK                i32 #x0C21)
(bind-val GL_COLOR_CLEAR_VALUE              i32 #x0C22)
(bind-val GL_COLOR_WRITEMASK                i32 #x0C23)
(bind-val GL_INDEX_MODE                     i32 #x0C30)
(bind-val GL_RGBA_MODE                      i32 #x0C31)
(bind-val GL_DOUBLEBUFFER                   i32 #x0C32)
(bind-val GL_STEREO                         i32 #x0C33)
(bind-val GL_RENDER_MODE                    i32 #x0C40)
(bind-val GL_PERSPECTIVE_CORRECTION_HINT    i32 #x0C50)
(bind-val GL_POINT_SMOOTH_HINT              i32 #x0C51)
(bind-val GL_LINE_SMOOTH_HINT               i32 #x0C52)
(bind-val GL_POLYGON_SMOOTH_HINT            i32 #x0C53)
(bind-val GL_FOG_HINT                       i32 #x0C54)
(bind-val GL_TEXTURE_GEN_S                  i32 #x0C60)
(bind-val GL_TEXTURE_GEN_T                  i32 #x0C61)
(bind-val GL_TEXTURE_GEN_R                  i32 #x0C62)
(bind-val GL_TEXTURE_GEN_Q                  i32 #x0C63)
(bind-val GL_PIXEL_MAP_I_TO_I               i32 #x0C70)
(bind-val GL_PIXEL_MAP_S_TO_S               i32 #x0C71)
(bind-val GL_PIXEL_MAP_I_TO_R               i32 #x0C72)
(bind-val GL_PIXEL_MAP_I_TO_G               i32 #x0C73)
(bind-val GL_PIXEL_MAP_I_TO_B               i32 #x0C74)
(bind-val GL_PIXEL_MAP_I_TO_A               i32 #x0C75)
(bind-val GL_PIXEL_MAP_R_TO_R               i32 #x0C76)
(bind-val GL_PIXEL_MAP_G_TO_G               i32 #x0C77)
(bind-val GL_PIXEL_MAP_B_TO_B               i32 #x0C78)
(bind-val GL_PIXEL_MAP_A_TO_A               i32 #x0C79)
(bind-val GL_PIXEL_MAP_I_TO_I_SIZE          i32 #x0CB0)
(bind-val GL_PIXEL_MAP_S_TO_S_SIZE          i32 #x0CB1)
(bind-val GL_PIXEL_MAP_I_TO_R_SIZE          i32 #x0CB2)
(bind-val GL_PIXEL_MAP_I_TO_G_SIZE          i32 #x0CB3)
(bind-val GL_PIXEL_MAP_I_TO_B_SIZE          i32 #x0CB4)
(bind-val GL_PIXEL_MAP_I_TO_A_SIZE          i32 #x0CB5)
(bind-val GL_PIXEL_MAP_R_TO_R_SIZE          i32 #x0CB6)
(bind-val GL_PIXEL_MAP_G_TO_G_SIZE          i32 #x0CB7)
(bind-val GL_PIXEL_MAP_B_TO_B_SIZE          i32 #x0CB8)
(bind-val GL_PIXEL_MAP_A_TO_A_SIZE          i32 #x0CB9)
(bind-val GL_UNPACK_SWAP_BYTES              i32 #x0CF0)
(bind-val GL_UNPACK_LSB_FIRST               i32 #x0CF1)
(bind-val GL_UNPACK_ROW_LENGTH              i32 #x0CF2)
(bind-val GL_UNPACK_SKIP_ROWS               i32 #x0CF3)
(bind-val GL_UNPACK_SKIP_PIXELS             i32 #x0CF4)
(bind-val GL_UNPACK_ALIGNMENT               i32 #x0CF5)
(bind-val GL_PACK_SWAP_BYTES                i32 #x0D00)
(bind-val GL_PACK_LSB_FIRST                 i32 #x0D01)
(bind-val GL_PACK_ROW_LENGTH                i32 #x0D02)
(bind-val GL_PACK_SKIP_ROWS                 i32 #x0D03)
(bind-val GL_PACK_SKIP_PIXELS               i32 #x0D04)
(bind-val GL_PACK_ALIGNMENT                 i32 #x0D05)
(bind-val GL_MAP_COLOR                      i32 #x0D10)
(bind-val GL_MAP_STENCIL                    i32 #x0D11)
(bind-val GL_INDEX_SHIFT                    i32 #x0D12)
(bind-val GL_INDEX_OFFSET                   i32 #x0D13)
(bind-val GL_RED_SCALE                      i32 #x0D14)
(bind-val GL_RED_BIAS                       i32 #x0D15)
(bind-val GL_ZOOM_X                         i32 #x0D16)
(bind-val GL_ZOOM_Y                         i32 #x0D17)
(bind-val GL_GREEN_SCALE                    i32 #x0D18)
(bind-val GL_GREEN_BIAS                     i32 #x0D19)
(bind-val GL_BLUE_SCALE                     i32 #x0D1A)
(bind-val GL_BLUE_BIAS                      i32 #x0D1B)
(bind-val GL_ALPHA_SCALE                    i32 #x0D1C)
(bind-val GL_ALPHA_BIAS                     i32 #x0D1D)
(bind-val GL_DEPTH_SCALE                    i32 #x0D1E)
(bind-val GL_DEPTH_BIAS                     i32 #x0D1F)
(bind-val GL_MAX_EVAL_ORDER                 i32 #x0D30)
(bind-val GL_MAX_LIGHTS                     i32 #x0D31)
(bind-val GL_MAX_CLIP_PLANES                i32 #x0D32)
(bind-val GL_MAX_TEXTURE_SIZE               i32 #x0D33)
(bind-val GL_MAX_PIXEL_MAP_TABLE            i32 #x0D34)
(bind-val GL_MAX_ATTRIB_STACK_DEPTH         i32 #x0D35)
(bind-val GL_MAX_MODELVIEW_STACK_DEPTH      i32 #x0D36)
(bind-val GL_MAX_NAME_STACK_DEPTH           i32 #x0D37)
(bind-val GL_MAX_PROJECTION_STACK_DEPTH     i32 #x0D38)
(bind-val GL_MAX_TEXTURE_STACK_DEPTH        i32 #x0D39)
(bind-val GL_MAX_VIEWPORT_DIMS              i32 #x0D3A)
(bind-val GL_MAX_CLIENT_ATTRIB_STACK_DEPTH  i32 #x0D3B)
(bind-val GL_SUBPIXEL_BITS                  i32 #x0D50)
(bind-val GL_INDEX_BITS                     i32 #x0D51)
(bind-val GL_RED_BITS                       i32 #x0D52)
(bind-val GL_GREEN_BITS                     i32 #x0D53)
(bind-val GL_BLUE_BITS                      i32 #x0D54)
(bind-val GL_ALPHA_BITS                     i32 #x0D55)
(bind-val GL_DEPTH_BITS                     i32 #x0D56)
(bind-val GL_STENCIL_BITS                   i32 #x0D57)
(bind-val GL_ACCUM_RED_BITS                 i32 #x0D58)
(bind-val GL_ACCUM_GREEN_BITS               i32 #x0D59)
(bind-val GL_ACCUM_BLUE_BITS                i32 #x0D5A)
(bind-val GL_ACCUM_ALPHA_BITS               i32 #x0D5B)
(bind-val GL_NAME_STACK_DEPTH               i32 #x0D70)
(bind-val GL_AUTO_NORMAL                    i32 #x0D80)
(bind-val GL_MAP1_COLOR_4                   i32 #x0D90)
(bind-val GL_MAP1_INDEX                     i32 #x0D91)
(bind-val GL_MAP1_NORMAL                    i32 #x0D92)
(bind-val GL_MAP1_TEXTURE_COORD_1           i32 #x0D93)
(bind-val GL_MAP1_TEXTURE_COORD_2           i32 #x0D94)
(bind-val GL_MAP1_TEXTURE_COORD_3           i32 #x0D95)
(bind-val GL_MAP1_TEXTURE_COORD_4           i32 #x0D96)
(bind-val GL_MAP1_VERTEX_3                  i32 #x0D97)
(bind-val GL_MAP1_VERTEX_4                  i32 #x0D98)
(bind-val GL_MAP2_COLOR_4                   i32 #x0DB0)
(bind-val GL_MAP2_INDEX                     i32 #x0DB1)
(bind-val GL_MAP2_NORMAL                    i32 #x0DB2)
(bind-val GL_MAP2_TEXTURE_COORD_1           i32 #x0DB3)
(bind-val GL_MAP2_TEXTURE_COORD_2           i32 #x0DB4)
(bind-val GL_MAP2_TEXTURE_COORD_3           i32 #x0DB5)
(bind-val GL_MAP2_TEXTURE_COORD_4           i32 #x0DB6)
(bind-val GL_MAP2_VERTEX_3                  i32 #x0DB7)
(bind-val GL_MAP2_VERTEX_4                  i32 #x0DB8)
(bind-val GL_MAP1_GRID_DOMAIN               i32 #x0DD0)
(bind-val GL_MAP1_GRID_SEGMENTS             i32 #x0DD1)
(bind-val GL_MAP2_GRID_DOMAIN               i32 #x0DD2)
(bind-val GL_MAP2_GRID_SEGMENTS             i32 #x0DD3)
(bind-val GL_TEXTURE_1D                     i32 #x0DE0)
(bind-val GL_TEXTURE_2D                     i32 #x0DE1)
(bind-val GL_FEEDBACK_BUFFER_POINTER        i32 #x0DF0)
(bind-val GL_FEEDBACK_BUFFER_SIZE           i32 #x0DF1)
(bind-val GL_FEEDBACK_BUFFER_TYPE           i32 #x0DF2)
(bind-val GL_SELECTION_BUFFER_POINTER       i32 #x0DF3)
(bind-val GL_SELECTION_BUFFER_SIZE          i32 #x0DF4)
;; /*      GL_TEXTURE_BINDING_1D */
;; /*      GL_TEXTURE_BINDING_2D */
;; /*      GL_TEXTURE_BINDING_3D */
;; /*      GL_VERTEX_ARRAY */
;; /*      GL_NORMAL_ARRAY */
;; /*      GL_COLOR_ARRAY */
;; /*      GL_INDEX_ARRAY */
;; /*      GL_TEXTURE_COORD_ARRAY */
;; /*      GL_EDGE_FLAG_ARRAY */
;; /*      GL_VERTEX_ARRAY_SIZE */
;; /*      GL_VERTEX_ARRAY_TYPE */
;; /*      GL_VERTEX_ARRAY_STRIDE */
;; /*      GL_NORMAL_ARRAY_TYPE */
;; /*      GL_NORMAL_ARRAY_STRIDE */
;; /*      GL_COLOR_ARRAY_SIZE */
;; /*      GL_COLOR_ARRAY_TYPE */
;; /*      GL_COLOR_ARRAY_STRIDE */
;; /*      GL_INDEX_ARRAY_TYPE */
;; /*      GL_INDEX_ARRAY_STRIDE */
;; /*      GL_TEXTURE_COORD_ARRAY_SIZE */
;; /*      GL_TEXTURE_COORD_ARRAY_TYPE */
;; /*      GL_TEXTURE_COORD_ARRAY_STRIDE */
;; /*      GL_EDGE_FLAG_ARRAY_STRIDE */
;; /*      GL_POLYGON_OFFSET_FACTOR */
;; /*      GL_POLYGON_OFFSET_UNITS */
;; /*      GL_COLOR_TABLE */
;; /*      GL_POST_CONVOLUTION_COLOR_TABLE */
;; /*      GL_POST_COLOR_MATRIX_COLOR_TABLE */
;; /*      GL_CONVOLUTION_1D */
;; /*      GL_CONVOLUTION_2D */
;; /*      GL_SEPARABLE_2D */
;; /*      GL_POST_CONVOLUTION_RED_SCALE */
;; /*      GL_POST_CONVOLUTION_GREEN_SCALE */
;; /*      GL_POST_CONVOLUTION_BLUE_SCALE */
;; /*      GL_POST_CONVOLUTION_ALPHA_SCALE */
;; /*      GL_POST_CONVOLUTION_RED_BIAS */
;; /*      GL_POST_CONVOLUTION_GREEN_BIAS */
;; /*      GL_POST_CONVOLUTION_BLUE_BIAS */
;; /*      GL_POST_CONVOLUTION_ALPHA_BIAS */
;; /*      GL_COLOR_MATRIX */
;; /*      GL_COLOR_MATRIX_STACK_DEPTH */
;; /*      GL_MAX_COLOR_MATRIX_STACK_DEPTH */
;; /*      GL_POST_COLOR_MATRIX_RED_SCALE */
;; /*      GL_POST_COLOR_MATRIX_GREEN_SCALE */
;; /*      GL_POST_COLOR_MATRIX_BLUE_SCALE */
;; /*      GL_POST_COLOR_MATRIX_ALPHA_SCALE */
;; /*      GL_POST_COLOR_MATRIX_RED_BIAS */
;; /*      GL_POST_COLOR_MATRIX_GREEN_BIAS */
;; /*      GL_POST_COLOR_MATRIX_BLUE_BIAS */
;; /*      GL_POST_COLOR_MATRIX_ALPHA_BIAS */
;; /*      GL_HISTOGRAM */
;; /*      GL_MINMAX */
;; /*      GL_MAX_ELEMENTS_VERTICES */
;; /*      GL_MAX_ELEMENTS_INDICES */
;; /*      GL_RESCALE_NORMAL */
;; /*      GL_LIGHT_MODEL_COLOR_CONTROL */
;; /*      GL_PACK_SKIP_IMAGES */
;; /*      GL_PACK_IMAGE_HEIGHT */
;; /*      GL_UNPACK_SKIP_IMAGES */
;; /*      GL_UNPACK_IMAGE_HEIGHT */
;; /*      GL_TEXTURE_3D */
;; /*      GL_MAX_3D_TEXTURE_SIZE */
;; /*      GL_BLEND_COLOR */
;; /*      GL_BLEND_EQUATION */

;; /* GetTextureParameter */
;; /*      GL_TEXTURE_MAG_FILTER */
;; /*      GL_TEXTURE_MIN_FILTER */
;; /*      GL_TEXTURE_WRAP_S */
;; /*      GL_TEXTURE_WRAP_T */
(bind-val GL_TEXTURE_WIDTH                  i32 #x1000)
(bind-val GL_TEXTURE_HEIGHT                 i32 #x1001)
(bind-val GL_TEXTURE_INTERNAL_FORMAT        i32 #x1003)
(bind-val GL_TEXTURE_BORDER_COLOR           i32 #x1004)
(bind-val GL_TEXTURE_BORDER                 i32 #x1005)
;; /*      GL_TEXTURE_RED_SIZE */
;; /*      GL_TEXTURE_GREEN_SIZE */
;; /*      GL_TEXTURE_BLUE_SIZE */
;; /*      GL_TEXTURE_ALPHA_SIZE */
;; /*      GL_TEXTURE_LUMINANCE_SIZE */
;; /*      GL_TEXTURE_INTENSITY_SIZE */
;; /*      GL_TEXTURE_PRIORITY */
;; /*      GL_TEXTURE_RESIDENT */
;; /*      GL_TEXTURE_DEPTH */
;; /*      GL_TEXTURE_WRAP_R */
;; /*      GL_TEXTURE_MIN_LOD */
;; /*      GL_TEXTURE_MAX_LOD */
;; /*      GL_TEXTURE_BASE_LEVEL */
;; /*      GL_TEXTURE_MAX_LEVEL */

;; /* HintMode */
(bind-val GL_DONT_CARE                      i32 #x1100)
(bind-val GL_FASTEST                        i32 #x1101)
(bind-val GL_NICEST                         i32 #x1102)

;; /* HintTarget */
;; /*      GL_PERSPECTIVE_CORRECTION_HINT */
;; /*      GL_POINT_SMOOTH_HINT */
;; /*      GL_LINE_SMOOTH_HINT */
;; /*      GL_POLYGON_SMOOTH_HINT */
;; /*      GL_FOG_HINT */

;; /* HistogramTarget */
;; /*      GL_HISTOGRAM */
;; /*      GL_PROXY_HISTOGRAM */

;; /* IndexPointerType */
;; /*      GL_SHORT */
;; /*      GL_INT */
;; /*      GL_FLOAT */
;; /*      GL_DOUBLE */

;; /* LightModelColorControl */
;; /*      GL_SINGLE_COLOR */
;; /*      GL_SEPARATE_SPECULAR_COLOR */

;; /* LightModelParameter */
;; /*      GL_LIGHT_MODEL_AMBIENT */
;; /*      GL_LIGHT_MODEL_LOCAL_VIEWER */
;; /*      GL_LIGHT_MODEL_TWO_SIDE */
;; /*      GL_LIGHT_MODEL_COLOR_CONTROL */

;; /* LightName */
(bind-val GL_LIGHT0                         i32 #x4000)
(bind-val GL_LIGHT1                         i32 #x4001)
(bind-val GL_LIGHT2                         i32 #x4002)
(bind-val GL_LIGHT3                         i32 #x4003)
(bind-val GL_LIGHT4                         i32 #x4004)
(bind-val GL_LIGHT5                         i32 #x4005)
(bind-val GL_LIGHT6                         i32 #x4006)
(bind-val GL_LIGHT7                         i32 #x4007)

;; /* LightParameter */
(bind-val GL_AMBIENT                        i32 #x1200)
(bind-val GL_DIFFUSE                        i32 #x1201)
(bind-val GL_SPECULAR                       i32 #x1202)
(bind-val GL_POSITION                       i32 #x1203)
(bind-val GL_SPOT_DIRECTION                 i32 #x1204)
(bind-val GL_SPOT_EXPONENT                  i32 #x1205)
(bind-val GL_SPOT_CUTOFF                    i32 #x1206)
(bind-val GL_CONSTANT_ATTENUATION           i32 #x1207)
(bind-val GL_LINEAR_ATTENUATION             i32 #x1208)
(bind-val GL_QUADRATIC_ATTENUATION          i32 #x1209)

;; /* InterleavedArrays */
;; /*      GL_V2F */
;; /*      GL_V3F */
;; /*      GL_C4UB_V2F */
;; /*      GL_C4UB_V3F */
;; /*      GL_C3F_V3F */
;; /*      GL_N3F_V3F */
;; /*      GL_C4F_N3F_V3F */
;; /*      GL_T2F_V3F */
;; /*      GL_T4F_V4F */
;; /*      GL_T2F_C4UB_V3F */
;; /*      GL_T2F_C3F_V3F */
;; /*      GL_T2F_N3F_V3F */
;; /*      GL_T2F_C4F_N3F_V3F */
;; /*      GL_T4F_C4F_N3F_V4F */

;; /* ListMode */
(bind-val GL_COMPILE                        i32 #x1300)
(bind-val GL_COMPILE_AND_EXECUTE            i32 #x1301)

;; /* ListNameType */
;; /*      GL_BYTE */
;; /*      GL_UNSIGNED_BYTE */
;; /*      GL_SHORT */
;; /*      GL_UNSIGNED_SHORT */
;; /*      GL_INT */
;; /*      GL_UNSIGNED_INT */
;; /*      GL_FLOAT */
;; /*      GL_2_BYTES */
;; /*      GL_3_BYTES */
;; /*      GL_4_BYTES */

;; /* LogicOp */
(bind-val GL_CLEAR                          i32 #x1500)
(bind-val GL_AND                            i32 #x1501)
(bind-val GL_AND_REVERSE                    i32 #x1502)
(bind-val GL_COPY                           i32 #x1503)
(bind-val GL_AND_INVERTED                   i32 #x1504)
(bind-val GL_NOOP                           i32 #x1505)
(bind-val GL_XOR                            i32 #x1506)
(bind-val GL_OR                             i32 #x1507)
(bind-val GL_NOR                            i32 #x1508)
(bind-val GL_EQUIV                          i32 #x1509)
(bind-val GL_INVERT                         i32 #x150A)
(bind-val GL_OR_REVERSE                     i32 #x150B)
(bind-val GL_COPY_INVERTED                  i32 #x150C)
(bind-val GL_OR_INVERTED                    i32 #x150D)
(bind-val GL_NAND                           i32 #x150E)
(bind-val GL_SET                            i32 #x150F)

;; /* MapTarget */
;; /*      GL_MAP1_COLOR_4 */
;; /*      GL_MAP1_INDEX */
;; /*      GL_MAP1_NORMAL */
;; /*      GL_MAP1_TEXTURE_COORD_1 */
;; /*      GL_MAP1_TEXTURE_COORD_2 */
;; /*      GL_MAP1_TEXTURE_COORD_3 */
;; /*      GL_MAP1_TEXTURE_COORD_4 */
;; /*      GL_MAP1_VERTEX_3 */
;; /*      GL_MAP1_VERTEX_4 */
;; /*      GL_MAP2_COLOR_4 */
;; /*      GL_MAP2_INDEX */
;; /*      GL_MAP2_NORMAL */
;; /*      GL_MAP2_TEXTURE_COORD_1 */
;; /*      GL_MAP2_TEXTURE_COORD_2 */
;; /*      GL_MAP2_TEXTURE_COORD_3 */
;; /*      GL_MAP2_TEXTURE_COORD_4 */
;; /*      GL_MAP2_VERTEX_3 */
;; /*      GL_MAP2_VERTEX_4 */

;; /* MaterialFace */
;; /*      GL_FRONT */
;; /*      GL_BACK */
;; /*      GL_FRONT_AND_BACK */

;; /* MaterialParameter */
(bind-val GL_EMISSION                       i32 #x1600)
(bind-val GL_SHININESS                      i32 #x1601)
(bind-val GL_AMBIENT_AND_DIFFUSE            i32 #x1602)
(bind-val GL_COLOR_INDEXES                  i32 #x1603)
;; /*      GL_AMBIENT */
;; /*      GL_DIFFUSE */
;; /*      GL_SPECULAR */

;; /* MatrixMode */
(bind-val GL_MODELVIEW                      i32 #x1700)
(bind-val GL_PROJECTION                     i32 #x1701)
(bind-val GL_TEXTURE                        i32 #x1702)

;; /* MeshMode1 */
;; /*      GL_POINT */
;; /*      GL_LINE */

;; /* MeshMode2 */
;; /*      GL_POINT */
;; /*      GL_LINE */
;; /*      GL_FILL */

;; /* MinmaxTarget */
;; /*      GL_MINMAX */

;; /* NormalPointerType */
;; /*      GL_BYTE */
;; /*      GL_SHORT */
;; /*      GL_INT */
;; /*      GL_FLOAT */
;; /*      GL_DOUBLE */

;; /* PixelCopyType */
(bind-val GL_COLOR                          i32 #x1800)
(bind-val GL_DEPTH                          i32 #x1801)
(bind-val GL_STENCIL                        i32 #x1802)

;; /* PixelFormat */
(bind-val GL_COLOR_INDEX                    i32 #x1900)
(bind-val GL_STENCIL_INDEX                  i32 #x1901)
(bind-val GL_DEPTH_COMPONENT                i32 #x1902)
(bind-val GL_RED                            i32 #x1903)
(bind-val GL_GREEN                          i32 #x1904)
(bind-val GL_BLUE                           i32 #x1905)
(bind-val GL_ALPHA                          i32 #x1906)
(bind-val GL_RGB                            i32 #x1907)
(bind-val GL_RGBA                           i32 #x1908)
(bind-val GL_LUMINANCE                      i32 #x1909)
(bind-val GL_LUMINANCE_ALPHA                i32 #x190A)
;; /*      GL_ABGR */

;; /* PixelInternalFormat */
;; /*      GL_ALPHA4 */
;; /*      GL_ALPHA8 */
;; /*      GL_ALPHA12 */
;; /*      GL_ALPHA16 */
;; /*      GL_LUMINANCE4 */
;; /*      GL_LUMINANCE8 */
;; /*      GL_LUMINANCE12 */
;; /*      GL_LUMINANCE16 */
;; /*      GL_LUMINANCE4_ALPHA4 */
;; /*      GL_LUMINANCE6_ALPHA2 */
;; /*      GL_LUMINANCE8_ALPHA8 */
;; /*      GL_LUMINANCE12_ALPHA4 */
;; /*      GL_LUMINANCE12_ALPHA12 */
;; /*      GL_LUMINANCE16_ALPHA16 */
;; /*      GL_INTENSITY */
;; /*      GL_INTENSITY4 */
;; /*      GL_INTENSITY8 */
;; /*      GL_INTENSITY12 */
;; /*      GL_INTENSITY16 */
;; /*      GL_R3_G3_B2 */
;; /*      GL_RGB4 */
;; /*      GL_RGB5 */
;; /*      GL_RGB8 */
;; /*      GL_RGB10 */
;; /*      GL_RGB12 */
;; /*      GL_RGB16 */
;; /*      GL_RGBA2 */
;; /*      GL_RGBA4 */
;; /*      GL_RGB5_A1 */
;; /*      GL_RGBA8 */
;; /*      GL_RGB10_A2 */
;; /*      GL_RGBA12 */
;; /*      GL_RGBA16 */

;; /* PixelMap */
;; /*      GL_PIXEL_MAP_I_TO_I */
;; /*      GL_PIXEL_MAP_S_TO_S */
;; /*      GL_PIXEL_MAP_I_TO_R */
;; /*      GL_PIXEL_MAP_I_TO_G */
;; /*      GL_PIXEL_MAP_I_TO_B */
;; /*      GL_PIXEL_MAP_I_TO_A */
;; /*      GL_PIXEL_MAP_R_TO_R */
;; /*      GL_PIXEL_MAP_G_TO_G */
;; /*      GL_PIXEL_MAP_B_TO_B */
;; /*      GL_PIXEL_MAP_A_TO_A */

;; /* PixelStore */
;; /*      GL_UNPACK_SWAP_BYTES */
;; /*      GL_UNPACK_LSB_FIRST */
;; /*      GL_UNPACK_ROW_LENGTH */
;; /*      GL_UNPACK_SKIP_ROWS */
;; /*      GL_UNPACK_SKIP_PIXELS */
;; /*      GL_UNPACK_ALIGNMENT */
;; /*      GL_PACK_SWAP_BYTES */
;; /*      GL_PACK_LSB_FIRST */
;; /*      GL_PACK_ROW_LENGTH */
;; /*      GL_PACK_SKIP_ROWS */
;; /*      GL_PACK_SKIP_PIXELS */
;; /*      GL_PACK_ALIGNMENT */
;; /*      GL_PACK_SKIP_IMAGES */
;; /*      GL_PACK_IMAGE_HEIGHT */
;; /*      GL_UNPACK_SKIP_IMAGES */
;; /*      GL_UNPACK_IMAGE_HEIGHT */

;; /* PixelTransfer */
;; /*      GL_MAP_COLOR */
;; /*      GL_MAP_STENCIL */
;; /*      GL_INDEX_SHIFT */
;; /*      GL_INDEX_OFFSET */
;; /*      GL_RED_SCALE */
;; /*      GL_RED_BIAS */
;; /*      GL_GREEN_SCALE */
;; /*      GL_GREEN_BIAS */
;; /*      GL_BLUE_SCALE */
;; /*      GL_BLUE_BIAS */
;; /*      GL_ALPHA_SCALE */
;; /*      GL_ALPHA_BIAS */
;; /*      GL_DEPTH_SCALE */
;; /*      GL_DEPTH_BIAS */
;; /*      GL_POST_CONVOLUTION_RED_SCALE */
;; /*      GL_POST_CONVOLUTION_GREEN_SCALE */
;; /*      GL_POST_CONVOLUTION_BLUE_SCALE */
;; /*      GL_POST_CONVOLUTION_ALPHA_SCALE */
;; /*      GL_POST_CONVOLUTION_RED_BIAS */
;; /*      GL_POST_CONVOLUTION_GREEN_BIAS */
;; /*      GL_POST_CONVOLUTION_BLUE_BIAS */
;; /*      GL_POST_CONVOLUTION_ALPHA_BIAS */
;; /*      GL_POST_COLOR_MATRIX_RED_SCALE */
;; /*      GL_POST_COLOR_MATRIX_GREEN_SCALE */
;; /*      GL_POST_COLOR_MATRIX_BLUE_SCALE */
;; /*      GL_POST_COLOR_MATRIX_ALPHA_SCALE */
;; /*      GL_POST_COLOR_MATRIX_RED_BIAS */
;; /*      GL_POST_COLOR_MATRIX_GREEN_BIAS */
;; /*      GL_POST_COLOR_MATRIX_BLUE_BIAS */
;; /*      GL_POST_COLOR_MATRIX_ALPHA_BIAS */

;; /* PixelType */
(bind-val GL_BITMAP                         i32 #x1A00)
;; /*      GL_BYTE */
;; /*      GL_UNSIGNED_BYTE */
;; /*      GL_SHORT */
;; /*      GL_UNSIGNED_SHORT */
;; /*      GL_INT */
;; /*      GL_UNSIGNED_INT */
;; /*      GL_FLOAT */
;; /*      GL_BGR */
;; /*      GL_BGRA */
;; /*      GL_UNSIGNED_BYTE_3_3_2 */
;; /*      GL_UNSIGNED_SHORT_4_4_4_4 */
;; /*      GL_UNSIGNED_SHORT_5_5_5_1 */
;; /*      GL_UNSIGNED_INT_8_8_8_8 */
;; /*      GL_UNSIGNED_INT_10_10_10_2 */
;; /*      GL_UNSIGNED_SHORT_5_6_5 */
;; /*      GL_UNSIGNED_BYTE_2_3_3_REV */
;; /*      GL_UNSIGNED_SHORT_5_6_5_REV */
;; /*      GL_UNSIGNED_SHORT_4_4_4_4_REV */
;; /*      GL_UNSIGNED_SHORT_1_5_5_5_REV */
;; /*      GL_UNSIGNED_INT_8_8_8_8_REV */
;; /*      GL_UNSIGNED_INT_2_10_10_10_REV */

;; /* PolygonMode */
(bind-val GL_POINT                          i32 #x1B00)
(bind-val GL_LINE                           i32 #x1B01)
(bind-val GL_FILL                           i32 #x1B02)

;; /* ReadBufferMode */
;; /*      GL_FRONT_LEFT */
;; /*      GL_FRONT_RIGHT */
;; /*      GL_BACK_LEFT */
;; /*      GL_BACK_RIGHT */
;; /*      GL_FRONT */
;; /*      GL_BACK */
;; /*      GL_LEFT */
;; /*      GL_RIGHT */
;; /*      GL_AUX0 */
;; /*      GL_AUX1 */
;; /*      GL_AUX2 */
;; /*      GL_AUX3 */

;; /* RenderingMode */
(bind-val GL_RENDER                         i32 #x1C00)
(bind-val GL_FEEDBACK                       i32 #x1C01)
(bind-val GL_SELECT                         i32 #x1C02)

;; /* SeparableTarget */
;; /*      GL_SEPARABLE_2D */

;; /* ShadingModel */
(bind-val GL_FLAT                           i32 #x1D00)
(bind-val GL_SMOOTH                         i32 #x1D01)

;; /* StencilFunction */
;; /*      GL_NEVER */
;; /*      GL_LESS */
;; /*      GL_EQUAL */
;; /*      GL_LEQUAL */
;; /*      GL_GREATER */
;; /*      GL_NOTEQUAL */
;; /*      GL_GEQUAL */
;; /*      GL_ALWAYS */

;; /* StencilOp */
;; /*      GL_ZERO */
(bind-val GL_KEEP                           i32 #x1E00)
(bind-val GL_REPLACE                        i32 #x1E01)
(bind-val GL_INCR                           i32 #x1E02)
(bind-val GL_DECR                           i32 #x1E03)
;; /*      GL_INVERT */

;; /* StringName */
(bind-val GL_VENDOR                         i32 #x1F00)
(bind-val GL_RENDERER                       i32 #x1F01)
(bind-val GL_VERSION                        i32 #x1F02)
(bind-val GL_EXTENSIONS                     i32 #x1F03)

;; /* TextureCoordName */
(bind-val GL_S                              i32 #x2000)
(bind-val GL_T                              i32 #x2001)
(bind-val GL_R                              i32 #x2002)
(bind-val GL_Q                              i32 #x2003)

;; /* TexCoordPointerType */
;; /*      GL_SHORT */
;; /*      GL_INT */
;; /*      GL_FLOAT */
;; /*      GL_DOUBLE */

;; /* TextureEnvMode */
(bind-val GL_MODULATE                       i32 #x2100)
(bind-val GL_DECAL                          i32 #x2101)
;; /*      GL_BLEND */
;; /*      GL_REPLACE */

;; /* TextureEnvParameter */
(bind-val GL_TEXTURE_ENV_MODE               i32 #x2200)
(bind-val GL_TEXTURE_ENV_COLOR              i32 #x2201)

;; /* TextureEnvTarget */
(bind-val GL_TEXTURE_ENV                    i32 #x2300)

;; /* TextureGenMode */
(bind-val GL_EYE_LINEAR                     i32 #x2400)
(bind-val GL_OBJECT_LINEAR                  i32 #x2401)
(bind-val GL_SPHERE_MAP                     i32 #x2402)

;; /* TextureGenParameter */
(bind-val GL_TEXTURE_GEN_MODE               i32 #x2500)
(bind-val GL_OBJECT_PLANE                   i32 #x2501)
(bind-val GL_EYE_PLANE                      i32 #x2502)

;; /* TextureMagFilter */
(bind-val GL_NEAREST                        i32 #x2600)
(bind-val GL_LINEAR                         i32 #x2601)

;; /* TextureMinFilter */
;; /*      GL_NEAREST */
;; /*      GL_LINEAR */
(bind-val GL_NEAREST_MIPMAP_NEAREST         i32 #x2700)
(bind-val GL_LINEAR_MIPMAP_NEAREST          i32 #x2701)
(bind-val GL_NEAREST_MIPMAP_LINEAR          i32 #x2702)
(bind-val GL_LINEAR_MIPMAP_LINEAR           i32 #x2703)

;; /* TextureParameterName */
(bind-val GL_TEXTURE_MAG_FILTER             i32 #x2800)
(bind-val GL_TEXTURE_MIN_FILTER             i32 #x2801)
(bind-val GL_TEXTURE_WRAP_S                 i32 #x2802)
(bind-val GL_TEXTURE_WRAP_T                 i32 #x2803)
;; /*      GL_TEXTURE_BORDER_COLOR */
;; /*      GL_TEXTURE_PRIORITY */
;; /*      GL_TEXTURE_WRAP_R */
;; /*      GL_TEXTURE_MIN_LOD */
;; /*      GL_TEXTURE_MAX_LOD */
;; /*      GL_TEXTURE_BASE_LEVEL */
;; /*      GL_TEXTURE_MAX_LEVEL */

;; /* TextureTarget */
;; /*      GL_TEXTURE_1D */
;; /*      GL_TEXTURE_2D */
;; /*      GL_PROXY_TEXTURE_1D */
;; /*      GL_PROXY_TEXTURE_2D */
;; /*      GL_TEXTURE_3D */
;; /*      GL_PROXY_TEXTURE_3D */

;; /* TextureWrapMode */
(bind-val GL_CLAMP                          i32 #x2900)
(bind-val GL_REPEAT                         i32 #x2901)
;; /*      GL_CLAMP_TO_EDGE */

;; /* VertexPointerType */
;; /*      GL_SHORT */
;; /*      GL_INT */
;; /*      GL_FLOAT */
;; /*      GL_DOUBLE */

;; /* ClientAttribMask */
(bind-val GL_CLIENT_PIXEL_STORE_BIT         i32 #x00000001)
(bind-val GL_CLIENT_VERTEX_ARRAY_BIT        i32 #x00000002)
(bind-val GL_CLIENT_ALL_ATTRIB_BITS         i32 #xffffffff)

;; /* polygon_offset */
(bind-val GL_POLYGON_OFFSET_FACTOR          i32 #x8038)
(bind-val GL_POLYGON_OFFSET_UNITS           i32 #x2A00)
(bind-val GL_POLYGON_OFFSET_POINT           i32 #x2A01)
(bind-val GL_POLYGON_OFFSET_LINE            i32 #x2A02)
(bind-val GL_POLYGON_OFFSET_FILL            i32 #x8037)

;; /* texture */
(bind-val GL_ALPHA4                         i32 #x803B)
(bind-val GL_ALPHA8                         i32 #x803C)
(bind-val GL_ALPHA12                        i32 #x803D)
(bind-val GL_ALPHA16                        i32 #x803E)
(bind-val GL_LUMINANCE4                     i32 #x803F)
(bind-val GL_LUMINANCE8                     i32 #x8040)
(bind-val GL_LUMINANCE12                    i32 #x8041)
(bind-val GL_LUMINANCE16                    i32 #x8042)
(bind-val GL_LUMINANCE4_ALPHA4              i32 #x8043)
(bind-val GL_LUMINANCE6_ALPHA2              i32 #x8044)
(bind-val GL_LUMINANCE8_ALPHA8              i32 #x8045)
(bind-val GL_LUMINANCE12_ALPHA4             i32 #x8046)
(bind-val GL_LUMINANCE12_ALPHA12            i32 #x8047)
(bind-val GL_LUMINANCE16_ALPHA16            i32 #x8048)
(bind-val GL_INTENSITY                      i32 #x8049)
(bind-val GL_INTENSITY4                     i32 #x804A)
(bind-val GL_INTENSITY8                     i32 #x804B)
(bind-val GL_INTENSITY12                    i32 #x804C)
(bind-val GL_INTENSITY16                    i32 #x804D)
(bind-val GL_R3_G3_B2                       i32 #x2A10)
(bind-val GL_RGB4                           i32 #x804F)
(bind-val GL_RGB5                           i32 #x8050)
(bind-val GL_RGB8                           i32 #x8051)
(bind-val GL_RGB10                          i32 #x8052)
(bind-val GL_RGB12                          i32 #x8053)
(bind-val GL_RGB16                          i32 #x8054)
(bind-val GL_RGBA2                          i32 #x8055)
(bind-val GL_RGBA4                          i32 #x8056)
(bind-val GL_RGB5_A1                        i32 #x8057)
(bind-val GL_RGBA8                          i32 #x8058)
(bind-val GL_RGB10_A2                       i32 #x8059)
(bind-val GL_RGBA12                         i32 #x805A)
(bind-val GL_RGBA16                         i32 #x805B)
(bind-val GL_TEXTURE_RED_SIZE               i32 #x805C)
(bind-val GL_TEXTURE_GREEN_SIZE             i32 #x805D)
(bind-val GL_TEXTURE_BLUE_SIZE              i32 #x805E)
(bind-val GL_TEXTURE_ALPHA_SIZE             i32 #x805F)
(bind-val GL_TEXTURE_LUMINANCE_SIZE         i32 #x8060)
(bind-val GL_TEXTURE_INTENSITY_SIZE         i32 #x8061)
(bind-val GL_PROXY_TEXTURE_1D               i32 #x8063)
(bind-val GL_PROXY_TEXTURE_2D               i32 #x8064)

;; /* texture_object */
(bind-val GL_TEXTURE_PRIORITY               i32 #x8066)
(bind-val GL_TEXTURE_RESIDENT               i32 #x8067)
(bind-val GL_TEXTURE_BINDING_1D             i32 #x8068)
(bind-val GL_TEXTURE_BINDING_2D             i32 #x8069)
(bind-val GL_TEXTURE_BINDING_3D             i32 #x806A)

;; /* vertex_array */
(bind-val GL_VERTEX_ARRAY                   i32 #x8074)
(bind-val GL_NORMAL_ARRAY                   i32 #x8075)
(bind-val GL_COLOR_ARRAY                    i32 #x8076)
(bind-val GL_INDEX_ARRAY                    i32 #x8077)
(bind-val GL_TEXTURE_COORD_ARRAY            i32 #x8078)
(bind-val GL_EDGE_FLAG_ARRAY                i32 #x8079)
(bind-val GL_VERTEX_ARRAY_SIZE              i32 #x807A)
(bind-val GL_VERTEX_ARRAY_TYPE              i32 #x807B)
(bind-val GL_VERTEX_ARRAY_STRIDE            i32 #x807C)
(bind-val GL_NORMAL_ARRAY_TYPE              i32 #x807E)
(bind-val GL_NORMAL_ARRAY_STRIDE            i32 #x807F)
(bind-val GL_COLOR_ARRAY_SIZE               i32 #x8081)
(bind-val GL_COLOR_ARRAY_TYPE               i32 #x8082)
(bind-val GL_COLOR_ARRAY_STRIDE             i32 #x8083)
(bind-val GL_INDEX_ARRAY_TYPE               i32 #x8085)
(bind-val GL_INDEX_ARRAY_STRIDE             i32 #x8086)
(bind-val GL_TEXTURE_COORD_ARRAY_SIZE       i32 #x8088)
(bind-val GL_TEXTURE_COORD_ARRAY_TYPE       i32 #x8089)
(bind-val GL_TEXTURE_COORD_ARRAY_STRIDE     i32 #x808A)
(bind-val GL_EDGE_FLAG_ARRAY_STRIDE         i32 #x808C)
(bind-val GL_VERTEX_ARRAY_POINTER           i32 #x808E)
(bind-val GL_NORMAL_ARRAY_POINTER           i32 #x808F)
(bind-val GL_COLOR_ARRAY_POINTER            i32 #x8090)
(bind-val GL_INDEX_ARRAY_POINTER            i32 #x8091)
(bind-val GL_TEXTURE_COORD_ARRAY_POINTER    i32 #x8092)
(bind-val GL_EDGE_FLAG_ARRAY_POINTER        i32 #x8093)
(bind-val GL_V2F                            i32 #x2A20)
(bind-val GL_V3F                            i32 #x2A21)
(bind-val GL_C4UB_V2F                       i32 #x2A22)
(bind-val GL_C4UB_V3F                       i32 #x2A23)
(bind-val GL_C3F_V3F                        i32 #x2A24)
(bind-val GL_N3F_V3F                        i32 #x2A25)
(bind-val GL_C4F_N3F_V3F                    i32 #x2A26)
(bind-val GL_T2F_V3F                        i32 #x2A27)
(bind-val GL_T4F_V4F                        i32 #x2A28)
(bind-val GL_T2F_C4UB_V3F                   i32 #x2A29)
(bind-val GL_T2F_C3F_V3F                    i32 #x2A2A)
(bind-val GL_T2F_N3F_V3F                    i32 #x2A2B)
(bind-val GL_T2F_C4F_N3F_V3F                i32 #x2A2C)
(bind-val GL_T4F_C4F_N3F_V4F                i32 #x2A2D)

;; /* bgra */
(bind-val GL_BGR                            i32 #x80E0)
(bind-val GL_BGRA                           i32 #x80E1)

;; /* blend_color */
(bind-val GL_CONSTANT_COLOR                 i32 #x8001)
(bind-val GL_ONE_MINUS_CONSTANT_COLOR       i32 #x8002)
(bind-val GL_CONSTANT_ALPHA                 i32 #x8003)
(bind-val GL_ONE_MINUS_CONSTANT_ALPHA       i32 #x8004)
(bind-val GL_BLEND_COLOR                    i32 #x8005)

;; /* blend_minmax */
(bind-val GL_FUNC_ADD                       i32 #x8006)
(bind-val GL_MIN                            i32 #x8007)
(bind-val GL_MAX                            i32 #x8008)
(bind-val GL_BLEND_EQUATION                 i32 #x8009)

;; /* blend_equation_separate */
(bind-val GL_BLEND_EQUATION_RGB             i32 #x8009)
(bind-val GL_BLEND_EQUATION_ALPHA           i32 #x883D)

;; /* blend_subtract */
(bind-val GL_FUNC_SUBTRACT                  i32 #x800A)
(bind-val GL_FUNC_REVERSE_SUBTRACT          i32 #x800B)

;; /* color_matrix */
(bind-val GL_COLOR_MATRIX                   i32 #x80B1)
(bind-val GL_COLOR_MATRIX_STACK_DEPTH       i32 #x80B2)
(bind-val GL_MAX_COLOR_MATRIX_STACK_DEPTH   i32 #x80B3)
(bind-val GL_POST_COLOR_MATRIX_RED_SCALE    i32 #x80B4)
(bind-val GL_POST_COLOR_MATRIX_GREEN_SCALE  i32 #x80B5)
(bind-val GL_POST_COLOR_MATRIX_BLUE_SCALE   i32 #x80B6)
(bind-val GL_POST_COLOR_MATRIX_ALPHA_SCALE  i32 #x80B7)
(bind-val GL_POST_COLOR_MATRIX_RED_BIAS     i32 #x80B8)
(bind-val GL_POST_COLOR_MATRIX_GREEN_BIAS   i32 #x80B9)
(bind-val GL_POST_COLOR_MATRIX_BLUE_BIAS    i32 #x80BA)
(bind-val GL_POST_COLOR_MATRIX_ALPHA_BIAS   i32 #x80BB)

;; /* color_table */
(bind-val GL_COLOR_TABLE                    i32 #x80D0)
(bind-val GL_POST_CONVOLUTION_COLOR_TABLE   i32 #x80D1)
(bind-val GL_POST_COLOR_MATRIX_COLOR_TABLE  i32 #x80D2)
(bind-val GL_PROXY_COLOR_TABLE              i32 #x80D3)
(bind-val GL_PROXY_POST_CONVOLUTION_COLOR_TABLE i32 #x80D4)
(bind-val GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE i32 #x80D5)
(bind-val GL_COLOR_TABLE_SCALE              i32 #x80D6)
(bind-val GL_COLOR_TABLE_BIAS               i32 #x80D7)
(bind-val GL_COLOR_TABLE_FORMAT             i32 #x80D8)
(bind-val GL_COLOR_TABLE_WIDTH              i32 #x80D9)
(bind-val GL_COLOR_TABLE_RED_SIZE           i32 #x80DA)
(bind-val GL_COLOR_TABLE_GREEN_SIZE         i32 #x80DB)
(bind-val GL_COLOR_TABLE_BLUE_SIZE          i32 #x80DC)
(bind-val GL_COLOR_TABLE_ALPHA_SIZE         i32 #x80DD)
(bind-val GL_COLOR_TABLE_LUMINANCE_SIZE     i32 #x80DE)
(bind-val GL_COLOR_TABLE_INTENSITY_SIZE     i32 #x80DF)

;; /* convolution */
(bind-val GL_CONVOLUTION_1D                 i32 #x8010)
(bind-val GL_CONVOLUTION_2D                 i32 #x8011)
(bind-val GL_SEPARABLE_2D                   i32 #x8012)
(bind-val GL_CONVOLUTION_BORDER_MODE        i32 #x8013)
(bind-val GL_CONVOLUTION_FILTER_SCALE       i32 #x8014)
(bind-val GL_CONVOLUTION_FILTER_BIAS        i32 #x8015)
(bind-val GL_REDUCE                         i32 #x8016)
(bind-val GL_CONVOLUTION_FORMAT             i32 #x8017)
(bind-val GL_CONVOLUTION_WIDTH              i32 #x8018)
(bind-val GL_CONVOLUTION_HEIGHT             i32 #x8019)
(bind-val GL_MAX_CONVOLUTION_WIDTH          i32 #x801A)
(bind-val GL_MAX_CONVOLUTION_HEIGHT         i32 #x801B)
(bind-val GL_POST_CONVOLUTION_RED_SCALE     i32 #x801C)
(bind-val GL_POST_CONVOLUTION_GREEN_SCALE   i32 #x801D)
(bind-val GL_POST_CONVOLUTION_BLUE_SCALE    i32 #x801E)
(bind-val GL_POST_CONVOLUTION_ALPHA_SCALE   i32 #x801F)
(bind-val GL_POST_CONVOLUTION_RED_BIAS      i32 #x8020)
(bind-val GL_POST_CONVOLUTION_GREEN_BIAS    i32 #x8021)
(bind-val GL_POST_CONVOLUTION_BLUE_BIAS     i32 #x8022)
(bind-val GL_POST_CONVOLUTION_ALPHA_BIAS    i32 #x8023)
(bind-val GL_CONSTANT_BORDER                i32 #x8151)
(bind-val GL_REPLICATE_BORDER               i32 #x8153)
(bind-val GL_CONVOLUTION_BORDER_COLOR       i32 #x8154)

;; /* draw_range_elements */
(bind-val GL_MAX_ELEMENTS_VERTICES          i32 #x80E8)
(bind-val GL_MAX_ELEMENTS_INDICES           i32 #x80E9)

;; /* histogram */
(bind-val GL_HISTOGRAM                      i32 #x8024)
(bind-val GL_PROXY_HISTOGRAM                i32 #x8025)
(bind-val GL_HISTOGRAM_WIDTH                i32 #x8026)
(bind-val GL_HISTOGRAM_FORMAT               i32 #x8027)
(bind-val GL_HISTOGRAM_RED_SIZE             i32 #x8028)
(bind-val GL_HISTOGRAM_GREEN_SIZE           i32 #x8029)
(bind-val GL_HISTOGRAM_BLUE_SIZE            i32 #x802A)
(bind-val GL_HISTOGRAM_ALPHA_SIZE           i32 #x802B)
(bind-val GL_HISTOGRAM_LUMINANCE_SIZE       i32 #x802C)
(bind-val GL_HISTOGRAM_SINK                 i32 #x802D)
(bind-val GL_MINMAX                         i32 #x802E)
(bind-val GL_MINMAX_FORMAT                  i32 #x802F)
(bind-val GL_MINMAX_SINK                    i32 #x8030)
(bind-val GL_TABLE_TOO_LARGE                i32 #x8031)

;; /* packed_pixels */
(bind-val GL_UNSIGNED_BYTE_3_3_2            i32 #x8032)
(bind-val GL_UNSIGNED_SHORT_4_4_4_4         i32 #x8033)
(bind-val GL_UNSIGNED_SHORT_5_5_5_1         i32 #x8034)
(bind-val GL_UNSIGNED_INT_8_8_8_8           i32 #x8035)
(bind-val GL_UNSIGNED_INT_10_10_10_2        i32 #x8036)
(bind-val GL_UNSIGNED_BYTE_2_3_3_REV        i32 #x8362)
(bind-val GL_UNSIGNED_SHORT_5_6_5           i32 #x8363)
(bind-val GL_UNSIGNED_SHORT_5_6_5_REV       i32 #x8364)
(bind-val GL_UNSIGNED_SHORT_4_4_4_4_REV     i32 #x8365)
(bind-val GL_UNSIGNED_SHORT_1_5_5_5_REV     i32 #x8366)
(bind-val GL_UNSIGNED_INT_8_8_8_8_REV       i32 #x8367)
(bind-val GL_UNSIGNED_INT_2_10_10_10_REV    i32 #x8368)

;; /* rescale_normal */
(bind-val GL_RESCALE_NORMAL                 i32 #x803A)

;; /* separate_specular_color */
(bind-val GL_LIGHT_MODEL_COLOR_CONTROL      i32 #x81F8)
(bind-val GL_SINGLE_COLOR                   i32 #x81F9)
(bind-val GL_SEPARATE_SPECULAR_COLOR        i32 #x81FA)

;; /* texture3D */
(bind-val GL_PACK_SKIP_IMAGES               i32 #x806B)
(bind-val GL_PACK_IMAGE_HEIGHT              i32 #x806C)
(bind-val GL_UNPACK_SKIP_IMAGES             i32 #x806D)
(bind-val GL_UNPACK_IMAGE_HEIGHT            i32 #x806E)
(bind-val GL_TEXTURE_3D                     i32 #x806F)
(bind-val GL_PROXY_TEXTURE_3D               i32 #x8070)
(bind-val GL_TEXTURE_DEPTH                  i32 #x8071)
(bind-val GL_TEXTURE_WRAP_R                 i32 #x8072)
(bind-val GL_MAX_3D_TEXTURE_SIZE            i32 #x8073)

;; /* texture_edge_clamp */
(bind-val GL_CLAMP_TO_EDGE                  i32 #x812F)
(bind-val GL_CLAMP_TO_BORDER                i32 #x812D)

;; /* texture_lod */
(bind-val GL_TEXTURE_MIN_LOD                i32 #x813A)
(bind-val GL_TEXTURE_MAX_LOD                i32 #x813B)
(bind-val GL_TEXTURE_BASE_LEVEL             i32 #x813C)
(bind-val GL_TEXTURE_MAX_LEVEL              i32 #x813D)

;; /* GetTarget1_2 */
(bind-val GL_SMOOTH_POINT_SIZE_RANGE        i32 #x0B12)
(bind-val GL_SMOOTH_POINT_SIZE_GRANULARITY  i32 #x0B13)
(bind-val GL_SMOOTH_LINE_WIDTH_RANGE        i32 #x0B22)
(bind-val GL_SMOOTH_LINE_WIDTH_GRANULARITY  i32 #x0B23)
(bind-val GL_ALIASED_POINT_SIZE_RANGE       i32 #x846D)
(bind-val GL_ALIASED_LINE_WIDTH_RANGE       i32 #x846E)

(bind-val GL_TEXTURE0                       i32 #x84C0)
(bind-val GL_TEXTURE1                       i32 #x84C1)
(bind-val GL_TEXTURE2                       i32 #x84C2)
(bind-val GL_TEXTURE3                       i32 #x84C3)
(bind-val GL_TEXTURE4                       i32 #x84C4)
(bind-val GL_TEXTURE5                       i32 #x84C5)
(bind-val GL_TEXTURE6                       i32 #x84C6)
(bind-val GL_TEXTURE7                       i32 #x84C7)
(bind-val GL_TEXTURE8                       i32 #x84C8)
(bind-val GL_TEXTURE9                       i32 #x84C9)
(bind-val GL_TEXTURE10                      i32 #x84CA)
(bind-val GL_TEXTURE11                      i32 #x84CB)
(bind-val GL_TEXTURE12                      i32 #x84CC)
(bind-val GL_TEXTURE13                      i32 #x84CD)
(bind-val GL_TEXTURE14                      i32 #x84CE)
(bind-val GL_TEXTURE15                      i32 #x84CF)
(bind-val GL_TEXTURE16                      i32 #x84D0)
(bind-val GL_TEXTURE17                      i32 #x84D1)
(bind-val GL_TEXTURE18                      i32 #x84D2)
(bind-val GL_TEXTURE19                      i32 #x84D3)
(bind-val GL_TEXTURE20                      i32 #x84D4)
(bind-val GL_TEXTURE21                      i32 #x84D5)
(bind-val GL_TEXTURE22                      i32 #x84D6)
(bind-val GL_TEXTURE23                      i32 #x84D7)
(bind-val GL_TEXTURE24                      i32 #x84D8)
(bind-val GL_TEXTURE25                      i32 #x84D9)
(bind-val GL_TEXTURE26                      i32 #x84DA)
(bind-val GL_TEXTURE27                      i32 #x84DB)
(bind-val GL_TEXTURE28                      i32 #x84DC)
(bind-val GL_TEXTURE29                      i32 #x84DD)
(bind-val GL_TEXTURE30                      i32 #x84DE)
(bind-val GL_TEXTURE31                      i32 #x84DF)
(bind-val GL_ACTIVE_TEXTURE                 i32 #x84E0)
(bind-val GL_CLIENT_ACTIVE_TEXTURE          i32 #x84E1)
(bind-val GL_MAX_TEXTURE_UNITS              i32 #x84E2)

(bind-val GL_COMBINE                        i32 #x8570)
(bind-val GL_COMBINE_RGB                    i32 #x8571)
(bind-val GL_COMBINE_ALPHA                  i32 #x8572)
(bind-val GL_RGB_SCALE                      i32 #x8573)
(bind-val GL_ADD_SIGNED                     i32 #x8574)
(bind-val GL_INTERPOLATE                    i32 #x8575)
(bind-val GL_CONSTANT                       i32 #x8576)
(bind-val GL_PRIMARY_COLOR                  i32 #x8577)
(bind-val GL_PREVIOUS                       i32 #x8578)
(bind-val GL_SUBTRACT                       i32 #x84E7)

(bind-val GL_SRC0_RGB                       i32 #x8580)
(bind-val GL_SRC1_RGB                       i32 #x8581)
(bind-val GL_SRC2_RGB                       i32 #x8582)
(bind-val GL_SRC0_ALPHA                     i32 #x8588)
(bind-val GL_SRC1_ALPHA                     i32 #x8589)
(bind-val GL_SRC2_ALPHA                     i32 #x858A)

;; /* Obsolete */
(bind-val GL_SOURCE0_RGB                    i32 #x8580)
(bind-val GL_SOURCE1_RGB                    i32 #x8581)
(bind-val GL_SOURCE2_RGB                    i32 #x8582)
(bind-val GL_SOURCE0_ALPHA                  i32 #x8588)
(bind-val GL_SOURCE1_ALPHA                  i32 #x8589)
(bind-val GL_SOURCE2_ALPHA                  i32 #x858A)

(bind-val GL_OPERAND0_RGB                   i32 #x8590)
(bind-val GL_OPERAND1_RGB                   i32 #x8591)
(bind-val GL_OPERAND2_RGB                   i32 #x8592)
(bind-val GL_OPERAND0_ALPHA                 i32 #x8598)
(bind-val GL_OPERAND1_ALPHA                 i32 #x8599)
(bind-val GL_OPERAND2_ALPHA                 i32 #x859A)

(bind-val GL_DOT3_RGB                       i32 #x86AE)
(bind-val GL_DOT3_RGBA                      i32 #x86AF)

(bind-val GL_TRANSPOSE_MODELVIEW_MATRIX     i32 #x84E3)
(bind-val GL_TRANSPOSE_PROJECTION_MATRIX    i32 #x84E4)
(bind-val GL_TRANSPOSE_TEXTURE_MATRIX       i32 #x84E5)
(bind-val GL_TRANSPOSE_COLOR_MATRIX         i32 #x84E6)

(bind-val GL_NORMAL_MAP                     i32 #x8511)
(bind-val GL_REFLECTION_MAP                 i32 #x8512)
(bind-val GL_TEXTURE_CUBE_MAP               i32 #x8513)
(bind-val GL_TEXTURE_BINDING_CUBE_MAP       i32 #x8514)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_X    i32 #x8515)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_X    i32 #x8516)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_Y    i32 #x8517)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_Y    i32 #x8518)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_Z    i32 #x8519)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_Z    i32 #x851A)
(bind-val GL_PROXY_TEXTURE_CUBE_MAP         i32 #x851B)
(bind-val GL_MAX_CUBE_MAP_TEXTURE_SIZE      i32 #x851C)

(bind-val GL_COMPRESSED_ALPHA               i32 #x84E9)
(bind-val GL_COMPRESSED_LUMINANCE           i32 #x84EA)
(bind-val GL_COMPRESSED_LUMINANCE_ALPHA     i32 #x84EB)
(bind-val GL_COMPRESSED_INTENSITY           i32 #x84EC)
(bind-val GL_COMPRESSED_RGB                 i32 #x84ED)
(bind-val GL_COMPRESSED_RGBA                i32 #x84EE)
(bind-val GL_TEXTURE_COMPRESSION_HINT       i32 #x84EF)
(bind-val GL_TEXTURE_COMPRESSED_IMAGE_SIZE  i32 #x86A0)
(bind-val GL_TEXTURE_COMPRESSED             i32 #x86A1)
(bind-val GL_NUM_COMPRESSED_TEXTURE_FORMATS i32 #x86A2)
(bind-val GL_COMPRESSED_TEXTURE_FORMATS     i32 #x86A3)

(bind-val GL_MULTISAMPLE                    i32 #x809D)
(bind-val GL_SAMPLE_ALPHA_TO_COVERAGE       i32 #x809E)
(bind-val GL_SAMPLE_ALPHA_TO_ONE            i32 #x809F)
(bind-val GL_SAMPLE_COVERAGE                i32 #x80A0)
(bind-val GL_SAMPLE_BUFFERS                 i32 #x80A8)
(bind-val GL_SAMPLES                        i32 #x80A9)
(bind-val GL_SAMPLE_COVERAGE_VALUE          i32 #x80AA)
(bind-val GL_SAMPLE_COVERAGE_INVERT         i32 #x80AB)
(bind-val GL_MULTISAMPLE_BIT                i32 #x20000000)

(bind-val GL_DEPTH_COMPONENT16              i32 #x81A5)
(bind-val GL_DEPTH_COMPONENT24              i32 #x81A6)
(bind-val GL_DEPTH_COMPONENT32              i32 #x81A7)
(bind-val GL_TEXTURE_DEPTH_SIZE             i32 #x884A)
(bind-val GL_DEPTH_TEXTURE_MODE             i32 #x884B)

(bind-val GL_TEXTURE_COMPARE_MODE           i32 #x884C)
(bind-val GL_TEXTURE_COMPARE_FUNC           i32 #x884D)
(bind-val GL_COMPARE_R_TO_TEXTURE           i32 #x884E)

;; /* occlusion_query */
(bind-val GL_QUERY_COUNTER_BITS             i32 #x8864)
(bind-val GL_CURRENT_QUERY                  i32 #x8865)
(bind-val GL_QUERY_RESULT                   i32 #x8866)
(bind-val GL_QUERY_RESULT_AVAILABLE         i32 #x8867)
(bind-val GL_SAMPLES_PASSED                 i32 #x8914)

(bind-val GL_FOG_COORD_SRC                  i32 #x8450)
(bind-val GL_FOG_COORD                      i32 #x8451)
(bind-val GL_FRAGMENT_DEPTH                 i32 #x8452)
(bind-val GL_CURRENT_FOG_COORD              i32 #x8453)
(bind-val GL_FOG_COORD_ARRAY_TYPE           i32 #x8454)
(bind-val GL_FOG_COORD_ARRAY_STRIDE         i32 #x8455)
(bind-val GL_FOG_COORD_ARRAY_POINTER        i32 #x8456)
(bind-val GL_FOG_COORD_ARRAY                i32 #x8457)

;; /* Obsolete */
(bind-val GL_FOG_COORDINATE_SOURCE          i32 #x8450)
(bind-val GL_FOG_COORDINATE                 i32 #x8451)
(bind-val GL_CURRENT_FOG_COORDINATE         i32 #x8453)
(bind-val GL_FOG_COORDINATE_ARRAY_TYPE      i32 #x8454)
(bind-val GL_FOG_COORDINATE_ARRAY_STRIDE    i32 #x8455)
(bind-val GL_FOG_COORDINATE_ARRAY_POINTER   i32 #x8456)
(bind-val GL_FOG_COORDINATE_ARRAY           i32 #x8457)

(bind-val GL_COLOR_SUM                      i32 #x8458)
(bind-val GL_CURRENT_SECONDARY_COLOR        i32 #x8459)
(bind-val GL_SECONDARY_COLOR_ARRAY_SIZE     i32 #x845A)
(bind-val GL_SECONDARY_COLOR_ARRAY_TYPE     i32 #x845B)
(bind-val GL_SECONDARY_COLOR_ARRAY_STRIDE   i32 #x845C)
(bind-val GL_SECONDARY_COLOR_ARRAY_POINTER  i32 #x845D)
(bind-val GL_SECONDARY_COLOR_ARRAY          i32 #x845E)

(bind-val GL_POINT_SIZE_MIN                 i32 #x8126)
(bind-val GL_POINT_SIZE_MAX                 i32 #x8127)
(bind-val GL_POINT_FADE_THRESHOLD_SIZE      i32 #x8128)
(bind-val GL_POINT_DISTANCE_ATTENUATION     i32 #x8129)

(bind-val GL_BLEND_DST_RGB                  i32 #x80C8)
(bind-val GL_BLEND_SRC_RGB                  i32 #x80C9)
(bind-val GL_BLEND_DST_ALPHA                i32 #x80CA)
(bind-val GL_BLEND_SRC_ALPHA                i32 #x80CB)

(bind-val GL_GENERATE_MIPMAP                i32 #x8191)
(bind-val GL_GENERATE_MIPMAP_HINT           i32 #x8192)

(bind-val GL_INCR_WRAP                      i32 #x8507)
(bind-val GL_DECR_WRAP                      i32 #x8508)

(bind-val GL_MIRRORED_REPEAT                i32 #x8370)

(bind-val GL_MAX_TEXTURE_LOD_BIAS           i32 #x84FD)
(bind-val GL_TEXTURE_FILTER_CONTROL         i32 #x8500)
(bind-val GL_TEXTURE_LOD_BIAS               i32 #x8501)

;; /* vertex_buffer_object */
(bind-val GL_ARRAY_BUFFER                                i32 #x8892)
(bind-val GL_ELEMENT_ARRAY_BUFFER                        i32 #x8893)
(bind-val GL_ARRAY_BUFFER_BINDING                        i32 #x8894)
(bind-val GL_ELEMENT_ARRAY_BUFFER_BINDING                i32 #x8895)
(bind-val GL_VERTEX_ARRAY_BUFFER_BINDING                 i32 #x8896)
(bind-val GL_NORMAL_ARRAY_BUFFER_BINDING                 i32 #x8897)
(bind-val GL_COLOR_ARRAY_BUFFER_BINDING                  i32 #x8898)
(bind-val GL_INDEX_ARRAY_BUFFER_BINDING                  i32 #x8899)
(bind-val GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING          i32 #x889A)
(bind-val GL_EDGE_FLAG_ARRAY_BUFFER_BINDING              i32 #x889B)
(bind-val GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING        i32 #x889C)
(bind-val GL_FOG_COORD_ARRAY_BUFFER_BINDING              i32 #x889D)
(bind-val GL_WEIGHT_ARRAY_BUFFER_BINDING                 i32 #x889E)
(bind-val GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING          i32 #x889F)
(bind-val GL_STREAM_DRAW                                 i32 #x88E0)
(bind-val GL_STREAM_READ                                 i32 #x88E1)
(bind-val GL_STREAM_COPY                                 i32 #x88E2)
(bind-val GL_STATIC_DRAW                                 i32 #x88E4)
(bind-val GL_STATIC_READ                                 i32 #x88E5)
(bind-val GL_STATIC_COPY                                 i32 #x88E6)
(bind-val GL_DYNAMIC_DRAW                                i32 #x88E8)
(bind-val GL_DYNAMIC_READ                                i32 #x88E9)
(bind-val GL_DYNAMIC_COPY                                i32 #x88EA)
(bind-val GL_READ_ONLY                                   i32 #x88B8)
(bind-val GL_WRITE_ONLY                                  i32 #x88B9)
(bind-val GL_READ_WRITE                                  i32 #x88BA)
(bind-val GL_BUFFER_SIZE                                 i32 #x8764)
(bind-val GL_BUFFER_USAGE                                i32 #x8765)
(bind-val GL_BUFFER_ACCESS                               i32 #x88BB)
(bind-val GL_BUFFER_MAPPED                               i32 #x88BC)
(bind-val GL_BUFFER_MAP_POINTER                          i32 #x88BD)
;; /* Obsolete */
(bind-val GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING         i32 #x889D)

;; /* OpenGL 2.0 */
(bind-val GL_CURRENT_PROGRAM                i32 #x8B8D)
(bind-val GL_SHADER_TYPE                    i32 #x8B4F)
(bind-val GL_DELETE_STATUS                  i32 #x8B80)
(bind-val GL_COMPILE_STATUS                 i32 #x8B81)
(bind-val GL_LINK_STATUS                    i32 #x8B82)
(bind-val GL_VALIDATE_STATUS                i32 #x8B83)
(bind-val GL_INFO_LOG_LENGTH                i32 #x8B84)
(bind-val GL_ATTACHED_SHADERS               i32 #x8B85)
(bind-val GL_ACTIVE_UNIFORMS                i32 #x8B86)
(bind-val GL_ACTIVE_UNIFORM_MAX_LENGTH      i32 #x8B87)
(bind-val GL_SHADER_SOURCE_LENGTH           i32 #x8B88)
(bind-val GL_FLOAT_VEC2                     i32 #x8B50)
(bind-val GL_FLOAT_VEC3                     i32 #x8B51)
(bind-val GL_FLOAT_VEC4                     i32 #x8B52)
(bind-val GL_INT_VEC2                       i32 #x8B53)
(bind-val GL_INT_VEC3                       i32 #x8B54)
(bind-val GL_INT_VEC4                       i32 #x8B55)
(bind-val GL_BOOL                           i32 #x8B56)
(bind-val GL_BOOL_VEC2                      i32 #x8B57)
(bind-val GL_BOOL_VEC3                      i32 #x8B58)
(bind-val GL_BOOL_VEC4                      i32 #x8B59)
(bind-val GL_FLOAT_MAT2                     i32 #x8B5A)
(bind-val GL_FLOAT_MAT3                     i32 #x8B5B)
(bind-val GL_FLOAT_MAT4                     i32 #x8B5C)
(bind-val GL_SAMPLER_1D                     i32 #x8B5D)
(bind-val GL_SAMPLER_2D                     i32 #x8B5E)
(bind-val GL_SAMPLER_3D                     i32 #x8B5F)
(bind-val GL_SAMPLER_CUBE                   i32 #x8B60)
(bind-val GL_SAMPLER_1D_SHADOW              i32 #x8B61)
(bind-val GL_SAMPLER_2D_SHADOW              i32 #x8B62)
(bind-val GL_SHADING_LANGUAGE_VERSION       i32 #x8B8C)
(bind-val GL_VERTEX_SHADER                  i32 #x8B31)
(bind-val GL_MAX_VERTEX_UNIFORM_COMPONENTS  i32 #x8B4A)
(bind-val GL_MAX_VARYING_FLOATS             i32 #x8B4B)
(bind-val GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS i32 #x8B4C)
(bind-val GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS i32 #x8B4D)
(bind-val GL_ACTIVE_ATTRIBUTES              i32 #x8B89)
(bind-val GL_ACTIVE_ATTRIBUTE_MAX_LENGTH    i32 #x8B8A)
(bind-val GL_FRAGMENT_SHADER                i32 #x8B30)
(bind-val GL_MAX_FRAGMENT_UNIFORM_COMPONENTS i32 #x8B49)
(bind-val GL_FRAGMENT_SHADER_DERIVATIVE_HINT i32 #x8B8B)
(bind-val GL_MAX_VERTEX_ATTRIBS             i32 #x8869)
(bind-val GL_VERTEX_ATTRIB_ARRAY_ENABLED    i32 #x8622)
(bind-val GL_VERTEX_ATTRIB_ARRAY_SIZE       i32 #x8623)
(bind-val GL_VERTEX_ATTRIB_ARRAY_STRIDE     i32 #x8624)
(bind-val GL_VERTEX_ATTRIB_ARRAY_TYPE       i32 #x8625)
(bind-val GL_VERTEX_ATTRIB_ARRAY_NORMALIZED i32 #x886A)
(bind-val GL_CURRENT_VERTEX_ATTRIB          i32 #x8626)
(bind-val GL_VERTEX_ATTRIB_ARRAY_POINTER    i32 #x8645)
(bind-val GL_VERTEX_PROGRAM_POINT_SIZE      i32 #x8642)
(bind-val GL_VERTEX_PROGRAM_TWO_SIDE        i32 #x8643)
(bind-val GL_MAX_TEXTURE_COORDS             i32 #x8871)
(bind-val GL_MAX_TEXTURE_IMAGE_UNITS        i32 #x8872)
(bind-val GL_MAX_DRAW_BUFFERS               i32 #x8824)
(bind-val GL_DRAW_BUFFER0                   i32 #x8825)
(bind-val GL_DRAW_BUFFER1                   i32 #x8826)
(bind-val GL_DRAW_BUFFER2                   i32 #x8827)
(bind-val GL_DRAW_BUFFER3                   i32 #x8828)
(bind-val GL_DRAW_BUFFER4                   i32 #x8829)
(bind-val GL_DRAW_BUFFER5                   i32 #x882A)
(bind-val GL_DRAW_BUFFER6                   i32 #x882B)
(bind-val GL_DRAW_BUFFER7                   i32 #x882C)
(bind-val GL_DRAW_BUFFER8                   i32 #x882D)
(bind-val GL_DRAW_BUFFER9                   i32 #x882E)
(bind-val GL_DRAW_BUFFER10                  i32 #x882F)
(bind-val GL_DRAW_BUFFER11                  i32 #x8830)
(bind-val GL_DRAW_BUFFER12                  i32 #x8831)
(bind-val GL_DRAW_BUFFER13                  i32 #x8832)
(bind-val GL_DRAW_BUFFER14                  i32 #x8833)
(bind-val GL_DRAW_BUFFER15                  i32 #x8834)
(bind-val GL_POINT_SPRITE                   i32 #x8861)
(bind-val GL_COORD_REPLACE                  i32 #x8862)
(bind-val GL_POINT_SPRITE_COORD_ORIGIN      i32 #x8CA0)
(bind-val GL_LOWER_LEFT                     i32 #x8CA1)
(bind-val GL_UPPER_LEFT                     i32 #x8CA2)
(bind-val GL_STENCIL_BACK_FUNC              i32 #x8800)
(bind-val GL_STENCIL_BACK_VALUE_MASK        i32 #x8CA4)
(bind-val GL_STENCIL_BACK_REF               i32 #x8CA3)
(bind-val GL_STENCIL_BACK_FAIL              i32 #x8801)
(bind-val GL_STENCIL_BACK_PASS_DEPTH_FAIL   i32 #x8802)
(bind-val GL_STENCIL_BACK_PASS_DEPTH_PASS   i32 #x8803)
(bind-val GL_STENCIL_BACK_WRITEMASK         i32 #x8CA5)

;; /* OpenGL 2.1 */
(bind-val GL_CURRENT_RASTER_SECONDARY_COLOR i32 #x845F)
(bind-val GL_PIXEL_PACK_BUFFER              i32 #x88EB)
(bind-val GL_PIXEL_UNPACK_BUFFER            i32 #x88EC)
(bind-val GL_PIXEL_PACK_BUFFER_BINDING      i32 #x88ED)
(bind-val GL_PIXEL_UNPACK_BUFFER_BINDING    i32 #x88EF)
(bind-val GL_FLOAT_MAT2x3                   i32 #x8B65)
(bind-val GL_FLOAT_MAT2x4                   i32 #x8B66)
(bind-val GL_FLOAT_MAT3x2                   i32 #x8B67)
(bind-val GL_FLOAT_MAT3x4                   i32 #x8B68)
(bind-val GL_FLOAT_MAT4x2                   i32 #x8B69)
(bind-val GL_FLOAT_MAT4x3                   i32 #x8B6A)
(bind-val GL_SRGB                           i32 #x8C40)
(bind-val GL_SRGB8                          i32 #x8C41)
(bind-val GL_SRGB_ALPHA                     i32 #x8C42)
(bind-val GL_SRGB8_ALPHA8                   i32 #x8C43)
(bind-val GL_SLUMINANCE_ALPHA               i32 #x8C44)
(bind-val GL_SLUMINANCE8_ALPHA8             i32 #x8C45)
(bind-val GL_SLUMINANCE                     i32 #x8C46)
(bind-val GL_SLUMINANCE8                    i32 #x8C47)
(bind-val GL_COMPRESSED_SRGB                i32 #x8C48)
(bind-val GL_COMPRESSED_SRGB_ALPHA          i32 #x8C49)
(bind-val GL_COMPRESSED_SLUMINANCE          i32 #x8C4A)
(bind-val GL_COMPRESSED_SLUMINANCE_ALPHA    i32 #x8C4B)

(bind-lib libGL glAccum [void,GLenum,GLfloat]*)
(bind-lib libGL glAlphaFunc [void,GLenum,GLfloat,GLclampf]*)
(bind-lib libGL glAreTexturesResident [GLboolean,GLsizei,GLuint*,GLboolean*]*)
(bind-lib libGL glArrayElement [void,GLint]*)
(bind-lib libGL glBegin [void,GLenum]*)
(bind-lib libGL glBindTexture [void,GLenum,GLuint]*)
(bind-lib libGL glBitmap [void,GLsizei,GLsizei,GLfloat,GLfloat,GLfloat,GLfloat,GLubyte*]*)
(bind-lib libGL glBlendColor [void,GLclampf,GLclampf,GLclampf,GLclampf]*)
(bind-lib libGL glBlendEquation [void,GLenum]*)
(bind-lib libGL glBlendEquationSeparate [void,GLenum,GLenum]*)
(bind-lib libGL glBlendFunc [void,GLenum,GLenum]*)
(bind-lib libGL glCallList [void,GLuint]*)
(bind-lib libGL glCallLists [void,GLsizei,GLenum,GLvoid*]*)
(bind-lib libGL glClear [void,GLbitfield]*)
(bind-lib libGL glClearAccum [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glClearColor [void,GLclampf,GLclampf,GLclampf,GLclampf]*)
(bind-lib libGL glClearDepth [void,GLclampd]*)
(bind-lib libGL glClearIndex [void,GLfloat]*)
(bind-lib libGL glClearStencil [void,GLint]*)
(bind-lib libGL glClipPlane [void,GLenum,GLdouble*]*)
(bind-lib libGL glColor3b [void,GLbyte,GLbyte,GLbyte]*)
(bind-lib libGL glColor3bv [void,GLbyte*]*)
(bind-lib libGL glColor3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glColor3dv [void,GLdouble*]*)
(bind-lib libGL glColor3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glColor3fv [void,GLfloat*]*)
(bind-lib libGL glColor3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glColor3iv [void,GLint*]*)
(bind-lib libGL glColor3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glColor3sv [void,GLshort*]*)
(bind-lib libGL glColor3ub [void,GLubyte,GLubyte,GLubyte]*)
(bind-lib libGL glColor3ubv [void,GLubyte*]*)
(bind-lib libGL glColor3ui [void,GLuint,GLuint,GLuint]*)
(bind-lib libGL glColor3uiv [void,GLuint*]*)
(bind-lib libGL glColor3us [void,GLushort,GLushort,GLushort]*)
(bind-lib libGL glColor3usv [void,GLushort*]*)
(bind-lib libGL glColor4b [void,GLbyte,GLbyte,GLbyte,GLbyte]*)
(bind-lib libGL glColor4bv [void,GLbyte*]*)
(bind-lib libGL glColor4d [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glColor4dv [void,GLdouble*]*)
(bind-lib libGL glColor4f [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glColor4fv [void,GLfloat*]*)
(bind-lib libGL glColor4i [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glColor4iv [void,GLint*]*)
(bind-lib libGL glColor4s [void,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glColor4sv [void,GLshort*]*)
(bind-lib libGL glColor4ub [void,GLubyte,GLubyte,GLubyte,GLubyte]*)
(bind-lib libGL glColor4ubv [void,GLubyte*]*)
(bind-lib libGL glColor4ui [void,GLuint,GLuint,GLuint,GLuint]*)
(bind-lib libGL glColor4uiv [void,GLuint*]*)
(bind-lib libGL glColor4us [void,GLushort,GLushort,GLushort,GLushort]*)
(bind-lib libGL glColor4usv [void,GLushort*]*)
(bind-lib libGL glColorMask [void,GLboolean,GLboolean,GLboolean,GLboolean]*)
(bind-lib libGL glColorMaterial [void,GLenum,GLenum]*)
(bind-lib libGL glColorPointer [void,GLint,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glColorSubTable [void,GLenum,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glColorTable [void,GLenum,GLenum,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glColorTableParameterfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glColorTableParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glConvolutionFilter1D [void,GLenum,GLenum,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glConvolutionFilter2D [void,GLenum,GLenum,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glConvolutionParameterf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glConvolutionParameterfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glConvolutionParameteri [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glConvolutionParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glCopyColorSubTable [void,GLenum,GLsizei,GLint,GLint,GLsizei]*)
(bind-lib libGL glCopyColorTable [void,GLenum,GLenum,GLint,GLint,GLsizei]*)
(bind-lib libGL glCopyConvolutionFilter1D [void,GLenum,GLenum,GLint,GLint,GLsizei]*)
(bind-lib libGL glCopyConvolutionFilter2D [void,GLenum,GLenum,GLint,GLint,GLsizei,GLsizei]*)
(bind-lib libGL glCopyPixels [void,GLint,GLint,GLsizei,GLsizei,GLenum]*)
(bind-lib libGL glCopyTexImage1D [void,GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint]*)
(bind-lib libGL glCopyTexImage2D [void,GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint]*)
(bind-lib libGL glCopyTexSubImage1D [void,GLenum,GLint,GLint,GLint,GLint,GLsizei]*)
(bind-lib libGL glCopyTexSubImage2D [void,GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei]*)
(bind-lib libGL glCopyTexSubImage3D [void,GLenum,GLint,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei]*)
(bind-lib libGL glCullFace [void,GLenum]*)
(bind-lib libGL glDeleteLists [void,GLuint,GLsizei]*)
(bind-lib libGL glDeleteTextures [void,GLsizei,GLuint*]*)
(bind-lib libGL glDepthFunc [void,GLenum]*)
(bind-lib libGL glDepthMask [void,GLboolean]*)
(bind-lib libGL glDepthRange [void,GLclampd,GLclampd]*)
(bind-lib libGL glDisable [void,GLenum]*)
(bind-lib libGL glDisableClientState [void,GLenum]*)
(bind-lib libGL glDrawArrays [void,GLenum,GLint,GLsizei]*)
(bind-lib libGL glDrawBuffer [void,GLenum]*)
(bind-lib libGL glDrawElements [void,GLenum,GLsizei,GLenum,GLvoid*]*)
(bind-lib libGL glDrawPixels [void,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glDrawRangeElements [void,GLenum,GLuint,GLuint,GLsizei,GLenum,GLvoid*]*)
(bind-lib libGL glEdgeFlag [void,GLboolean]*)
(bind-lib libGL glEdgeFlagPointer [void,GLsizei,GLvoid*]*)
(bind-lib libGL glEdgeFlagv [void,GLboolean*]*)
(bind-lib libGL glEnable [void,GLenum]*)
(bind-lib libGL glEnableClientState [void,GLenum]*)
(bind-lib libGL glEnd [void]*)
(bind-lib libGL glEndList [void]*)
(bind-lib libGL glEvalCoord1d [void,GLdouble]*)
(bind-lib libGL glEvalCoord1dv [void,GLdouble*]*)
(bind-lib libGL glEvalCoord1f [void,GLfloat]*)
(bind-lib libGL glEvalCoord1fv [void,GLfloat*]*)
(bind-lib libGL glEvalCoord2d [void,GLdouble,GLdouble]*)
(bind-lib libGL glEvalCoord2dv [void,GLdouble*]*)
(bind-lib libGL glEvalCoord2f [void,GLfloat,GLfloat]*)
(bind-lib libGL glEvalCoord2fv [void,GLfloat*]*)
(bind-lib libGL glEvalMesh1 [void,GLenum,GLint,GLint]*)
(bind-lib libGL glEvalMesh2 [void,GLenum,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glEvalPoint1 [void,GLint]*)
(bind-lib libGL glEvalPoint2 [void,GLint,GLint]*)
(bind-lib libGL glFeedbackBuffer [void,GLsizei,GLenum,GLfloat*]*)
(bind-lib libGL glFinish [void]*)
(bind-lib libGL glFlush [void]*)
(bind-lib libGL glFogf [void,GLenum,GLfloat]*)
(bind-lib libGL glFogfv [void,GLenum,GLfloat*]*)
(bind-lib libGL glFogi [void,GLenum,GLint]*)
(bind-lib libGL glFogiv [void,GLenum,GLint*]*)
(bind-lib libGL glFrontFace [void,GLenum]*)
(bind-lib libGL glFrustum [void,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glGenLists [GLuint,GLsizei]*)
(bind-lib libGL glGenTextures [void,GLsizei,GLuint*]*)
(bind-lib libGL glGetBooleanv [void,GLenum,GLboolean*]*)
(bind-lib libGL glGetClipPlane [void,GLenum,GLdouble*]*)
(bind-lib libGL glGetColorTable [void,GLenum,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetColorTableParameterfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetColorTableParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetConvolutionFilter [void,GLenum,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetConvolutionParameterfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetConvolutionParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetDoublev [void,GLenum,GLdouble*]*)
(bind-lib libGL glGetError [GLenum,]*)
(bind-lib libGL glGetFloatv [void,GLenum,GLfloat*]*)
(bind-lib libGL glGetHistogram [void,GLenum,GLboolean,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetHistogramParameterfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetHistogramParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetIntegerv [void,GLenum,GLint*]*)
(bind-lib libGL glGetLightfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetLightiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetMapdv [void,GLenum,GLenum,GLdouble*]*)
(bind-lib libGL glGetMapfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetMapiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetMaterialfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetMaterialiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetMinmax [void,GLenum,GLboolean,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetMinmaxParameterfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetMinmaxParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetPixelMapfv [void,GLenum,GLfloat*]*)
(bind-lib libGL glGetPixelMapuiv [void,GLenum,GLuint*]*)
(bind-lib libGL glGetPixelMapusv [void,GLenum,GLushort*]*)
(bind-lib libGL glGetPointerv [void,GLenum,GLvoid**]*)
(bind-lib libGL glGetPolygonStipple [void,GLubyte*]*)
(bind-lib libGL glGetSeparableFilter [void,GLenum,GLenum,GLenum,GLvoid*,GLvoid*,GLvoid*]*)
(bind-lib libGL glGetString [i8*,GLenum]*)
(bind-lib libGL glGetTexEnvfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetTexEnviv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetTexGendv [void,GLenum,GLenum,GLdouble*]*)
(bind-lib libGL glGetTexGenfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetTexGeniv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetTexImage [void,GLenum,GLint,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetTexLevelParameterfv [void,GLenum,GLint,GLenum,GLfloat*]*)
(bind-lib libGL glGetTexLevelParameteriv [void,GLenum,GLint,GLenum,GLint*]*)
(bind-lib libGL glGetTexParameterfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetTexParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glHint [void,GLenum,GLenum]*)
(bind-lib libGL glHistogram [void,GLenum,GLsizei,GLenum,GLboolean]*)
(bind-lib libGL glIndexMask [void,GLuint]*)
(bind-lib libGL glIndexPointer [void,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glIndexd [void,GLdouble]*)
(bind-lib libGL glIndexdv [void,GLdouble*]*)
(bind-lib libGL glIndexf [void,GLfloat]*)
(bind-lib libGL glIndexfv [void,GLfloat*]*)
(bind-lib libGL glIndexi [void,GLint]*)
(bind-lib libGL glIndexiv [void,GLint*]*)
(bind-lib libGL glIndexs [void,GLshort]*)
(bind-lib libGL glIndexsv [void,GLshort*]*)
(bind-lib libGL glIndexub [void,GLubyte]*)
(bind-lib libGL glIndexubv [void,GLubyte*]*)
(bind-lib libGL glInitNames [void]*)
(bind-lib libGL glInterleavedArrays [void,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glIsEnabled [GLboolean,GLenum]*)
(bind-lib libGL glIsList [GLboolean,GLuint]*)
(bind-lib libGL glIsTexture [GLboolean,GLuint]*)
(bind-lib libGL glLightModelf [void,GLenum,GLfloat]*)
(bind-lib libGL glLightModelfv [void,GLenum,GLfloat*]*)
(bind-lib libGL glLightModeli [void,GLenum,GLint]*)
(bind-lib libGL glLightModeliv [void,GLenum,GLint*]*)
(bind-lib libGL glLightf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glLightfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glLighti [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glLightiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glLineStipple [void,GLint,GLushort]*)
(bind-lib libGL glLineWidth [void,GLfloat]*)
(bind-lib libGL glListBase [void,GLuint]*)
(bind-lib libGL glLoadIdentity [void]*)
(bind-lib libGL glLoadMatrixd [void,GLdouble*]*)
(bind-lib libGL glLoadMatrixf [void,GLfloat*]*)
(bind-lib libGL glLoadName [void,GLuint]*)
(bind-lib libGL glLogicOp [void,GLenum]*)
(bind-lib libGL glMap1d [void,GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble*]*)
(bind-lib libGL glMap1f [void,GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat*]*)
(bind-lib libGL glMap2d [void,GLenum,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble,GLint,GLint,GLdouble*]*)
(bind-lib libGL glMap2f [void,GLenum,GLfloat,GLfloat,GLint,GLint,GLfloat,GLfloat,GLint,GLint,GLfloat*]*)
(bind-lib libGL glMapGrid1d [void,GLint,GLdouble,GLdouble]*)
(bind-lib libGL glMapGrid1f [void,GLint,GLfloat,GLfloat]*)
(bind-lib libGL glMapGrid2d [void,GLint,GLdouble,GLdouble,GLint,GLdouble,GLdouble]*)
(bind-lib libGL glMapGrid2f [void,GLint,GLfloat,GLfloat,GLint,GLfloat,GLfloat]*)
(bind-lib libGL glMaterialf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glMaterialfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glMateriali [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glMaterialiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glMatrixMode [void,GLenum]*)
(bind-lib libGL glMinmax [void,GLenum,GLenum,GLboolean]*)
(bind-lib libGL glMultMatrixd [void,GLdouble*]*)
(bind-lib libGL glMultMatrixf [void,GLfloat*]*)
(bind-lib libGL glNewList [void,GLuint,GLenum]*)
(bind-lib libGL glNormal3b [void,GLbyte,GLbyte,GLbyte]*)
(bind-lib libGL glNormal3bv [void,GLbyte*]*)
(bind-lib libGL glNormal3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glNormal3dv [void,GLdouble*]*)
(bind-lib libGL glNormal3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glNormal3fv [void,GLfloat*]*)
(bind-lib libGL glNormal3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glNormal3iv [void,GLint*]*)
(bind-lib libGL glNormal3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glNormal3sv [void,GLshort*]*)
(bind-lib libGL glNormalPointer [void,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glOrtho [void,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glPassThrough [void,GLfloat]*)
(bind-lib libGL glPixelMapfv [void,GLenum,GLint,GLfloat*]*)
(bind-lib libGL glPixelMapuiv [void,GLenum,GLint,GLuint*]*)
(bind-lib libGL glPixelMapusv [void,GLenum,GLint,GLushort*]*)
(bind-lib libGL glPixelStoref [void,GLenum,GLfloat]*)
(bind-lib libGL glPixelStorei [void,GLenum,GLint]*)
(bind-lib libGL glPixelTransferf [void,GLenum,GLfloat]*)
(bind-lib libGL glPixelTransferi [void,GLenum,GLint]*)
(bind-lib libGL glPixelZoom [void,GLfloat,GLfloat]*)
(bind-lib libGL glPointSize [void,GLfloat]*)
(bind-lib libGL glPolygonMode [void,GLenum,GLenum]*)
(bind-lib libGL glPolygonOffset [void,GLfloat,GLfloat]*)
(bind-lib libGL glPolygonStipple [void,GLubyte*]*)
(bind-lib libGL glPopAttrib [void]*)
(bind-lib libGL glPopClientAttrib [void]*)
(bind-lib libGL glPopMatrix [void]*)
(bind-lib libGL glPopName [void]*)
(bind-lib libGL glPrioritizeTextures [void,GLsizei,GLuint*,GLclampf*]*)
(bind-lib libGL glPushAttrib [void,GLbitfield]*)
(bind-lib libGL glPushClientAttrib [void,GLbitfield]*)
(bind-lib libGL glPushMatrix [void]*)
(bind-lib libGL glPushName [void,GLuint]*)
(bind-lib libGL glRasterPos2d [void,GLdouble,GLdouble]*)
(bind-lib libGL glRasterPos2dv [void,GLdouble*]*)
(bind-lib libGL glRasterPos2f [void,GLfloat,GLfloat]*)
(bind-lib libGL glRasterPos2fv [void,GLfloat*]*)
(bind-lib libGL glRasterPos2i [void,GLint,GLint]*)
(bind-lib libGL glRasterPos2iv [void,GLint*]*)
(bind-lib libGL glRasterPos2s [void,GLshort,GLshort]*)
(bind-lib libGL glRasterPos2sv [void,GLshort*]*)
(bind-lib libGL glRasterPos3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glRasterPos3dv [void,GLdouble*]*)
(bind-lib libGL glRasterPos3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glRasterPos3fv [void,GLfloat*]*)
(bind-lib libGL glRasterPos3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glRasterPos3iv [void,GLint*]*)
(bind-lib libGL glRasterPos3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glRasterPos3sv [void,GLshort*]*)
(bind-lib libGL glRasterPos4d [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glRasterPos4dv [void,GLdouble*]*)
(bind-lib libGL glRasterPos4f [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glRasterPos4fv [void,GLfloat*]*)
(bind-lib libGL glRasterPos4i [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glRasterPos4iv [void,GLint*]*)
(bind-lib libGL glRasterPos4s [void,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glRasterPos4sv [void,GLshort*]*)
(bind-lib libGL glReadBuffer [void,GLenum]*)
(bind-lib libGL glReadPixels [void,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glRectd [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glRectdv [void,GLdouble*,GLdouble*]*)
(bind-lib libGL glRectf [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glRectfv [void,GLfloat*,GLfloat*]*)
(bind-lib libGL glRecti [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glRectiv [void,GLint*,GLint*]*)
(bind-lib libGL glRects [void,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glRectsv [void,GLshort*,GLshort*]*)
(bind-lib libGL glRenderMode [GLint,GLenum]*)
(bind-lib libGL glResetHistogram [void,GLenum]*)
(bind-lib libGL glResetMinmax [void,GLenum]*)
(bind-lib libGL glRotated [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glRotatef [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glScaled [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glScalef [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glScissor [void,GLint,GLint,GLsizei,GLsizei]*)
(bind-lib libGL glSelectBuffer [void,GLsizei,GLuint*]*)
(bind-lib libGL glSeparableFilter2D [void,GLenum,GLenum,GLsizei,GLsizei,GLenum,GLenum,GLvoid*,GLvoid*]*)
(bind-lib libGL glShadeModel [void,GLenum]*)
(bind-lib libGL glStencilFunc [void,GLenum,GLint,GLuint]*)
(bind-lib libGL glStencilMask [void,GLuint]*)
(bind-lib libGL glStencilOp [void,GLenum,GLenum,GLenum]*)
(bind-lib libGL glTexCoord1d [void,GLdouble]*)
(bind-lib libGL glTexCoord1dv [void,GLdouble*]*)
(bind-lib libGL glTexCoord1f [void,GLfloat]*)
(bind-lib libGL glTexCoord1fv [void,GLfloat*]*)
(bind-lib libGL glTexCoord1i [void,GLint]*)
(bind-lib libGL glTexCoord1iv [void,GLint*]*)
(bind-lib libGL glTexCoord1s [void,GLshort]*)
(bind-lib libGL glTexCoord1sv [void,GLshort*]*)
(bind-lib libGL glTexCoord2d [void,GLdouble,GLdouble]*)
(bind-lib libGL glTexCoord2dv [void,GLdouble*]*)
(bind-lib libGL glTexCoord2f [void,GLfloat,GLfloat]*)
(bind-lib libGL glTexCoord2fv [void,GLfloat*]*)
(bind-lib libGL glTexCoord2i [void,GLint,GLint]*)
(bind-lib libGL glTexCoord2iv [void,GLint*]*)
(bind-lib libGL glTexCoord2s [void,GLshort,GLshort]*)
(bind-lib libGL glTexCoord2sv [void,GLshort*]*)
(bind-lib libGL glTexCoord3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glTexCoord3dv [void,GLdouble*]*)
(bind-lib libGL glTexCoord3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glTexCoord3fv [void,GLfloat*]*)
(bind-lib libGL glTexCoord3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glTexCoord3iv [void,GLint*]*)
(bind-lib libGL glTexCoord3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glTexCoord3sv [void,GLshort*]*)
(bind-lib libGL glTexCoord4d [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glTexCoord4dv [void,GLdouble*]*)
(bind-lib libGL glTexCoord4f [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glTexCoord4fv [void,GLfloat*]*)
(bind-lib libGL glTexCoord4i [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glTexCoord4iv [void,GLint*]*)
(bind-lib libGL glTexCoord4s [void,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glTexCoord4sv [void,GLshort*]*)
(bind-lib libGL glTexCoordPointer [void,GLint,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glTexEnvf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glTexEnvfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glTexEnvi [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glTexEnviv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glTexGend [void,GLenum,GLenum,GLdouble]*)
(bind-lib libGL glTexGendv [void,GLenum,GLenum,GLdouble*]*)
(bind-lib libGL glTexGenf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glTexGenfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glTexGeni [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glTexGeniv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glTexImage1D [void,GLenum,GLint,GLint,GLsizei,GLint,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTexImage2D [void,GLenum,GLint,GLint,GLsizei,GLsizei,GLint,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTexImage3D [void,GLenum,GLint,GLint,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTexParameterf [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glTexParameterfv [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glTexParameteri [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glTexParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glTexSubImage1D [void,GLenum,GLint,GLint,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTexSubImage2D [void,GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTexSubImage3D [void,GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTranslated [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glTranslatef [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertex2d [void,GLdouble,GLdouble]*)
(bind-lib libGL glVertex2dv [void,GLdouble*]*)
(bind-lib libGL glVertex2f [void,GLfloat,GLfloat]*)
(bind-lib libGL glVertex2fv [void,GLfloat*]*)
(bind-lib libGL glVertex2i [void,GLint,GLint]*)
(bind-lib libGL glVertex2iv [void,GLint*]*)
(bind-lib libGL glVertex2s [void,GLshort,GLshort]*)
(bind-lib libGL glVertex2sv [void,GLshort*]*)
(bind-lib libGL glVertex3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glVertex3dv [void,GLdouble*]*)
(bind-lib libGL glVertex3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertex3fv [void,GLfloat*]*)
(bind-lib libGL glVertex3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glVertex3iv [void,GLint*]*)
(bind-lib libGL glVertex3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glVertex3sv [void,GLshort*]*)
(bind-lib libGL glVertex4d [void,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glVertex4dv [void,GLdouble*]*)
(bind-lib libGL glVertex4f [void,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertex4fv [void,GLfloat*]*)
(bind-lib libGL glVertex4i [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glVertex4iv [void,GLint*]*)
(bind-lib libGL glVertex4s [void,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glVertex4sv [void,GLshort*]*)
(bind-lib libGL glVertexPointer [void,GLint,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glViewport [void,GLint,GLint,GLsizei,GLsizei]*)
(bind-lib libGL glSampleCoverage [void,GLclampf,GLboolean]*)
(bind-lib libGL glLoadTransposeMatrixf [void,GLfloat*]*)
(bind-lib libGL glLoadTransposeMatrixd [void,GLdouble*]*)
(bind-lib libGL glMultTransposeMatrixf [void,GLfloat*]*)
(bind-lib libGL glMultTransposeMatrixd [void,GLdouble*]*)
(bind-lib libGL glCompressedTexImage3D [void,GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLsizei,GLvoid*]*)
(bind-lib libGL glCompressedTexImage2D [void,GLenum,GLint,GLenum,GLsizei,GLsizei,GLint,GLsizei,GLvoid*]*)
(bind-lib libGL glCompressedTexImage1D [void,GLenum,GLint,GLenum,GLsizei,GLint,GLsizei,GLvoid*]*)
(bind-lib libGL glCompressedTexSubImage3D [void,GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glCompressedTexSubImage2D [void,GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glCompressedTexSubImage1D [void,GLenum,GLint,GLint,GLsizei,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glGetCompressedTexImage [void,GLenum,GLint,GLvoid*]*)
(bind-lib libGL glActiveTexture [void,GLenum]*)
(bind-lib libGL glClientActiveTexture [void,GLenum]*)
(bind-lib libGL glMultiTexCoord1d [void,GLenum,GLdouble]*)
(bind-lib libGL glMultiTexCoord1dv [void,GLenum,GLdouble*]*)
(bind-lib libGL glMultiTexCoord1f [void,GLenum,GLfloat]*)
(bind-lib libGL glMultiTexCoord1fv [void,GLenum,GLfloat*]*)
(bind-lib libGL glMultiTexCoord1i [void,GLenum,GLint]*)
(bind-lib libGL glMultiTexCoord1iv [void,GLenum,GLint*]*)
(bind-lib libGL glMultiTexCoord1s [void,GLenum,GLshort]*)
(bind-lib libGL glMultiTexCoord1sv [void,GLenum,GLshort*]*)
(bind-lib libGL glMultiTexCoord2d [void,GLenum,GLdouble,GLdouble]*)
(bind-lib libGL glMultiTexCoord2dv [void,GLenum,GLdouble*]*)
(bind-lib libGL glMultiTexCoord2f [void,GLenum,GLfloat,GLfloat]*)
(bind-lib libGL glMultiTexCoord2fv [void,GLenum,GLfloat*]*)
(bind-lib libGL glMultiTexCoord2i [void,GLenum,GLint,GLint]*)
(bind-lib libGL glMultiTexCoord2iv [void,GLenum,GLint*]*)
(bind-lib libGL glMultiTexCoord2s [void,GLenum,GLshort,GLshort]*)
(bind-lib libGL glMultiTexCoord2sv [void,GLenum,GLshort*]*)
(bind-lib libGL glMultiTexCoord3d [void,GLenum,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glMultiTexCoord3dv [void,GLenum,GLdouble*]*)
(bind-lib libGL glMultiTexCoord3f [void,GLenum,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glMultiTexCoord3fv [void,GLenum,GLfloat*]*)
(bind-lib libGL glMultiTexCoord3i [void,GLenum,GLint,GLint,GLint]*)
(bind-lib libGL glMultiTexCoord3iv [void,GLenum,GLint*]*)
(bind-lib libGL glMultiTexCoord3s [void,GLenum,GLshort,GLshort,GLshort]*)
(bind-lib libGL glMultiTexCoord3sv [void,GLenum,GLshort*]*)
(bind-lib libGL glMultiTexCoord4d [void,GLenum,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glMultiTexCoord4dv [void,GLenum,GLdouble*]*)
(bind-lib libGL glMultiTexCoord4f [void,GLenum,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glMultiTexCoord4fv [void,GLenum,GLfloat*]*)
(bind-lib libGL glMultiTexCoord4i [void,GLenum,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glMultiTexCoord4iv [void,GLenum,GLint*]*)
(bind-lib libGL glMultiTexCoord4s [void,GLenum,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glMultiTexCoord4sv [void,GLenum,GLshort*]*)
(bind-lib libGL glFogCoordf [void,GLfloat]*)
(bind-lib libGL glFogCoordfv [void,GLfloat*]*)
(bind-lib libGL glFogCoordd [void,GLdouble]*)
(bind-lib libGL glFogCoorddv [void,GLdouble*]*)
(bind-lib libGL glFogCoordPointer [void,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glSecondaryColor3b [void,GLbyte,GLbyte,GLbyte]*)
(bind-lib libGL glSecondaryColor3bv [void,GLbyte*]*)
(bind-lib libGL glSecondaryColor3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glSecondaryColor3dv [void,GLdouble*]*)
(bind-lib libGL glSecondaryColor3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glSecondaryColor3fv [void,GLfloat*]*)
(bind-lib libGL glSecondaryColor3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glSecondaryColor3iv [void,GLint*]*)
(bind-lib libGL glSecondaryColor3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glSecondaryColor3sv [void,GLshort*]*)
(bind-lib libGL glSecondaryColor3ub [void,GLubyte,GLubyte,GLubyte]*)
(bind-lib libGL glSecondaryColor3ubv [void,GLubyte*]*)
(bind-lib libGL glSecondaryColor3ui [void,GLuint,GLuint,GLuint]*)
(bind-lib libGL glSecondaryColor3uiv [void,GLuint*]*)
(bind-lib libGL glSecondaryColor3us [void,GLushort,GLushort,GLushort]*)
(bind-lib libGL glSecondaryColor3usv [void,GLushort*]*)
(bind-lib libGL glSecondaryColorPointer [void,GLint,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glPointParameterf [void,GLenum,GLfloat]*)
(bind-lib libGL glPointParameterfv [void,GLenum,GLfloat*]*)
(bind-lib libGL glPointParameteri [void,GLenum,GLint]*)
(bind-lib libGL glPointParameteriv [void,GLenum,GLint*]*)
(bind-lib libGL glBlendFuncSeparate [void,GLenum,GLenum,GLenum,GLenum]*)
(bind-lib libGL glMultiDrawArrays [void,GLenum,GLint*,GLsizei*,GLsizei]*)
(bind-lib libGL glMultiDrawElements [void,GLenum,GLsizei*,GLenum,GLvoid**,GLsizei]*)
(bind-lib libGL glWindowPos2d [void,GLdouble,GLdouble]*)
(bind-lib libGL glWindowPos2dv [void,GLdouble*]*)
(bind-lib libGL glWindowPos2f [void,GLfloat,GLfloat]*)
(bind-lib libGL glWindowPos2fv [void,GLfloat*]*)
(bind-lib libGL glWindowPos2i [void,GLint,GLint]*)
(bind-lib libGL glWindowPos2iv [void,GLint*]*)
(bind-lib libGL glWindowPos2s [void,GLshort,GLshort]*)
(bind-lib libGL glWindowPos2sv [void,GLshort*]*)
(bind-lib libGL glWindowPos3d [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glWindowPos3dv [void,GLdouble*]*)
(bind-lib libGL glWindowPos3f [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glWindowPos3fv [void,GLfloat*]*)
(bind-lib libGL glWindowPos3i [void,GLint,GLint,GLint]*)
(bind-lib libGL glWindowPos3iv [void,GLint*]*)
(bind-lib libGL glWindowPos3s [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glWindowPos3sv [void,GLshort*]*)
(bind-lib libGL glGenQueries [void,GLsizei,GLuint*]*)
(bind-lib libGL glDeleteQueries [void,GLsizei,GLuint*]*)
(bind-lib libGL glIsQuery [GLboolean,GLuint]*)
(bind-lib libGL glBeginQuery [void,GLenum,GLuint]*)
(bind-lib libGL glEndQuery [void,GLenum]*)
(bind-lib libGL glGetQueryiv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetQueryObjectiv [void,GLuint,GLenum,GLint*]*)
(bind-lib libGL glGetQueryObjectuiv [void,GLuint,GLenum,GLuint*]*)
(bind-lib libGL glBindBuffer [void,GLenum,GLuint]*)
(bind-lib libGL glDeleteBuffers [void,GLsizei,GLuint*]*)
(bind-lib libGL glGenBuffers [void,GLsizei,GLuint*]*)
(bind-lib libGL glIsBuffer [GLboolean,GLuint]*)
(bind-lib libGL glBufferData [void,GLenum,GLsizeiptr,GLvoid*,GLenum]*)
(bind-lib libGL glBufferSubData [void,GLenum,GLintptr,GLsizeiptr,GLvoid*]*)
(bind-lib libGL glGetBufferSubData [void,GLenum,GLintptr,GLsizeiptr,GLvoid*]*)
(bind-lib libGL glMapBuffer [GLvoid*,GLenum,GLenum]*)
(bind-lib libGL glUnmapBuffer [GLboolean,GLenum]*)
(bind-lib libGL glGetBufferParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetBufferPointerv [void,GLenum,GLenum,GLvoid**]*)
(bind-lib libGL glDrawBuffers [void,GLsizei,GLenum*]*)
(bind-lib libGL glVertexAttrib1d [void,GLuint,GLdouble]*)
(bind-lib libGL glVertexAttrib1dv [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib1f [void,GLuint,GLfloat]*)
(bind-lib libGL glVertexAttrib1fv [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib1s [void,GLuint,GLshort]*)
(bind-lib libGL glVertexAttrib1sv [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib2d [void,GLuint,GLdouble,GLdouble]*)
(bind-lib libGL glVertexAttrib2dv [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib2f [void,GLuint,GLfloat,GLfloat]*)
(bind-lib libGL glVertexAttrib2fv [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib2s [void,GLuint,GLshort,GLshort]*)
(bind-lib libGL glVertexAttrib2sv [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib3d [void,GLuint,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glVertexAttrib3dv [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib3f [void,GLuint,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertexAttrib3fv [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib3s [void,GLuint,GLshort,GLshort,GLshort]*)
(bind-lib libGL glVertexAttrib3sv [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib4Nbv [void,GLuint,GLbyte*]*)
(bind-lib libGL glVertexAttrib4Niv [void,GLuint,GLint*]*)
(bind-lib libGL glVertexAttrib4Nsv [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib4Nub [void,GLuint,GLubyte,GLubyte,GLubyte,GLubyte]*)
(bind-lib libGL glVertexAttrib4Nubv [void,GLuint,GLubyte*]*)
(bind-lib libGL glVertexAttrib4Nuiv [void,GLuint,GLuint*]*)
(bind-lib libGL glVertexAttrib4Nusv [void,GLuint,GLushort*]*)
(bind-lib libGL glVertexAttrib4bv [void,GLuint,GLbyte*]*)
(bind-lib libGL glVertexAttrib4d [void,GLuint,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glVertexAttrib4dv [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib4f [void,GLuint,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertexAttrib4fv [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib4iv [void,GLuint,GLint*]*)
(bind-lib libGL glVertexAttrib4s [void,GLuint,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glVertexAttrib4sv [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib4ubv [void,GLuint,GLubyte*]*)
(bind-lib libGL glVertexAttrib4uiv [void,GLuint,GLuint*]*)
(bind-lib libGL glVertexAttrib4usv [void,GLuint,GLushort*]*)
(bind-lib libGL glVertexAttribPointer [void,GLuint,GLint,GLenum,GLboolean,GLsizei,GLvoid*]*)
(bind-lib libGL glEnableVertexAttribArray [void,GLuint]*)
(bind-lib libGL glDisableVertexAttribArray [void,GLuint]*)
(bind-lib libGL glGetVertexAttribdv [void,GLuint,GLenum,GLdouble*]*)
(bind-lib libGL glGetVertexAttribfv [void,GLuint,GLenum,GLfloat*]*)
(bind-lib libGL glGetVertexAttribiv [void,GLuint,GLenum,GLint*]*)
(bind-lib libGL glGetVertexAttribPointerv [void,GLuint,GLenum,GLvoid**]*)
(bind-lib libGL glDeleteShader [void,GLuint]*)
(bind-lib libGL glDetachShader [void,GLuint,GLuint]*)
(bind-lib libGL glCreateShader [GLuint,GLenum]*)
(bind-lib libGL glShaderSource [void,GLuint,GLsizei,GLchar**,GLint*]*)
(bind-lib libGL glCompileShader [void,GLuint]*)
(bind-lib libGL glCreateProgram [GLuint,]*)
(bind-lib libGL glAttachShader [void,GLuint,GLuint]*)
(bind-lib libGL glLinkProgram [void,GLuint]*)
(bind-lib libGL glUseProgram [void,GLuint]*)
(bind-lib libGL glDeleteProgram [void,GLuint]*)
(bind-lib libGL glValidateProgram [void,GLuint]*)
(bind-lib libGL glUniform1f [void,GLint,GLfloat]*)
(bind-lib libGL glUniform2f [void,GLint,GLfloat,GLfloat]*)
(bind-lib libGL glUniform3f [void,GLint,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glUniform4f [void,GLint,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glUniform1i [void,GLint,GLint]*)
(bind-lib libGL glUniform2i [void,GLint,GLint,GLint]*)
(bind-lib libGL glUniform3i [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glUniform4i [void,GLint,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glUniform1fv [void,GLint,GLsizei,GLfloat*]*)
(bind-lib libGL glUniform2fv [void,GLint,GLsizei,GLfloat*]*)
(bind-lib libGL glUniform3fv [void,GLint,GLsizei,GLfloat*]*)
(bind-lib libGL glUniform4fv [void,GLint,GLsizei,GLfloat*]*)
(bind-lib libGL glUniform1iv [void,GLint,GLsizei,GLint*]*)
(bind-lib libGL glUniform2iv [void,GLint,GLsizei,GLint*]*)
(bind-lib libGL glUniform3iv [void,GLint,GLsizei,GLint*]*)
(bind-lib libGL glUniform4iv [void,GLint,GLsizei,GLint*]*)
(bind-lib libGL glUniformMatrix2fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glUniformMatrix3fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glUniformMatrix4fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glIsShader [GLboolean,GLuint]*)
(bind-lib libGL glIsProgram [GLboolean,GLuint]*)
(bind-lib libGL glGetShaderiv [void,GLuint,GLenum,GLint*]*)
(bind-lib libGL glGetProgramiv [void,GLuint,GLenum,GLint*]*)
(bind-lib libGL glGetAttachedShaders [void,GLuint,GLsizei,GLsizei*,GLuint*]*)
(bind-lib libGL glGetShaderInfoLog [void,GLuint,GLsizei,GLsizei*,GLchar*]*)
(bind-lib libGL glGetProgramInfoLog [void,GLuint,GLsizei,GLsizei*,GLchar*]*)
(bind-lib libGL glGetUniformLocation [GLint,GLuint,GLchar*]*)
(bind-lib libGL glGetActiveUniform [void,GLuint,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,GLchar*]*)
(bind-lib libGL glGetUniformfv [void,GLuint,GLint,GLfloat*]*)
(bind-lib libGL glGetUniformiv [void,GLuint,GLint,GLint*]*)
(bind-lib libGL glGetShaderSource [void,GLuint,GLsizei,GLsizei*,GLchar*]*)
(bind-lib libGL glBindAttribLocation [void,GLuint,GLuint,GLchar*]*)
(bind-lib libGL glGetActiveAttrib [void,GLuint,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,GLchar*]*)
(bind-lib libGL glGetAttribLocation [GLint,GLuint,GLchar*]*)
(bind-lib libGL glStencilFuncSeparate [void,GLenum,GLenum,GLint,GLuint]*)
(bind-lib libGL glStencilOpSeparate [void,GLenum,GLenum,GLenum,GLenum]*)
(bind-lib libGL glStencilMaskSeparate [void,GLenum,GLuint]*)
(bind-lib libGL glUniformMatrix2x3fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glUniformMatrix3x2fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glUniformMatrix2x4fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glUniformMatrix4x2fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glUniformMatrix3x4fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glUniformMatrix4x3fv [void,GLint,GLsizei,GLboolean,GLfloat*]*)

;; glext.h

(bind-val GL_ARB_color_buffer_float i32 1)
(bind-val GL_ARB_depth_buffer_float i32 1)
(bind-val GL_ARB_depth_clamp i32 1)
(bind-val GL_ARB_depth_texture i32 1)
(bind-val GL_ARB_draw_buffers i32 1)
(bind-val GL_ARB_draw_elements_base_vertex i32 1)
(bind-val GL_ARB_draw_instanced i32 1)
(bind-val GL_ARB_fragment_program i32 1)
(bind-val GL_ARB_fragment_program_shadow i32 1)
(bind-val GL_ARB_fragment_shader i32 1)
(bind-val GL_ARB_framebuffer_object i32 1)
(bind-val GL_ARB_framebuffer_sRGB i32 1)
(bind-val GL_ARB_half_float_pixel i32 1)
(bind-val GL_ARB_half_float_vertex i32 1)
(bind-val GL_ARB_imaging i32 1)
(bind-val GL_ARB_instanced_arrays i32 1)
(bind-val GL_ARB_multisample i32 1)
(bind-val GL_ARB_multitexture i32 1)
(bind-val GL_ARB_occlusion_query i32 1)
(bind-val GL_ARB_pixel_buffer_object i32 1)
(bind-val GL_ARB_point_parameters i32 1)
(bind-val GL_ARB_point_sprite i32 1)
(bind-val GL_ARB_provoking_vertex i32 1)
(bind-val GL_ARB_seamless_cube_map i32 1)
(bind-val GL_ARB_shader_objects i32 1)
(bind-val GL_ARB_shader_texture_lod i32 1)
(bind-val GL_ARB_shading_language_100 i32 1)
(bind-val GL_ARB_shadow i32 1)
(bind-val GL_ARB_shadow_ambient i32 1)
(bind-val GL_ARB_sync i32 1)
(bind-val GL_ARB_texture_border_clamp i32 1)
(bind-val GL_ARB_texture_compression i32 1)
(bind-val GL_ARB_texture_compression_rgtc i32 1)
(bind-val GL_ARB_texture_cube_map i32 1)
(bind-val GL_ARB_texture_env_add i32 1)
(bind-val GL_ARB_texture_env_combine i32 1)
(bind-val GL_ARB_texture_env_crossbar i32 1)
(bind-val GL_ARB_texture_env_dot3 i32 1)
(bind-val GL_ARB_texture_float i32 1)
(bind-val GL_ARB_texture_mirrored_repeat i32 1)
(bind-val GL_ARB_texture_non_power_of_two i32 1)
(bind-val GL_ARB_texture_rectangle i32 1)
(bind-val GL_ARB_texture_rg i32 1)
(bind-val GL_ARB_transpose_matrix i32 1)
(bind-val GL_ARB_vertex_array_bgra i32 1)
(bind-val GL_ARB_vertex_blend i32 1)
(bind-val GL_ARB_vertex_buffer_object i32 1)
(bind-val GL_ARB_vertex_program i32 1)
(bind-val GL_ARB_vertex_shader i32 1)
(bind-val GL_ARB_window_pos i32 1)
(bind-val GL_EXT_abgr i32 1)
(bind-val GL_EXT_bgra i32 1)
(bind-val GL_EXT_bindable_uniform i32 1)
(bind-val GL_EXT_blend_color i32 1)
(bind-val GL_EXT_blend_equation_separate i32 1)
(bind-val GL_EXT_blend_func_separate i32 1)
(bind-val GL_EXT_blend_minmax i32 1)
(bind-val GL_EXT_blend_subtract i32 1)
(bind-val GL_EXT_clip_volume_hint i32 1)
(bind-val GL_EXT_debug_label i32 1)
(bind-val GL_EXT_debug_marker i32 1)
(bind-val GL_EXT_depth_bounds_test i32 1)
(bind-val GL_EXT_draw_buffers2 i32 1)
(bind-val GL_EXT_draw_range_elements i32 1)
(bind-val GL_EXT_fog_coord i32 1)
(bind-val GL_EXT_framebuffer_blit i32 1)
(bind-val GL_EXT_framebuffer_multisample i32 1)
(bind-val GL_EXT_framebuffer_multisample_blit_scaled i32 1)
(bind-val GL_EXT_framebuffer_object i32 1)
(bind-val GL_EXT_framebuffer_sRGB i32 1)
(bind-val GL_EXT_geometry_shader4 i32 1)
(bind-val GL_EXT_gpu_program_parameters i32 1)
(bind-val GL_EXT_gpu_shader4 i32 1)
(bind-val GL_EXT_multi_draw_arrays i32 1)
(bind-val GL_EXT_packed_depth_stencil i32 1)
(bind-val GL_EXT_packed_float i32 1)
(bind-val GL_EXT_provoking_vertex i32 1)
(bind-val GL_EXT_rescale_normal i32 1)
(bind-val GL_EXT_secondary_color i32 1)
(bind-val GL_EXT_separate_specular_color i32 1)
(bind-val GL_EXT_shadow_funcs i32 1)
(bind-val GL_EXT_stencil_two_side i32 1)
(bind-val GL_EXT_stencil_wrap i32 1)
(bind-val GL_EXT_texture_array i32 1)
(bind-val GL_EXT_texture_compression_dxt1 i32 1)
(bind-val GL_EXT_texture_compression_s3tc i32 1)
(bind-val GL_EXT_texture_env_add i32 1)
(bind-val GL_EXT_texture_filter_anisotropic i32 1)
(bind-val GL_EXT_texture_integer i32 1)
(bind-val GL_EXT_texture_lod_bias i32 1)
(bind-val GL_EXT_texture_mirror_clamp i32 1)
(bind-val GL_EXT_texture_rectangle i32 1)
(bind-val GL_EXT_texture_shared_exponent i32 1)
(bind-val GL_EXT_texture_sRGB i32 1)
(bind-val GL_EXT_texture_sRGB_decode i32 1)
(bind-val GL_EXT_timer_query i32 1)
(bind-val GL_EXT_transform_feedback i32 1)
(bind-val GL_EXT_vertex_array_bgra i32 1)
(bind-val GL_APPLE_aux_depth_stencil i32 1)
(bind-val GL_APPLE_client_storage i32 1)
(bind-val GL_APPLE_element_array i32 1)
(bind-val GL_APPLE_fence i32 1)
(bind-val GL_APPLE_float_pixels i32 1)
(bind-val GL_APPLE_flush_buffer_range i32 1)
(bind-val GL_APPLE_flush_render i32 1)
(bind-val GL_APPLE_object_purgeable i32 1)
(bind-val GL_APPLE_packed_pixels i32 1)
(bind-val GL_APPLE_pixel_buffer i32 1)
(bind-val GL_APPLE_rgb_422 i32 1)
(bind-val GL_APPLE_row_bytes i32 1)
(bind-val GL_APPLE_specular_vector i32 1)
(bind-val GL_APPLE_texture_range i32 1)
(bind-val GL_APPLE_transform_hint i32 1)
(bind-val GL_APPLE_vertex_array_object i32 1)
(bind-val GL_APPLE_vertex_array_range i32 1)
(bind-val GL_APPLE_vertex_point_size i32 1)
(bind-val GL_APPLE_vertex_program_evaluators i32 1)
(bind-val GL_APPLE_ycbcr_422 i32 1)
(bind-val GL_ATI_blend_equation_separate i32 1)
(bind-val GL_ATI_blend_weighted_minmax i32 1)
(bind-val GL_ATI_point_cull_mode i32 1)
(bind-val GL_ATI_separate_stencil i32 1)
(bind-val GL_ATI_texture_compression_3dc i32 1)
(bind-val GL_ATI_texture_env_combine3 i32 1)
(bind-val GL_ATI_texture_float i32 1)
(bind-val GL_ATI_texture_mirror_once i32 1)
(bind-val GL_IBM_rasterpos_clip i32 1)
(bind-val GL_NV_blend_square i32 1)
(bind-val GL_NV_conditional_render i32 1)
(bind-val GL_NV_depth_clamp i32 1)
(bind-val GL_NV_fog_distance i32 1)
(bind-val GL_NV_fragment_program_option i32 1)
(bind-val GL_NV_fragment_program2 i32 1)
(bind-val GL_NV_light_max_exponent i32 1)
(bind-val GL_NV_multisample_filter_hint i32 1)
(bind-val GL_NV_point_sprite i32 1)
(bind-val GL_NV_texgen_reflection i32 1)
(bind-val GL_NV_texture_barrier i32 1)
(bind-val GL_NV_vertex_program2_option i32 1)
(bind-val GL_NV_vertex_program3 i32 1)
(bind-val GL_SGI_color_matrix i32 1)
(bind-val GL_SGIS_generate_mipmap i32 1)
(bind-val GL_SGIS_texture_edge_clamp i32 1)
(bind-val GL_SGIS_texture_lod i32 1)

(bind-val GL_EXT_color_subtable i32 0)
(bind-val GL_EXT_compiled_vertex_array i32 0)
(bind-val GL_EXT_convolution i32 0)
(bind-val GL_EXT_copy_texture i32 0)
(bind-val GL_EXT_histogram i32 0)
(bind-val GL_EXT_packed_pixels i32 0)
(bind-val GL_EXT_paletted_texture i32 0)
(bind-val GL_EXT_polygon_offset i32 0)
(bind-val GL_EXT_shared_texture_palette i32 0)
(bind-val GL_EXT_subtexture i32 0)
(bind-val GL_EXT_texture i32 0)
(bind-val GL_EXT_texture_cube_map i32 0)
(bind-val GL_EXT_texture_env_combine i32 0)
(bind-val GL_EXT_texture_object i32 0)
(bind-val GL_EXT_texture3D i32 0)
(bind-val GL_EXT_vertex_array i32 0)
(bind-val GL_ATI_array_rev_comps_in_4_bytes i32 0)
(bind-val GL_ATI_pn_triangles i32 0)
(bind-val GL_ATI_text_fragment_shader i32 0)
(bind-val GL_ATIX_pn_triangles i32 0)
(bind-val GL_HP_convolution_border_modes i32 0)
(bind-val GL_NV_register_combiners i32 0)
(bind-val GL_NV_register_combiners2 i32 0)
(bind-val GL_NV_texture_shader i32 0)
(bind-val GL_NV_texture_shader2 i32 0)
(bind-val GL_NV_texture_shader3 i32 0)
(bind-val GL_NV_vertex_array_range i32 0)
(bind-val GL_NV_vertex_array_range2 i32 0)
(bind-val GL_NV_vertex_program i32 0)
(bind-val GL_SGI_color_table i32 0)
(bind-val GL_SGIS_point_parameters i32 0)
(bind-val GL_SGIS_texture_border_clamp i32 0)
(bind-val GL_SGIX_depth_texture i32 0)

;; #ifdef GL_ARB_shader_objects
(bind-alias GLcharARB i8) ;; char
(bind-alias GLhandleARB i8*) ;; void

;; #if GL_ARB_sync
(bind-alias GLint64 i64) ;; int64_t
(bind-alias GLuint64 i64) ;; uint64_t
(bind-alias GLsync i8)

;; #if GL_ARB_vertex_buffer_object
(bind-alias GLintptrARB i32) ;; long
(bind-alias GLsizeiptrARB i32) ;; long

;; #if GL_EXT_timer_query
(bind-alias GLint64EXT i64) ;; int64_t
(bind-alias GLuint64EXT i64) ;; uint64_t

(bind-val GL_GLEXT_VERSION i32 8)

;; #if GL_ARB_color_buffer_float
(bind-val GL_RGBA_FLOAT_MODE_ARB i32 #x8820)
(bind-val GL_CLAMP_VERTEX_COLOR_ARB i32 #x891A)
(bind-val GL_CLAMP_FRAGMENT_COLOR_ARB i32 #x891B)
(bind-val GL_CLAMP_READ_COLOR_ARB i32 #x891C)
(bind-val GL_FIXED_ONLY_ARB i32 #x891D)


;; #if GL_ARB_depth_buffer_float
(bind-val GL_DEPTH_COMPONENT32F i32 #x8CAC)
(bind-val GL_DEPTH32F_STENCIL8 i32 #x8CAD)
(bind-val GL_FLOAT_32_UNSIGNED_INT_24_8_REV i32 #x8DAD)


;; #if GL_ARB_depth_clamp
(bind-val GL_DEPTH_CLAMP i32 #x864F)


;; #if GL_ARB_depth_texture
(bind-val GL_DEPTH_COMPONENT16_ARB i32 #x81A5)
(bind-val GL_DEPTH_COMPONENT24_ARB i32 #x81A6)
(bind-val GL_DEPTH_COMPONENT32_ARB i32 #x81A7)
(bind-val GL_TEXTURE_DEPTH_SIZE_ARB i32 #x884A)
(bind-val GL_DEPTH_TEXTURE_MODE_ARB i32 #x884B)


;; #if GL_ARB_draw_buffers
(bind-val GL_MAX_DRAW_BUFFERS_ARB i32 #x8824)
(bind-val GL_DRAW_BUFFER0_ARB i32 #x8825)
(bind-val GL_DRAW_BUFFER1_ARB i32 #x8826)
(bind-val GL_DRAW_BUFFER2_ARB i32 #x8827)
(bind-val GL_DRAW_BUFFER3_ARB i32 #x8828)
(bind-val GL_DRAW_BUFFER4_ARB i32 #x8829)
(bind-val GL_DRAW_BUFFER5_ARB i32 #x882A)
(bind-val GL_DRAW_BUFFER6_ARB i32 #x882B)
(bind-val GL_DRAW_BUFFER7_ARB i32 #x882C)
(bind-val GL_DRAW_BUFFER8_ARB i32 #x882D)
(bind-val GL_DRAW_BUFFER9_ARB i32 #x882E)
(bind-val GL_DRAW_BUFFER10_ARB i32 #x882F)
(bind-val GL_DRAW_BUFFER11_ARB i32 #x8830)
(bind-val GL_DRAW_BUFFER12_ARB i32 #x8831)
(bind-val GL_DRAW_BUFFER13_ARB i32 #x8832)
(bind-val GL_DRAW_BUFFER14_ARB i32 #x8833)
(bind-val GL_DRAW_BUFFER15_ARB i32 #x8834)


;; #if GL_ARB_fragment_program
(bind-val GL_FRAGMENT_PROGRAM_ARB i32 #x8804)
(bind-val GL_PROGRAM_ALU_INSTRUCTIONS_ARB i32 #x8805)
(bind-val GL_PROGRAM_TEX_INSTRUCTIONS_ARB i32 #x8806)
(bind-val GL_PROGRAM_TEX_INDIRECTIONS_ARB i32 #x8807)
(bind-val GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB i32 #x8808)
(bind-val GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB i32 #x8809)
(bind-val GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB i32 #x880A)
(bind-val GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB i32 #x880B)
(bind-val GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB i32 #x880C)
(bind-val GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB i32 #x880D)
(bind-val GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB i32 #x880E)
(bind-val GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB i32 #x880F)
(bind-val GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB i32 #x8810)
(bind-val GL_MAX_TEXTURE_COORDS_ARB i32 #x8871)
(bind-val GL_MAX_TEXTURE_IMAGE_UNITS_ARB i32 #x8872)


;; #if GL_ARB_fragment_shader
(bind-val GL_FRAGMENT_SHADER_ARB i32 #x8B30)
(bind-val GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB i32 #x8B49)
(bind-val GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB i32 #x8B8B)
(bind-val GL_MAX_TEXTURE_COORDS_ARB i32 #x8871)
(bind-val GL_MAX_TEXTURE_IMAGE_UNITS_ARB i32 #x8872)


;; #if GL_ARB_framebuffer_object
(bind-val GL_INVALID_FRAMEBUFFER_OPERATION i32 #x0506)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING i32 #x8210)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE i32 #x8211)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE i32 #x8212)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE i32 #x8213)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE i32 #x8214)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE i32 #x8215)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE i32 #x8216)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE i32 #x8217)
(bind-val GL_FRAMEBUFFER_DEFAULT i32 #x8218)
(bind-val GL_FRAMEBUFFER_UNDEFINED i32 #x8219)
(bind-val GL_DEPTH_STENCIL_ATTACHMENT i32 #x821A)
(bind-val GL_MAX_RENDERBUFFER_SIZE i32 #x84E8)
(bind-val GL_DEPTH_STENCIL i32 #x84F9)
(bind-val GL_UNSIGNED_INT_24_8 i32 #x84FA)
(bind-val GL_DEPTH24_STENCIL8 i32 #x88F0)
(bind-val GL_TEXTURE_STENCIL_SIZE i32 #x88F1)
(bind-val GL_TEXTURE_RED_TYPE i32 #x8C10)
(bind-val GL_TEXTURE_GREEN_TYPE i32 #x8C11)
(bind-val GL_TEXTURE_BLUE_TYPE i32 #x8C12)
(bind-val GL_TEXTURE_ALPHA_TYPE i32 #x8C13)
(bind-val GL_TEXTURE_DEPTH_TYPE i32 #x8C16)
(bind-val GL_UNSIGNED_NORMALIZED i32 #x8C17)
(bind-val GL_FRAMEBUFFER_BINDING i32 #x8CA6)
(bind-val GL_DRAW_FRAMEBUFFER_BINDING i32 #x8CA6)
(bind-val GL_RENDERBUFFER_BINDING i32 #x8CA7)
(bind-val GL_READ_FRAMEBUFFER i32 #x8CA8)
(bind-val GL_DRAW_FRAMEBUFFER i32 #x8CA9)
(bind-val GL_READ_FRAMEBUFFER_BINDING i32 #x8CAA)
(bind-val GL_RENDERBUFFER_SAMPLES i32 #x8CAB)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE i32 #x8CD0)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME i32 #x8CD1)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL i32 #x8CD2)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE i32 #x8CD3)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER i32 #x8CD4)
(bind-val GL_FRAMEBUFFER_COMPLETE i32 #x8CD5)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT i32 #x8CD6)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT i32 #x8CD7)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER i32 #x8CDB)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER i32 #x8CDC)
(bind-val GL_FRAMEBUFFER_UNSUPPORTED i32 #x8CDD)
(bind-val GL_MAX_COLOR_ATTACHMENTS i32 #x8CDF)
(bind-val GL_COLOR_ATTACHMENT0 i32 #x8CE0)
(bind-val GL_COLOR_ATTACHMENT1 i32 #x8CE1)
(bind-val GL_COLOR_ATTACHMENT2 i32 #x8CE2)
(bind-val GL_COLOR_ATTACHMENT3 i32 #x8CE3)
(bind-val GL_COLOR_ATTACHMENT4 i32 #x8CE4)
(bind-val GL_COLOR_ATTACHMENT5 i32 #x8CE5)
(bind-val GL_COLOR_ATTACHMENT6 i32 #x8CE6)
(bind-val GL_COLOR_ATTACHMENT7 i32 #x8CE7)
(bind-val GL_COLOR_ATTACHMENT8 i32 #x8CE8)
(bind-val GL_COLOR_ATTACHMENT9 i32 #x8CE9)
(bind-val GL_COLOR_ATTACHMENT10 i32 #x8CEA)
(bind-val GL_COLOR_ATTACHMENT11 i32 #x8CEB)
(bind-val GL_COLOR_ATTACHMENT12 i32 #x8CEC)
(bind-val GL_COLOR_ATTACHMENT13 i32 #x8CED)
(bind-val GL_COLOR_ATTACHMENT14 i32 #x8CEE)
(bind-val GL_COLOR_ATTACHMENT15 i32 #x8CEF)
(bind-val GL_DEPTH_ATTACHMENT i32 #x8D00)
(bind-val GL_STENCIL_ATTACHMENT i32 #x8D20)
(bind-val GL_FRAMEBUFFER i32 #x8D40)
(bind-val GL_RENDERBUFFER i32 #x8D41)
(bind-val GL_RENDERBUFFER_WIDTH i32 #x8D42)
(bind-val GL_RENDERBUFFER_HEIGHT i32 #x8D43)
(bind-val GL_RENDERBUFFER_INTERNAL_FORMAT i32 #x8D44)
(bind-val GL_STENCIL_INDEX1 i32 #x8D46)
(bind-val GL_STENCIL_INDEX4 i32 #x8D47)
(bind-val GL_STENCIL_INDEX8 i32 #x8D48)
(bind-val GL_STENCIL_INDEX16 i32 #x8D49)
(bind-val GL_RENDERBUFFER_RED_SIZE i32 #x8D50)
(bind-val GL_RENDERBUFFER_GREEN_SIZE i32 #x8D51)
(bind-val GL_RENDERBUFFER_BLUE_SIZE i32 #x8D52)
(bind-val GL_RENDERBUFFER_ALPHA_SIZE i32 #x8D53)
(bind-val GL_RENDERBUFFER_DEPTH_SIZE i32 #x8D54)
(bind-val GL_RENDERBUFFER_STENCIL_SIZE i32 #x8D55)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE i32 #x8D56)
(bind-val GL_MAX_SAMPLES i32 #x8D57)


;; #if GL_ARB_framebuffer_sRGB
(bind-val GL_FRAMEBUFFER_SRGB i32 #x8DB9)


;; #if GL_ARB_half_float_pixel
(bind-val GL_HALF_FLOAT_ARB i32 #x140B)


;; #if GL_ARB_half_float_vertex
(bind-val GL_HALF_FLOAT i32 #x140B)


;; #if GL_ARB_instanced_arrays
(bind-val GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB i32 #x88FE)


;; #if GL_ARB_multisample
(bind-val GL_MULTISAMPLE_ARB i32 #x809D)
(bind-val GL_SAMPLE_ALPHA_TO_COVERAGE_ARB i32 #x809E)
(bind-val GL_SAMPLE_ALPHA_TO_ONE_ARB i32 #x809F)
(bind-val GL_SAMPLE_COVERAGE_ARB i32 #x80A0)
(bind-val GL_SAMPLE_BUFFERS_ARB i32 #x80A8)
(bind-val GL_SAMPLES_ARB i32 #x80A9)
(bind-val GL_SAMPLE_COVERAGE_VALUE_ARB i32 #x80AA)
(bind-val GL_SAMPLE_COVERAGE_INVERT_ARB i32 #x80AB)
(bind-val GL_MULTISAMPLE_BIT_ARB i32 #x20000000)


;; #if GL_ARB_multitexture
(bind-val GL_TEXTURE0_ARB i32 #x84C0)
(bind-val GL_TEXTURE1_ARB i32 #x84C1)
(bind-val GL_TEXTURE2_ARB i32 #x84C2)
(bind-val GL_TEXTURE3_ARB i32 #x84C3)
(bind-val GL_TEXTURE4_ARB i32 #x84C4)
(bind-val GL_TEXTURE5_ARB i32 #x84C5)
(bind-val GL_TEXTURE6_ARB i32 #x84C6)
(bind-val GL_TEXTURE7_ARB i32 #x84C7)
(bind-val GL_TEXTURE8_ARB i32 #x84C8)
(bind-val GL_TEXTURE9_ARB i32 #x84C9)
(bind-val GL_TEXTURE10_ARB i32 #x84CA)
(bind-val GL_TEXTURE11_ARB i32 #x84CB)
(bind-val GL_TEXTURE12_ARB i32 #x84CC)
(bind-val GL_TEXTURE13_ARB i32 #x84CD)
(bind-val GL_TEXTURE14_ARB i32 #x84CE)
(bind-val GL_TEXTURE15_ARB i32 #x84CF)
(bind-val GL_TEXTURE16_ARB i32 #x84D0)
(bind-val GL_TEXTURE17_ARB i32 #x84D1)
(bind-val GL_TEXTURE18_ARB i32 #x84D2)
(bind-val GL_TEXTURE19_ARB i32 #x84D3)
(bind-val GL_TEXTURE20_ARB i32 #x84D4)
(bind-val GL_TEXTURE21_ARB i32 #x84D5)
(bind-val GL_TEXTURE22_ARB i32 #x84D6)
(bind-val GL_TEXTURE23_ARB i32 #x84D7)
(bind-val GL_TEXTURE24_ARB i32 #x84D8)
(bind-val GL_TEXTURE25_ARB i32 #x84D9)
(bind-val GL_TEXTURE26_ARB i32 #x84DA)
(bind-val GL_TEXTURE27_ARB i32 #x84DB)
(bind-val GL_TEXTURE28_ARB i32 #x84DC)
(bind-val GL_TEXTURE29_ARB i32 #x84DD)
(bind-val GL_TEXTURE30_ARB i32 #x84DE)
(bind-val GL_TEXTURE31_ARB i32 #x84DF)
(bind-val GL_ACTIVE_TEXTURE_ARB i32 #x84E0)
(bind-val GL_CLIENT_ACTIVE_TEXTURE_ARB i32 #x84E1)
(bind-val GL_MAX_TEXTURE_UNITS_ARB i32 #x84E2)


;; #if GL_ARB_occlusion_query
(bind-val GL_SAMPLES_PASSED_ARB i32 #x8914)
(bind-val GL_QUERY_COUNTER_BITS_ARB i32 #x8864)
(bind-val GL_CURRENT_QUERY_ARB i32 #x8865)
(bind-val GL_QUERY_RESULT_ARB i32 #x8866)
(bind-val GL_QUERY_RESULT_AVAILABLE_ARB i32 #x8867)


;; #if GL_ARB_pixel_buffer_object
(bind-val GL_PIXEL_PACK_BUFFER_ARB i32 #x88EB)
(bind-val GL_PIXEL_UNPACK_BUFFER_ARB i32 #x88EC)
(bind-val GL_PIXEL_PACK_BUFFER_BINDING_ARB i32 #x88ED)
(bind-val GL_PIXEL_UNPACK_BUFFER_BINDING_ARB i32 #x88EF)


;; #if GL_ARB_point_parameters
(bind-val GL_POINT_SIZE_MIN_ARB i32 #x8126)
(bind-val GL_POINT_SIZE_MAX_ARB i32 #x8127)
(bind-val GL_POINT_FADE_THRESHOLD_SIZE_ARB i32 #x8128)
(bind-val GL_POINT_DISTANCE_ATTENUATION_ARB i32 #x8129)


;; #if GL_ARB_point_sprite
(bind-val GL_POINT_SPRITE_ARB i32 #x8861)
(bind-val GL_COORD_REPLACE_ARB i32 #x8862)


;; #if GL_ARB_provoking_vertex
(bind-val GL_FIRST_VERTEX_CONVENTION i32 #x8E4D)
(bind-val GL_LAST_VERTEX_CONVENTION i32 #x8E4E)
(bind-val GL_PROVOKING_VERTEX i32 #x8E4F)
(bind-val GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION i32 #x8E4C)


;; #if GL_ARB_seamless_cube_map
(bind-val GL_TEXTURE_CUBE_MAP_SEAMLESS i32 #x884F)


;; #if GL_ARB_shader_objects
(bind-val GL_PROGRAM_OBJECT_ARB i32 #x8B40)
(bind-val GL_OBJECT_TYPE_ARB i32 #x8B4E)
(bind-val GL_OBJECT_SUBTYPE_ARB i32 #x8B4F)
(bind-val GL_OBJECT_DELETE_STATUS_ARB i32 #x8B80)
(bind-val GL_OBJECT_COMPILE_STATUS_ARB i32 #x8B81)
(bind-val GL_OBJECT_LINK_STATUS_ARB i32 #x8B82)
(bind-val GL_OBJECT_VALIDATE_STATUS_ARB i32 #x8B83)
(bind-val GL_OBJECT_INFO_LOG_LENGTH_ARB i32 #x8B84)
(bind-val GL_OBJECT_ATTACHED_OBJECTS_ARB i32 #x8B85)
(bind-val GL_OBJECT_ACTIVE_UNIFORMS_ARB i32 #x8B86)
(bind-val GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB i32 #x8B87)
(bind-val GL_OBJECT_SHADER_SOURCE_LENGTH_ARB i32 #x8B88)
(bind-val GL_SHADER_OBJECT_ARB i32 #x8B48)
(bind-val GL_FLOAT_VEC2_ARB i32 #x8B50)
(bind-val GL_FLOAT_VEC3_ARB i32 #x8B51)
(bind-val GL_FLOAT_VEC4_ARB i32 #x8B52)
(bind-val GL_INT_VEC2_ARB i32 #x8B53)
(bind-val GL_INT_VEC3_ARB i32 #x8B54)
(bind-val GL_INT_VEC4_ARB i32 #x8B55)
(bind-val GL_BOOL_ARB i32 #x8B56)
(bind-val GL_BOOL_VEC2_ARB i32 #x8B57)
(bind-val GL_BOOL_VEC3_ARB i32 #x8B58)
(bind-val GL_BOOL_VEC4_ARB i32 #x8B59)
(bind-val GL_FLOAT_MAT2_ARB i32 #x8B5A)
(bind-val GL_FLOAT_MAT3_ARB i32 #x8B5B)
(bind-val GL_FLOAT_MAT4_ARB i32 #x8B5C)
(bind-val GL_SAMPLER_1D_ARB i32 #x8B5D)
(bind-val GL_SAMPLER_2D_ARB i32 #x8B5E)
(bind-val GL_SAMPLER_3D_ARB i32 #x8B5F)
(bind-val GL_SAMPLER_CUBE_ARB i32 #x8B60)
(bind-val GL_SAMPLER_1D_SHADOW_ARB i32 #x8B61)
(bind-val GL_SAMPLER_2D_SHADOW_ARB i32 #x8B62)
(bind-val GL_SAMPLER_2D_RECT_ARB i32 #x8B63)
(bind-val GL_SAMPLER_2D_RECT_SHADOW_ARB i32 #x8B64)


;; #if GL_ARB_shading_language_100
(bind-val GL_SHADING_LANGUAGE_VERSION_ARB i32 #x8B8C)


;; #if GL_ARB_shadow
(bind-val GL_TEXTURE_COMPARE_MODE_ARB i32 #x884C)
(bind-val GL_TEXTURE_COMPARE_FUNC_ARB i32 #x884D)
(bind-val GL_COMPARE_R_TO_TEXTURE_ARB i32 #x884E)


;; #if GL_ARB_shadow_ambient
(bind-val GL_TEXTURE_COMPARE_FAIL_VALUE_ARB i32 #x80BF)


;; #if GL_ARB_sync
(bind-val GL_MAX_SERVER_WAIT_TIMEOUT i32 #x9111)
(bind-val GL_OBJECT_TYPE i32 #x9112)
(bind-val GL_SYNC_CONDITION i32 #x9113)
(bind-val GL_SYNC_STATUS i32 #x9114)
(bind-val GL_SYNC_FLAGS i32 #x9115)
(bind-val GL_SYNC_FENCE i32 #x9116)
(bind-val GL_SYNC_GPU_COMMANDS_COMPLETE i32 #x9117)
(bind-val GL_UNSIGNALED i32 #x9118)
(bind-val GL_SIGNALED i32 #x9119)
(bind-val GL_ALREADY_SIGNALED i32 #x911A)
(bind-val GL_TIMEOUT_EXPIRED i32 #x911B)
(bind-val GL_CONDITION_SATISFIED i32 #x911C)
(bind-val GL_WAIT_FAILED i32 #x911D)
(bind-val GL_SYNC_FLUSH_COMMANDS_BIT i32 #x00000001)
(bind-val GL_TIMEOUT_IGNORED i32 #xFFFFFFFFFFFFFFFFull)


;; #if GL_ARB_texture_border_clamp
(bind-val GL_CLAMP_TO_BORDER_ARB i32 #x812D)


;; #if GL_ARB_texture_compression
(bind-val GL_COMPRESSED_ALPHA_ARB i32 #x84E9)
(bind-val GL_COMPRESSED_LUMINANCE_ARB i32 #x84EA)
(bind-val GL_COMPRESSED_LUMINANCE_ALPHA_ARB i32 #x84EB)
(bind-val GL_COMPRESSED_INTENSITY_ARB i32 #x84EC)
(bind-val GL_COMPRESSED_RGB_ARB i32 #x84ED)
(bind-val GL_COMPRESSED_RGBA_ARB i32 #x84EE)
(bind-val GL_TEXTURE_COMPRESSION_HINT_ARB i32 #x84EF)
(bind-val GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB i32 #x86A0)
(bind-val GL_TEXTURE_COMPRESSED_ARB i32 #x86A1)
(bind-val GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB i32 #x86A2)
(bind-val GL_COMPRESSED_TEXTURE_FORMATS_ARB i32 #x86A3)


;; #if GL_ARB_texture_compression_rgtc
(bind-val GL_COMPRESSED_RED_RGTC1 i32 #x8DBB)
(bind-val GL_COMPRESSED_SIGNED_RED_RGTC1 i32 #x8DBC)
(bind-val GL_COMPRESSED_RG_RGTC2 i32 #x8DBD)
(bind-val GL_COMPRESSED_SIGNED_RG_RGTC2 i32 #x8DBE)


;; #if GL_ARB_texture_cube_map
(bind-val GL_NORMAL_MAP_ARB i32 #x8511)
(bind-val GL_REFLECTION_MAP_ARB i32 #x8512)
(bind-val GL_TEXTURE_CUBE_MAP_ARB i32 #x8513)
(bind-val GL_TEXTURE_BINDING_CUBE_MAP_ARB i32 #x8514)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB i32 #x8515)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB i32 #x8516)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB i32 #x8517)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB i32 #x8518)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB i32 #x8519)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB i32 #x851A)
(bind-val GL_PROXY_TEXTURE_CUBE_MAP_ARB i32 #x851B)
(bind-val GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB i32 #x851C)


;; #if GL_ARB_texture_env_combine
(bind-val GL_COMBINE_ARB i32 #x8570)
(bind-val GL_COMBINE_RGB_ARB i32 #x8571)
(bind-val GL_COMBINE_ALPHA_ARB i32 #x8572)
(bind-val GL_RGB_SCALE_ARB i32 #x8573)
(bind-val GL_ADD_SIGNED_ARB i32 #x8574)
(bind-val GL_INTERPOLATE_ARB i32 #x8575)
(bind-val GL_CONSTANT_ARB i32 #x8576)
(bind-val GL_PRIMARY_COLOR_ARB i32 #x8577)
(bind-val GL_PREVIOUS_ARB i32 #x8578)
(bind-val GL_SUBTRACT_ARB i32 #x84E7)
(bind-val GL_SOURCE0_RGB_ARB i32 #x8580)
(bind-val GL_SOURCE1_RGB_ARB i32 #x8581)
(bind-val GL_SOURCE2_RGB_ARB i32 #x8582)
(bind-val GL_SOURCE0_ALPHA_ARB i32 #x8588)
(bind-val GL_SOURCE1_ALPHA_ARB i32 #x8589)
(bind-val GL_SOURCE2_ALPHA_ARB i32 #x858A)
(bind-val GL_OPERAND0_RGB_ARB i32 #x8590)
(bind-val GL_OPERAND1_RGB_ARB i32 #x8591)
(bind-val GL_OPERAND2_RGB_ARB i32 #x8592)
(bind-val GL_OPERAND0_ALPHA_ARB i32 #x8598)
(bind-val GL_OPERAND1_ALPHA_ARB i32 #x8599)
(bind-val GL_OPERAND2_ALPHA_ARB i32 #x859A)


;; #if GL_ARB_texture_env_dot3
(bind-val GL_DOT3_RGB_ARB i32 #x86AE)
(bind-val GL_DOT3_RGBA_ARB i32 #x86AF)


;; #if GL_ARB_texture_float
(bind-val GL_TEXTURE_RED_TYPE_ARB i32 #x8C10)
(bind-val GL_TEXTURE_GREEN_TYPE_ARB i32 #x8C11)
(bind-val GL_TEXTURE_BLUE_TYPE_ARB i32 #x8C12)
(bind-val GL_TEXTURE_ALPHA_TYPE_ARB i32 #x8C13)
(bind-val GL_TEXTURE_LUMINANCE_TYPE_ARB i32 #x8C14)
(bind-val GL_TEXTURE_INTENSITY_TYPE_ARB i32 #x8C15)
(bind-val GL_TEXTURE_DEPTH_TYPE_ARB i32 #x8C16)
(bind-val GL_UNSIGNED_NORMALIZED_ARB i32 #x8C17)
(bind-val GL_RGBA32F_ARB i32 #x8814)
(bind-val GL_RGB32F_ARB i32 #x8815)
(bind-val GL_ALPHA32F_ARB i32 #x8816)
(bind-val GL_INTENSITY32F_ARB i32 #x8817)
(bind-val GL_LUMINANCE32F_ARB i32 #x8818)
(bind-val GL_LUMINANCE_ALPHA32F_ARB i32 #x8819)
(bind-val GL_RGBA16F_ARB i32 #x881A)
(bind-val GL_RGB16F_ARB i32 #x881B)
(bind-val GL_ALPHA16F_ARB i32 #x881C)
(bind-val GL_INTENSITY16F_ARB i32 #x881D)
(bind-val GL_LUMINANCE16F_ARB i32 #x881E)
(bind-val GL_LUMINANCE_ALPHA16F_ARB i32 #x881F)


;; #if GL_ARB_texture_mirrored_repeat
(bind-val GL_MIRRORED_REPEAT_ARB i32 #x8370)


;; #if GL_ARB_texture_rectangle
(bind-val GL_TEXTURE_RECTANGLE_ARB i32 #x84F5)
(bind-val GL_TEXTURE_BINDING_RECTANGLE_ARB i32 #x84F6)
(bind-val GL_PROXY_TEXTURE_RECTANGLE_ARB i32 #x84F7)
(bind-val GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB i32 #x84F8)


;; #if GL_ARB_texture_rg
(bind-val GL_COMPRESSED_RED i32 #x8225)
(bind-val GL_COMPRESSED_RG i32 #x8226)
(bind-val GL_RG i32 #x8227)
(bind-val GL_RG_INTEGER i32 #x8228)
(bind-val GL_R8 i32 #x8229)
(bind-val GL_R16 i32 #x822A)
(bind-val GL_RG8 i32 #x822B)
(bind-val GL_RG16 i32 #x822C)
(bind-val GL_R16F i32 #x822D)
(bind-val GL_R32F i32 #x822E)
(bind-val GL_RG16F i32 #x822F)
(bind-val GL_RG32F i32 #x8230)
(bind-val GL_R8I i32 #x8231)
(bind-val GL_R8UI i32 #x8232)
(bind-val GL_R16I i32 #x8233)
(bind-val GL_R16UI i32 #x8234)
(bind-val GL_R32I i32 #x8235)
(bind-val GL_R32UI i32 #x8236)
(bind-val GL_RG8I i32 #x8237)
(bind-val GL_RG8UI i32 #x8238)
(bind-val GL_RG16I i32 #x8239)
(bind-val GL_RG16UI i32 #x823A)
(bind-val GL_RG32I i32 #x823B)
(bind-val GL_RG32UI i32 #x823C)


;; #if GL_ARB_transpose_matrix
(bind-val GL_TRANSPOSE_MODELVIEW_MATRIX_ARB i32 #x84E3)
(bind-val GL_TRANSPOSE_PROJECTION_MATRIX_ARB i32 #x84E4)
(bind-val GL_TRANSPOSE_TEXTURE_MATRIX_ARB i32 #x84E5)
(bind-val GL_TRANSPOSE_COLOR_MATRIX_ARB i32 #x84E6)


;; #if GL_ARB_vertex_blend
(bind-val GL_MAX_VERTEX_UNITS_ARB i32 #x86A4)
(bind-val GL_ACTIVE_VERTEX_UNITS_ARB i32 #x86A5)
(bind-val GL_WEIGHT_SUM_UNITY_ARB i32 #x86A6)
(bind-val GL_VERTEX_BLEND_ARB i32 #x86A7)
(bind-val GL_CURRENT_WEIGHT_ARB i32 #x86A8)
(bind-val GL_WEIGHT_ARRAY_TYPE_ARB i32 #x86A9)
(bind-val GL_WEIGHT_ARRAY_STRIDE_ARB i32 #x86AA)
(bind-val GL_WEIGHT_ARRAY_SIZE_ARB i32 #x86AB)
(bind-val GL_WEIGHT_ARRAY_POINTER_ARB i32 #x86AC)
(bind-val GL_WEIGHT_ARRAY_ARB i32 #x86AD)
(bind-val GL_MODELVIEW0_ARB i32 #x1700)
(bind-val GL_MODELVIEW1_ARB i32 #x850A)
(bind-val GL_MODELVIEW2_ARB i32 #x8722)
(bind-val GL_MODELVIEW3_ARB i32 #x8723)
(bind-val GL_MODELVIEW4_ARB i32 #x8724)
(bind-val GL_MODELVIEW5_ARB i32 #x8725)
(bind-val GL_MODELVIEW6_ARB i32 #x8726)
(bind-val GL_MODELVIEW7_ARB i32 #x8727)
(bind-val GL_MODELVIEW8_ARB i32 #x8728)
(bind-val GL_MODELVIEW9_ARB i32 #x8729)
(bind-val GL_MODELVIEW10_ARB i32 #x872A)
(bind-val GL_MODELVIEW11_ARB i32 #x872B)
(bind-val GL_MODELVIEW12_ARB i32 #x872C)
(bind-val GL_MODELVIEW13_ARB i32 #x872D)
(bind-val GL_MODELVIEW14_ARB i32 #x872E)
(bind-val GL_MODELVIEW15_ARB i32 #x872F)
(bind-val GL_MODELVIEW16_ARB i32 #x8730)
(bind-val GL_MODELVIEW17_ARB i32 #x8731)
(bind-val GL_MODELVIEW18_ARB i32 #x8732)
(bind-val GL_MODELVIEW19_ARB i32 #x8733)
(bind-val GL_MODELVIEW20_ARB i32 #x8734)
(bind-val GL_MODELVIEW21_ARB i32 #x8735)
(bind-val GL_MODELVIEW22_ARB i32 #x8736)
(bind-val GL_MODELVIEW23_ARB i32 #x8737)
(bind-val GL_MODELVIEW24_ARB i32 #x8738)
(bind-val GL_MODELVIEW25_ARB i32 #x8739)
(bind-val GL_MODELVIEW26_ARB i32 #x873A)
(bind-val GL_MODELVIEW27_ARB i32 #x873B)
(bind-val GL_MODELVIEW28_ARB i32 #x873C)
(bind-val GL_MODELVIEW29_ARB i32 #x873D)
(bind-val GL_MODELVIEW30_ARB i32 #x873E)
(bind-val GL_MODELVIEW31_ARB i32 #x873F)


;; #if GL_ARB_vertex_buffer_object
(bind-val GL_ARRAY_BUFFER_ARB i32 #x8892)
(bind-val GL_ELEMENT_ARRAY_BUFFER_ARB i32 #x8893)
(bind-val GL_ARRAY_BUFFER_BINDING_ARB i32 #x8894)
(bind-val GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB i32 #x8895)
(bind-val GL_VERTEX_ARRAY_BUFFER_BINDING_ARB i32 #x8896)
(bind-val GL_NORMAL_ARRAY_BUFFER_BINDING_ARB i32 #x8897)
(bind-val GL_COLOR_ARRAY_BUFFER_BINDING_ARB i32 #x8898)
(bind-val GL_INDEX_ARRAY_BUFFER_BINDING_ARB i32 #x8899)
(bind-val GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB i32 #x889A)
(bind-val GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB i32 #x889B)
(bind-val GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB i32 #x889C)
(bind-val GL_FOG_COORD_ARRAY_BUFFER_BINDING_ARB i32 #x889D)
(bind-val GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB i32 #x889E)
(bind-val GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB i32 #x889F)
(bind-val GL_STREAM_DRAW_ARB i32 #x88E0)
(bind-val GL_STREAM_READ_ARB i32 #x88E1)
(bind-val GL_STREAM_COPY_ARB i32 #x88E2)
(bind-val GL_STATIC_DRAW_ARB i32 #x88E4)
(bind-val GL_STATIC_READ_ARB i32 #x88E5)
(bind-val GL_STATIC_COPY_ARB i32 #x88E6)
(bind-val GL_DYNAMIC_DRAW_ARB i32 #x88E8)
(bind-val GL_DYNAMIC_READ_ARB i32 #x88E9)
(bind-val GL_DYNAMIC_COPY_ARB i32 #x88EA)
(bind-val GL_READ_ONLY_ARB i32 #x88B8)
(bind-val GL_WRITE_ONLY_ARB i32 #x88B9)
(bind-val GL_READ_WRITE_ARB i32 #x88BA)
(bind-val GL_BUFFER_SIZE_ARB i32 #x8764)
(bind-val GL_BUFFER_USAGE_ARB i32 #x8765)
(bind-val GL_BUFFER_ACCESS_ARB i32 #x88BB)
(bind-val GL_BUFFER_MAPPED_ARB i32 #x88BC)
(bind-val GL_BUFFER_MAP_POINTER_ARB i32 #x88BD)
;; /* Obsolete */
(bind-val GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB i32 #x889D)


;; #if GL_ARB_vertex_program
(bind-val GL_VERTEX_PROGRAM_ARB i32 #x8620)
(bind-val GL_VERTEX_PROGRAM_POINT_SIZE_ARB i32 #x8642)
(bind-val GL_VERTEX_PROGRAM_TWO_SIDE_ARB i32 #x8643)
(bind-val GL_PROGRAM_FORMAT_ASCII_ARB i32 #x8875)
(bind-val GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB i32 #x8622)
(bind-val GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB i32 #x8623)
(bind-val GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB i32 #x8624)
(bind-val GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB i32 #x8625)
(bind-val GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB i32 #x886A)
(bind-val GL_CURRENT_VERTEX_ATTRIB_ARB i32 #x8626)
(bind-val GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB i32 #x8645)
(bind-val GL_PROGRAM_LENGTH_ARB i32 #x8627)
(bind-val GL_PROGRAM_FORMAT_ARB i32 #x8876)
(bind-val GL_PROGRAM_NAME_ARB i32 #x8677)
(bind-val GL_PROGRAM_BINDING_ARB i32 #x8677)
(bind-val GL_PROGRAM_INSTRUCTIONS_ARB i32 #x88A0)
(bind-val GL_MAX_PROGRAM_INSTRUCTIONS_ARB i32 #x88A1)
(bind-val GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB i32 #x88A2)
(bind-val GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB i32 #x88A3)
(bind-val GL_PROGRAM_TEMPORARIES_ARB i32 #x88A4)
(bind-val GL_MAX_PROGRAM_TEMPORARIES_ARB i32 #x88A5)
(bind-val GL_PROGRAM_NATIVE_TEMPORARIES_ARB i32 #x88A6)
(bind-val GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB i32 #x88A7)
(bind-val GL_PROGRAM_PARAMETERS_ARB i32 #x88A8)
(bind-val GL_MAX_PROGRAM_PARAMETERS_ARB i32 #x88A9)
(bind-val GL_PROGRAM_NATIVE_PARAMETERS_ARB i32 #x88AA)
(bind-val GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB i32 #x88AB)
(bind-val GL_PROGRAM_ATTRIBS_ARB i32 #x88AC)
(bind-val GL_MAX_PROGRAM_ATTRIBS_ARB i32 #x88AD)
(bind-val GL_PROGRAM_NATIVE_ATTRIBS_ARB i32 #x88AE)
(bind-val GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB i32 #x88AF)
(bind-val GL_PROGRAM_ADDRESS_REGISTERS_ARB i32 #x88B0)
(bind-val GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB i32 #x88B1)
(bind-val GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB i32 #x88B2)
(bind-val GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB i32 #x88B3)
(bind-val GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB i32 #x88B4)
(bind-val GL_MAX_PROGRAM_ENV_PARAMETERS_ARB i32 #x88B5)
(bind-val GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB i32 #x88B6)
(bind-val GL_PROGRAM_STRING_ARB i32 #x8628)
(bind-val GL_PROGRAM_ERROR_POSITION_ARB i32 #x864B)
(bind-val GL_CURRENT_MATRIX_ARB i32 #x8641)
(bind-val GL_TRANSPOSE_CURRENT_MATRIX_ARB i32 #x88B7)
(bind-val GL_CURRENT_MATRIX_STACK_DEPTH_ARB i32 #x8640)
(bind-val GL_MAX_VERTEX_ATTRIBS_ARB i32 #x8869)
(bind-val GL_MAX_PROGRAM_MATRICES_ARB i32 #x862F)
(bind-val GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB i32 #x862E)
(bind-val GL_PROGRAM_ERROR_STRING_ARB i32 #x8874)
(bind-val GL_MATRIX0_ARB i32 #x88C0)
(bind-val GL_MATRIX1_ARB i32 #x88C1)
(bind-val GL_MATRIX2_ARB i32 #x88C2)
(bind-val GL_MATRIX3_ARB i32 #x88C3)
(bind-val GL_MATRIX4_ARB i32 #x88C4)
(bind-val GL_MATRIX5_ARB i32 #x88C5)
(bind-val GL_MATRIX6_ARB i32 #x88C6)
(bind-val GL_MATRIX7_ARB i32 #x88C7)
(bind-val GL_MATRIX8_ARB i32 #x88C8)
(bind-val GL_MATRIX9_ARB i32 #x88C9)
(bind-val GL_MATRIX10_ARB i32 #x88CA)
(bind-val GL_MATRIX11_ARB i32 #x88CB)
(bind-val GL_MATRIX12_ARB i32 #x88CC)
(bind-val GL_MATRIX13_ARB i32 #x88CD)
(bind-val GL_MATRIX14_ARB i32 #x88CE)
(bind-val GL_MATRIX15_ARB i32 #x88CF)
(bind-val GL_MATRIX16_ARB i32 #x88D0)
(bind-val GL_MATRIX17_ARB i32 #x88D1)
(bind-val GL_MATRIX18_ARB i32 #x88D2)
(bind-val GL_MATRIX19_ARB i32 #x88D3)
(bind-val GL_MATRIX20_ARB i32 #x88D4)
(bind-val GL_MATRIX21_ARB i32 #x88D5)
(bind-val GL_MATRIX22_ARB i32 #x88D6)
(bind-val GL_MATRIX23_ARB i32 #x88D7)
(bind-val GL_MATRIX24_ARB i32 #x88D8)
(bind-val GL_MATRIX25_ARB i32 #x88D9)
(bind-val GL_MATRIX26_ARB i32 #x88DA)
(bind-val GL_MATRIX27_ARB i32 #x88DB)
(bind-val GL_MATRIX28_ARB i32 #x88DC)
(bind-val GL_MATRIX29_ARB i32 #x88DD)
(bind-val GL_MATRIX30_ARB i32 #x88DE)
(bind-val GL_MATRIX31_ARB i32 #x88DF)
(bind-val GL_COLOR_SUM_ARB i32 #x8458)


;; #if GL_ARB_vertex_shader
(bind-val GL_VERTEX_SHADER_ARB i32 #x8B31)
(bind-val GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB i32 #x8B4A)
(bind-val GL_MAX_TEXTURE_COORDS_ARB i32 #x8871)
(bind-val GL_MAX_TEXTURE_IMAGE_UNITS_ARB i32 #x8872)
(bind-val GL_MAX_VARYING_FLOATS_ARB i32 #x8B4B)
(bind-val GL_MAX_VERTEX_ATTRIBS_ARB i32 #x8869)
(bind-val GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB i32 #x8B4D)
(bind-val GL_VERTEX_PROGRAM_POINT_SIZE_ARB i32 #x8642)
(bind-val GL_VERTEX_PROGRAM_TWO_SIDE_ARB i32 #x8643)
(bind-val GL_OBJECT_ACTIVE_ATTRIBUTES_ARB i32 #x8B89)
(bind-val GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB i32 #x8B8A)
(bind-val GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB i32 #x8622)
(bind-val GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB i32 #x8623)
(bind-val GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB i32 #x8624)
(bind-val GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB i32 #x8625)
(bind-val GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB i32 #x886A)
(bind-val GL_CURRENT_VERTEX_ATTRIB_ARB i32 #x8626)
(bind-val GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB i32 #x8645)


;; #if GL_ARB_vertex_shader || GL_NV_vertex_program3
(bind-val GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB i32 #x8B4C)


;; #if GL_EXT_abgr
(bind-val GL_ABGR_EXT i32 #x8000)


;; #if GL_EXT_bgra
(bind-val GL_BGR_EXT i32 #x80E0)
(bind-val GL_BGRA_EXT i32 #x80E1)


;; #if GL_EXT_bindable_uniform
(bind-val GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT i32 #x8DE2)
(bind-val GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT i32 #x8DE3)
(bind-val GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT i32 #x8DE4)
(bind-val GL_MAX_BINDABLE_UNIFORM_SIZE_EXT i32 #x8DED)
(bind-val GL_UNIFORM_BUFFER_BINDING_EXT i32 #x8DEF)
(bind-val GL_UNIFORM_BUFFER_EXT i32 #x8DEE)


;; #if GL_EXT_blend_color
(bind-val GL_CONSTANT_COLOR_EXT i32 #x8001)
(bind-val GL_ONE_MINUS_CONSTANT_COLOR_EXT i32 #x8002)
(bind-val GL_CONSTANT_ALPHA_EXT i32 #x8003)
(bind-val GL_ONE_MINUS_CONSTANT_ALPHA_EXT i32 #x8004)
(bind-val GL_BLEND_COLOR_EXT i32 #x8005)


;; #if GL_EXT_blend_equation_separate
(bind-val GL_BLEND_EQUATION_RGB_EXT i32 #x8009)
(bind-val GL_BLEND_EQUATION_ALPHA_EXT i32 #x883D)


;; #if GL_EXT_blend_func_separate
(bind-val GL_BLEND_DST_RGB_EXT i32 #x80C8)
(bind-val GL_BLEND_SRC_RGB_EXT i32 #x80C9)
(bind-val GL_BLEND_DST_ALPHA_EXT i32 #x80CA)
(bind-val GL_BLEND_SRC_ALPHA_EXT i32 #x80CB)


;; #if GL_EXT_blend_minmax
(bind-val GL_FUNC_ADD_EXT i32 #x8006)
(bind-val GL_MIN_EXT i32 #x8007)
(bind-val GL_MAX_EXT i32 #x8008)
(bind-val GL_BLEND_EQUATION_EXT i32 #x8009)


;; #if GL_EXT_blend_subtract
(bind-val GL_FUNC_SUBTRACT_EXT i32 #x800A)
(bind-val GL_FUNC_REVERSE_SUBTRACT_EXT i32 #x800B)


;; #if GL_EXT_clip_volume_hint
(bind-val GL_CLIP_VOLUME_CLIPPING_HINT_EXT i32 #x80F0)


;; #if GL_EXT_compiled_vertex_array
(bind-val GL_ARRAY_ELEMENT_LOCK_FIRST_EXT i32 #x81A8)
(bind-val GL_ARRAY_ELEMENT_LOCK_COUNT_EXT i32 #x81A9)


;; #if GL_EXT_convolution
(bind-val GL_CONVOLUTION_1D_EXT i32 #x8010)
(bind-val GL_CONVOLUTION_2D_EXT i32 #x8011)
(bind-val GL_SEPARABLE_2D_EXT i32 #x8012)
(bind-val GL_CONVOLUTION_BORDER_MODE_EXT i32 #x8013)
(bind-val GL_CONVOLUTION_FILTER_SCALE_EXT i32 #x8014)
(bind-val GL_CONVOLUTION_FILTER_BIAS_EXT i32 #x8015)
(bind-val GL_REDUCE_EXT i32 #x8016)
(bind-val GL_CONVOLUTION_FORMAT_EXT i32 #x8017)
(bind-val GL_CONVOLUTION_WIDTH_EXT i32 #x8018)
(bind-val GL_CONVOLUTION_HEIGHT_EXT i32 #x8019)
(bind-val GL_MAX_CONVOLUTION_WIDTH_EXT i32 #x801A)
(bind-val GL_MAX_CONVOLUTION_HEIGHT_EXT i32 #x801B)
(bind-val GL_POST_CONVOLUTION_RED_SCALE_EXT i32 #x801C)
(bind-val GL_POST_CONVOLUTION_GREEN_SCALE_EXT i32 #x801D)
(bind-val GL_POST_CONVOLUTION_BLUE_SCALE_EXT i32 #x801E)
(bind-val GL_POST_CONVOLUTION_ALPHA_SCALE_EXT i32 #x801F)
(bind-val GL_POST_CONVOLUTION_RED_BIAS_EXT i32 #x8020)
(bind-val GL_POST_CONVOLUTION_GREEN_BIAS_EXT i32 #x8021)
(bind-val GL_POST_CONVOLUTION_BLUE_BIAS_EXT i32 #x8022)
(bind-val GL_POST_CONVOLUTION_ALPHA_BIAS_EXT i32 #x8023)


;; #if GL_EXT_debug_label
(bind-val GL_BUFFER_OBJECT_EXT i32 #x9151)
(bind-val GL_SHADER_OBJECT_EXT i32 #x8B48)
(bind-val GL_PROGRAM_OBJECT_EXT i32 #x8B40)
(bind-val GL_QUERY_OBJECT_EXT i32 #x9153)
(bind-val GL_VERTEX_ARRAY_OBJECT_EXT i32 #x9154)
(bind-val GL_SAMPLER i32 #x82E6)
(bind-val GL_SYNC_OBJECT_APPLE								 i32 #x8A53)


;; #if GL_EXT_depth_bounds_test
(bind-val GL_DEPTH_BOUNDS_TEST_EXT i32 #x8890)
(bind-val GL_DEPTH_BOUNDS_EXT i32 #x8891)


;; #if GL_EXT_draw_range_elements
(bind-val GL_MAX_ELEMENTS_VERTICES_EXT i32 #x80E8)
(bind-val GL_MAX_ELEMENTS_INDICES_EXT i32 #x80E9)


;; #if GL_EXT_fog_coord
(bind-val GL_FOG_COORDINATE_SOURCE_EXT i32 #x8450)
(bind-val GL_FOG_COORDINATE_EXT i32 #x8451)
(bind-val GL_FRAGMENT_DEPTH_EXT i32 #x8452)
(bind-val GL_CURRENT_FOG_COORDINATE_EXT i32 #x8453)
(bind-val GL_FOG_COORDINATE_ARRAY_TYPE_EXT i32 #x8454)
(bind-val GL_FOG_COORDINATE_ARRAY_STRIDE_EXT i32 #x8455)
(bind-val GL_FOG_COORDINATE_ARRAY_POINTER_EXT i32 #x8456)
(bind-val GL_FOG_COORDINATE_ARRAY_EXT i32 #x8457)


;; #if GL_EXT_framebuffer_blit
(bind-val GL_READ_FRAMEBUFFER_EXT i32 #x8CA8)
(bind-val GL_DRAW_FRAMEBUFFER_EXT i32 #x8CA9)
(bind-val GL_DRAW_FRAMEBUFFER_BINDING_EXT i32 #x8CA6)
(bind-val GL_READ_FRAMEBUFFER_BINDING_EXT i32 #x8CAA)


;; #if GL_EXT_framebuffer_multisample
(bind-val GL_RENDERBUFFER_SAMPLES_EXT i32 #x8CAB)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT i32 #x8D56)
(bind-val GL_MAX_SAMPLES_EXT i32 #x8D57)


;; #if GL_EXT_framebuffer_multisample_blit_scaled
(bind-val GL_SCALED_RESOLVE_FASTEST_EXT i32 #x90BA)
(bind-val GL_SCALED_RESOLVE_NICEST_EXT i32 #x90BB)


;; #if GL_EXT_framebuffer_object
(bind-val GL_FRAMEBUFFER_EXT i32 #x8D40)
(bind-val GL_RENDERBUFFER_EXT i32 #x8D41)
(bind-val GL_STENCIL_INDEX1_EXT i32 #x8D46)
(bind-val GL_STENCIL_INDEX4_EXT i32 #x8D47)
(bind-val GL_STENCIL_INDEX8_EXT i32 #x8D48)
(bind-val GL_STENCIL_INDEX16_EXT i32 #x8D49)
(bind-val GL_RENDERBUFFER_WIDTH_EXT i32 #x8D42)
(bind-val GL_RENDERBUFFER_HEIGHT_EXT i32 #x8D43)
(bind-val GL_RENDERBUFFER_INTERNAL_FORMAT_EXT i32 #x8D44)
(bind-val GL_RENDERBUFFER_RED_SIZE_EXT i32 #x8D50)
(bind-val GL_RENDERBUFFER_GREEN_SIZE_EXT i32 #x8D51)
(bind-val GL_RENDERBUFFER_BLUE_SIZE_EXT i32 #x8D52)
(bind-val GL_RENDERBUFFER_ALPHA_SIZE_EXT i32 #x8D53)
(bind-val GL_RENDERBUFFER_DEPTH_SIZE_EXT i32 #x8D54)
(bind-val GL_RENDERBUFFER_STENCIL_SIZE_EXT i32 #x8D55)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT i32 #x8CD0)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT i32 #x8CD1)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT i32 #x8CD2)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT i32 #x8CD3)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT i32 #x8CD4)
(bind-val GL_COLOR_ATTACHMENT0_EXT i32 #x8CE0)
(bind-val GL_COLOR_ATTACHMENT1_EXT i32 #x8CE1)
(bind-val GL_COLOR_ATTACHMENT2_EXT i32 #x8CE2)
(bind-val GL_COLOR_ATTACHMENT3_EXT i32 #x8CE3)
(bind-val GL_COLOR_ATTACHMENT4_EXT i32 #x8CE4)
(bind-val GL_COLOR_ATTACHMENT5_EXT i32 #x8CE5)
(bind-val GL_COLOR_ATTACHMENT6_EXT i32 #x8CE6)
(bind-val GL_COLOR_ATTACHMENT7_EXT i32 #x8CE7)
(bind-val GL_COLOR_ATTACHMENT8_EXT i32 #x8CE8)
(bind-val GL_COLOR_ATTACHMENT9_EXT i32 #x8CE9)
(bind-val GL_COLOR_ATTACHMENT10_EXT i32 #x8CEA)
(bind-val GL_COLOR_ATTACHMENT11_EXT i32 #x8CEB)
(bind-val GL_COLOR_ATTACHMENT12_EXT i32 #x8CEC)
(bind-val GL_COLOR_ATTACHMENT13_EXT i32 #x8CED)
(bind-val GL_COLOR_ATTACHMENT14_EXT i32 #x8CEE)
(bind-val GL_COLOR_ATTACHMENT15_EXT i32 #x8CEF)
(bind-val GL_DEPTH_ATTACHMENT_EXT i32 #x8D00)
(bind-val GL_STENCIL_ATTACHMENT_EXT i32 #x8D20)
(bind-val GL_FRAMEBUFFER_COMPLETE_EXT i32 #x8CD5)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT i32 #x8CD6)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT i32 #x8CD7)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT i32 #x8CD9)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT i32 #x8CDA)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT i32 #x8CDB)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT i32 #x8CDC)
(bind-val GL_FRAMEBUFFER_UNSUPPORTED_EXT i32 #x8CDD)
(bind-val GL_FRAMEBUFFER_BINDING_EXT i32 #x8CA6)
(bind-val GL_RENDERBUFFER_BINDING_EXT i32 #x8CA7)
(bind-val GL_MAX_COLOR_ATTACHMENTS_EXT i32 #x8CDF)
(bind-val GL_MAX_RENDERBUFFER_SIZE_EXT i32 #x84E8)
(bind-val GL_INVALID_FRAMEBUFFER_OPERATION_EXT i32 #x0506)


;; #if GL_EXT_framebuffer_sRGB
(bind-val GL_FRAMEBUFFER_SRGB_EXT i32 #x8DB9)
(bind-val GL_FRAMEBUFFER_SRGB_CAPABLE_EXT i32 #x8DBA)


;; #if GL_EXT_geometry_shader4
(bind-val GL_GEOMETRY_SHADER_EXT i32 #x8DD9)
(bind-val GL_GEOMETRY_VERTICES_OUT_EXT i32 #x8DDA)
(bind-val GL_GEOMETRY_INPUT_TYPE_EXT i32 #x8DDB)
(bind-val GL_GEOMETRY_OUTPUT_TYPE_EXT i32 #x8DDC)
(bind-val GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT i32 #x8C29)
(bind-val GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT i32 #x8DDD)
(bind-val GL_MAX_VERTEX_VARYING_COMPONENTS_EXT i32 #x8DDE)
(bind-val GL_MAX_VARYING_COMPONENTS_EXT i32 #x8B4B)
(bind-val GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT i32 #x8DDF)
(bind-val GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT i32 #x8DE0)
(bind-val GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT i32 #x8DE1)
(bind-val GL_LINES_ADJACENCY_EXT i32 #xA)
(bind-val GL_LINE_STRIP_ADJACENCY_EXT i32 #xB)
(bind-val GL_TRIANGLES_ADJACENCY_EXT i32 #xC)
(bind-val GL_TRIANGLE_STRIP_ADJACENCY_EXT i32 #xD)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT i32 #x8DA8)
(bind-val GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT i32 #x8DA9)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT i32 #x8DA7)
(bind-val GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT i32 #x8CD4)
(bind-val GL_PROGRAM_POINT_SIZE_EXT i32 #x8642)


;; #if GL_EXT_gpu_shader4
(bind-val GL_VERTEX_ATTRIB_ARRAY_INTEGER_EXT i32 #x88FD)
(bind-val GL_SAMPLER_1D_ARRAY_EXT i32 #x8DC0)
(bind-val GL_SAMPLER_2D_ARRAY_EXT i32 #x8DC1)
(bind-val GL_SAMPLER_BUFFER_EXT i32 #x8DC2)
(bind-val GL_SAMPLER_1D_ARRAY_SHADOW_EXT i32 #x8DC3)
(bind-val GL_SAMPLER_2D_ARRAY_SHADOW_EXT i32 #x8DC4)
(bind-val GL_SAMPLER_CUBE_SHADOW_EXT i32 #x8DC5)
(bind-val GL_UNSIGNED_INT_VEC2_EXT i32 #x8DC6)
(bind-val GL_UNSIGNED_INT_VEC3_EXT i32 #x8DC7)
(bind-val GL_UNSIGNED_INT_VEC4_EXT i32 #x8DC8)
(bind-val GL_INT_SAMPLER_1D_EXT i32 #x8DC9)
(bind-val GL_INT_SAMPLER_2D_EXT i32 #x8DCA)
(bind-val GL_INT_SAMPLER_3D_EXT i32 #x8DCB)
(bind-val GL_INT_SAMPLER_CUBE_EXT i32 #x8DCC)
(bind-val GL_INT_SAMPLER_2D_RECT_EXT i32 #x8DCD)
(bind-val GL_INT_SAMPLER_1D_ARRAY_EXT i32 #x8DCE)
(bind-val GL_INT_SAMPLER_2D_ARRAY_EXT i32 #x8DCF)
(bind-val GL_INT_SAMPLER_BUFFER_EXT i32 #x8DD0)
(bind-val GL_UNSIGNED_INT_SAMPLER_1D_EXT i32 #x8DD1)
(bind-val GL_UNSIGNED_INT_SAMPLER_2D_EXT i32 #x8DD2)
(bind-val GL_UNSIGNED_INT_SAMPLER_3D_EXT i32 #x8DD3)
(bind-val GL_UNSIGNED_INT_SAMPLER_CUBE_EXT i32 #x8DD4)
(bind-val GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT i32 #x8DD5)
(bind-val GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT i32 #x8DD6)
(bind-val GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT i32 #x8DD7)
(bind-val GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT i32 #x8DD8)
(bind-val GL_MIN_PROGRAM_TEXEL_OFFSET_EXT i32 #x8904)
(bind-val GL_MAX_PROGRAM_TEXEL_OFFSET_EXT i32 #x8905)


;; #if GL_EXT_histogram
(bind-val GL_HISTOGRAM_EXT i32 #x8024)
(bind-val GL_PROXY_HISTOGRAM_EXT i32 #x8025)
(bind-val GL_HISTOGRAM_WIDTH_EXT i32 #x8026)
(bind-val GL_HISTOGRAM_FORMAT_EXT i32 #x8027)
(bind-val GL_HISTOGRAM_RED_SIZE_EXT i32 #x8028)
(bind-val GL_HISTOGRAM_GREEN_SIZE_EXT i32 #x8029)
(bind-val GL_HISTOGRAM_BLUE_SIZE_EXT i32 #x802A)
(bind-val GL_HISTOGRAM_ALPHA_SIZE_EXT i32 #x802B)
(bind-val GL_HISTOGRAM_LUMINANCE_SIZE_EXT i32 #x802C)
(bind-val GL_HISTOGRAM_SINK_EXT i32 #x802D)
(bind-val GL_MINMAX_EXT i32 #x802E)
(bind-val GL_MINMAX_FORMAT_EXT i32 #x802F)
(bind-val GL_MINMAX_SINK_EXT i32 #x8030)
(bind-val GL_TABLE_TOO_LARGE_EXT i32 #x8031)


;; #if GL_EXT_packed_depth_stencil
(bind-val GL_DEPTH_STENCIL_EXT i32 #x84F9)
(bind-val GL_UNSIGNED_INT_24_8_EXT i32 #x84FA)
(bind-val GL_DEPTH24_STENCIL8_EXT i32 #x88F0)
(bind-val GL_TEXTURE_STENCIL_SIZE_EXT i32 #x88F1)


;; #if GL_EXT_packed_float
(bind-val GL_R11F_G11F_B10F_EXT i32 #x8C3A)
(bind-val GL_UNSIGNED_INT_10F_11F_11F_REV_EXT i32 #x8C3B)
(bind-val GL_RGBA_SIGNED_COMPONENTS_EXT i32 #x8C3C)


;; #if GL_EXT_packed_pixels
(bind-val GL_UNSIGNED_BYTE_3_3_2_EXT i32 #x8032)
(bind-val GL_UNSIGNED_SHORT_4_4_4_4_EXT i32 #x8033)
(bind-val GL_UNSIGNED_SHORT_5_5_5_1_EXT i32 #x8034)
(bind-val GL_UNSIGNED_INT_8_8_8_8_EXT i32 #x8035)
(bind-val GL_UNSIGNED_INT_10_10_10_2_EXT i32 #x8036)


;; #if GL_EXT_paletted_texture
(bind-val GL_COLOR_INDEX1_EXT i32 #x80E2)
(bind-val GL_COLOR_INDEX2_EXT i32 #x80E3)
(bind-val GL_COLOR_INDEX4_EXT i32 #x80E4)
(bind-val GL_COLOR_INDEX8_EXT i32 #x80E5)
(bind-val GL_COLOR_INDEX12_EXT i32 #x80E6)
(bind-val GL_COLOR_INDEX16_EXT i32 #x80E7)
(bind-val GL_TEXTURE_INDEX_SIZE_EXT i32 #x80ED)


;; #if GL_EXT_polygon_offset
(bind-val GL_POLYGON_OFFSET_EXT i32 #x8037)
(bind-val GL_POLYGON_OFFSET_FACTOR_EXT i32 #x8038)
(bind-val GL_POLYGON_OFFSET_BIAS_EXT i32 #x8039)


;; #if GL_EXT_provoking_vertex
(bind-val GL_FIRST_VERTEX_CONVENTION_EXT i32 #x8E4D)
(bind-val GL_LAST_VERTEX_CONVENTION_EXT i32 #x8E4E)
(bind-val GL_PROVOKING_VERTEX_EXT i32 #x8E4F)
(bind-val GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT i32 #x8E4C)


;; #if GL_EXT_rescale_normal
(bind-val GL_RESCALE_NORMAL_EXT i32 #x803A)


;; #if GL_EXT_secondary_color
(bind-val GL_COLOR_SUM_EXT i32 #x8458)
(bind-val GL_CURRENT_SECONDARY_COLOR_EXT i32 #x8459)
(bind-val GL_SECONDARY_COLOR_ARRAY_SIZE_EXT i32 #x845A)
(bind-val GL_SECONDARY_COLOR_ARRAY_TYPE_EXT i32 #x845B)
(bind-val GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT i32 #x845C)
(bind-val GL_SECONDARY_COLOR_ARRAY_POINTER_EXT i32 #x845D)
(bind-val GL_SECONDARY_COLOR_ARRAY_EXT i32 #x845E)


;; #if GL_EXT_separate_specular_color
(bind-val GL_LIGHT_MODEL_COLOR_CONTROL_EXT i32 #x81F8)
(bind-val GL_SINGLE_COLOR_EXT i32 #x81F9)
(bind-val GL_SEPARATE_SPECULAR_COLOR_EXT i32 #x81FA)


;; #if GL_EXT_shared_texture_palette
(bind-val GL_SHARED_TEXTURE_PALETTE_EXT i32 #x81FB)


;; #if GL_EXT_stencil_two_side
(bind-val GL_STENCIL_TEST_TWO_SIDE_EXT i32 #x8910)
(bind-val GL_ACTIVE_STENCIL_FACE_EXT i32 #x8911)


;; #if GL_EXT_stencil_wrap
(bind-val GL_INCR_WRAP_EXT i32 #x8507)
(bind-val GL_DECR_WRAP_EXT i32 #x8508)


;; #if GL_EXT_texture
(bind-val GL_ALPHA4_EXT i32 #x803B)
(bind-val GL_ALPHA8_EXT i32 #x803C)
(bind-val GL_ALPHA12_EXT i32 #x803D)
(bind-val GL_ALPHA16_EXT i32 #x803E)
(bind-val GL_LUMINANCE4_EXT i32 #x803F)
(bind-val GL_LUMINANCE8_EXT i32 #x8040)
(bind-val GL_LUMINANCE12_EXT i32 #x8041)
(bind-val GL_LUMINANCE16_EXT i32 #x8042)
(bind-val GL_LUMINANCE4_ALPHA4_EXT i32 #x8043)
(bind-val GL_LUMINANCE6_ALPHA2_EXT i32 #x8044)
(bind-val GL_LUMINANCE8_ALPHA8_EXT i32 #x8045)
(bind-val GL_LUMINANCE12_ALPHA4_EXT i32 #x8046)
(bind-val GL_LUMINANCE12_ALPHA12_EXT i32 #x8047)
(bind-val GL_LUMINANCE16_ALPHA16_EXT i32 #x8048)
(bind-val GL_INTENSITY_EXT i32 #x8049)
(bind-val GL_INTENSITY4_EXT i32 #x804A)
(bind-val GL_INTENSITY8_EXT i32 #x804B)
(bind-val GL_INTENSITY12_EXT i32 #x804C)
(bind-val GL_INTENSITY16_EXT i32 #x804D)
(bind-val GL_RGB2_EXT i32 #x804E)
(bind-val GL_RGB4_EXT i32 #x804F)
(bind-val GL_RGB5_EXT i32 #x8050)
(bind-val GL_RGB8_EXT i32 #x8051)
(bind-val GL_RGB10_EXT i32 #x8052)
(bind-val GL_RGB12_EXT i32 #x8053)
(bind-val GL_RGB16_EXT i32 #x8054)
(bind-val GL_RGBA2_EXT i32 #x8055)
(bind-val GL_RGBA4_EXT i32 #x8056)
(bind-val GL_RGB5_A1_EXT i32 #x8057)
(bind-val GL_RGBA8_EXT i32 #x8058)
(bind-val GL_RGB10_A2_EXT i32 #x8059)
(bind-val GL_RGBA12_EXT i32 #x805A)
(bind-val GL_RGBA16_EXT i32 #x805B)
(bind-val GL_TEXTURE_RED_SIZE_EXT i32 #x805C)
(bind-val GL_TEXTURE_GREEN_SIZE_EXT i32 #x805D)
(bind-val GL_TEXTURE_BLUE_SIZE_EXT i32 #x805E)
(bind-val GL_TEXTURE_ALPHA_SIZE_EXT i32 #x805F)
(bind-val GL_TEXTURE_LUMINANCE_SIZE_EXT i32 #x8060)
(bind-val GL_TEXTURE_INTENSITY_SIZE_EXT i32 #x8061)
(bind-val GL_REPLACE_EXT i32 #x8062)
(bind-val GL_PROXY_TEXTURE_1D_EXT i32 #x8063)
(bind-val GL_PROXY_TEXTURE_2D_EXT i32 #x8064)
(bind-val GL_TEXTURE_TOO_LARGE_EXT i32 #x8065)


;; #if GL_EXT_texture3D
(bind-val GL_PACK_SKIP_IMAGES_EXT i32 #x806B)
(bind-val GL_PACK_IMAGE_HEIGHT_EXT i32 #x806C)
(bind-val GL_UNPACK_SKIP_IMAGES_EXT i32 #x806D)
(bind-val GL_UNPACK_IMAGE_HEIGHT_EXT i32 #x806E)
(bind-val GL_TEXTURE_3D_EXT i32 #x806F)
(bind-val GL_PROXY_TEXTURE_3D_EXT i32 #x8070)
(bind-val GL_TEXTURE_DEPTH_EXT i32 #x8071)
(bind-val GL_TEXTURE_WRAP_R_EXT i32 #x8072)
(bind-val GL_MAX_3D_TEXTURE_SIZE_EXT i32 #x8073)


;; #if GL_EXT_texture_array
(bind-val GL_TEXTURE_1D_ARRAY_EXT i32 #x8C18)
(bind-val GL_PROXY_TEXTURE_1D_ARRAY_EXT i32 #x8C19)
(bind-val GL_TEXTURE_2D_ARRAY_EXT i32 #x8C1A)
(bind-val GL_PROXY_TEXTURE_2D_ARRAY_EXT i32 #x8C1B)
(bind-val GL_TEXTURE_BINDING_1D_ARRAY_EXT i32 #x8C1C)
(bind-val GL_TEXTURE_BINDING_2D_ARRAY_EXT i32 #x8C1D)
(bind-val GL_MAX_ARRAY_TEXTURE_LAYERS_EXT i32 #x88FF)
(bind-val GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT i32 #x884E)
;; /* reuse GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT */
;; /* reuse GL_SAMPLER_1D_ARRAY_EXT */
;; /* reuse GL_SAMPLER_2D_ARRAY_EXT */
;; /* reuse GL_SAMPLER_1D_ARRAY_SHADOW_EXT */
;; /* reuse GL_SAMPLER_2D_ARRAY_SHADOW_EXT */


;; #if GL_EXT_texture_compression_s3tc
(bind-val GL_COMPRESSED_RGB_S3TC_DXT1_EXT i32 #x83F0)
(bind-val GL_COMPRESSED_RGBA_S3TC_DXT1_EXT i32 #x83F1)
(bind-val GL_COMPRESSED_RGBA_S3TC_DXT3_EXT i32 #x83F2)
(bind-val GL_COMPRESSED_RGBA_S3TC_DXT5_EXT i32 #x83F3)


;; #if GL_EXT_texture_cube_map
(bind-val GL_NORMAL_MAP_EXT i32 #x8511)
(bind-val GL_REFLECTION_MAP_EXT i32 #x8512)
(bind-val GL_TEXTURE_CUBE_MAP_EXT i32 #x8513)
(bind-val GL_TEXTURE_BINDING_CUBE_MAP_EXT i32 #x8514)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT i32 #x8515)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT i32 #x8516)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT i32 #x8517)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT i32 #x8518)
(bind-val GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT i32 #x8519)
(bind-val GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT i32 #x851A)
(bind-val GL_PROXY_TEXTURE_CUBE_MAP_EXT i32 #x851B)
(bind-val GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT i32 #x851C)


;; #if GL_EXT_texture_env_combine
(bind-val GL_COMBINE_EXT i32 #x8570)
(bind-val GL_COMBINE_RGB_EXT i32 #x8571)
(bind-val GL_COMBINE_ALPHA_EXT i32 #x8572)
(bind-val GL_RGB_SCALE_EXT i32 #x8573)
(bind-val GL_ADD_SIGNED_EXT i32 #x8574)
(bind-val GL_INTERPOLATE_EXT i32 #x8575)
(bind-val GL_CONSTANT_EXT i32 #x8576)
(bind-val GL_PRIMARY_COLOR_EXT i32 #x8577)
(bind-val GL_PREVIOUS_EXT i32 #x8578)
(bind-val GL_SOURCE0_RGB_EXT i32 #x8580)
(bind-val GL_SOURCE1_RGB_EXT i32 #x8581)
(bind-val GL_SOURCE2_RGB_EXT i32 #x8582)
(bind-val GL_SOURCE0_ALPHA_EXT i32 #x8588)
(bind-val GL_SOURCE1_ALPHA_EXT i32 #x8589)
(bind-val GL_SOURCE2_ALPHA_EXT i32 #x858A)
(bind-val GL_OPERAND0_RGB_EXT i32 #x8590)
(bind-val GL_OPERAND1_RGB_EXT i32 #x8591)
(bind-val GL_OPERAND2_RGB_EXT i32 #x8592)
(bind-val GL_OPERAND0_ALPHA_EXT i32 #x8598)
(bind-val GL_OPERAND1_ALPHA_EXT i32 #x8599)
(bind-val GL_OPERAND2_ALPHA_EXT i32 #x859A)


;; #if GL_EXT_texture_filter_anisotropic
(bind-val GL_TEXTURE_MAX_ANISOTROPY_EXT i32 #x84FE)
(bind-val GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT i32 #x84FF)


;; #if GL_EXT_texture_integer
(bind-val GL_RGBA_INTEGER_MODE_EXT i32 #x8D9E)
(bind-val GL_RGBA32UI_EXT i32 #x8D70)
(bind-val GL_RGB32UI_EXT i32 #x8D71)
(bind-val GL_ALPHA32UI_EXT i32 #x8D72)
(bind-val GL_INTENSITY32UI_EXT i32 #x8D73)
(bind-val GL_LUMINANCE32UI_EXT i32 #x8D74)
(bind-val GL_LUMINANCE_ALPHA32UI_EXT i32 #x8D75)
(bind-val GL_RGBA16UI_EXT i32 #x8D76)
(bind-val GL_RGB16UI_EXT i32 #x8D77)
(bind-val GL_ALPHA16UI_EXT i32 #x8D78)
(bind-val GL_INTENSITY16UI_EXT i32 #x8D79)
(bind-val GL_LUMINANCE16UI_EXT i32 #x8D7A)
(bind-val GL_LUMINANCE_ALPHA16UI_EXT i32 #x8D7B)
(bind-val GL_RGBA8UI_EXT i32 #x8D7C)
(bind-val GL_RGB8UI_EXT i32 #x8D7D)
(bind-val GL_ALPHA8UI_EXT i32 #x8D7E)
(bind-val GL_INTENSITY8UI_EXT i32 #x8D7F)
(bind-val GL_LUMINANCE8UI_EXT i32 #x8D80)
(bind-val GL_LUMINANCE_ALPHA8UI_EXT i32 #x8D81)
(bind-val GL_RGBA32I_EXT i32 #x8D82)
(bind-val GL_RGB32I_EXT i32 #x8D83)
(bind-val GL_ALPHA32I_EXT i32 #x8D84)
(bind-val GL_INTENSITY32I_EXT i32 #x8D85)
(bind-val GL_LUMINANCE32I_EXT i32 #x8D86)
(bind-val GL_LUMINANCE_ALPHA32I_EXT i32 #x8D87)
(bind-val GL_RGBA16I_EXT i32 #x8D88)
(bind-val GL_RGB16I_EXT i32 #x8D89)
(bind-val GL_ALPHA16I_EXT i32 #x8D8A)
(bind-val GL_INTENSITY16I_EXT i32 #x8D8B)
(bind-val GL_LUMINANCE16I_EXT i32 #x8D8C)
(bind-val GL_LUMINANCE_ALPHA16I_EXT i32 #x8D8D)
(bind-val GL_RGBA8I_EXT i32 #x8D8E)
(bind-val GL_RGB8I_EXT i32 #x8D8F)
(bind-val GL_ALPHA8I_EXT i32 #x8D90)
(bind-val GL_INTENSITY8I_EXT i32 #x8D91)
(bind-val GL_LUMINANCE8I_EXT i32 #x8D92)
(bind-val GL_LUMINANCE_ALPHA8I_EXT i32 #x8D93)
(bind-val GL_RED_INTEGER_EXT i32 #x8D94)
(bind-val GL_GREEN_INTEGER_EXT i32 #x8D95)
(bind-val GL_BLUE_INTEGER_EXT i32 #x8D96)
(bind-val GL_ALPHA_INTEGER_EXT i32 #x8D97)
(bind-val GL_RGB_INTEGER_EXT i32 #x8D98)
(bind-val GL_RGBA_INTEGER_EXT i32 #x8D99)
(bind-val GL_BGR_INTEGER_EXT i32 #x8D9A)
(bind-val GL_BGRA_INTEGER_EXT i32 #x8D9B)
(bind-val GL_LUMINANCE_INTEGER_EXT i32 #x8D9C)
(bind-val GL_LUMINANCE_ALPHA_INTEGER_EXT i32 #x8D9D)


;; #if GL_EXT_texture_lod_bias
(bind-val GL_MAX_TEXTURE_LOD_BIAS_EXT i32 #x84FD)
(bind-val GL_TEXTURE_FILTER_CONTROL_EXT i32 #x8500)
(bind-val GL_TEXTURE_LOD_BIAS_EXT i32 #x8501)


;; #if GL_EXT_texture_mirror_clamp
(bind-val GL_MIRROR_CLAMP_EXT i32 #x8742)
(bind-val GL_MIRROR_CLAMP_TO_EDGE_EXT i32 #x8743)
(bind-val GL_MIRROR_CLAMP_TO_BORDER_EXT i32 #x8912)


;; #if GL_EXT_texture_object
(bind-val GL_TEXTURE_PRIORITY_EXT i32 #x8066)
(bind-val GL_TEXTURE_RESIDENT_EXT i32 #x8067)
(bind-val GL_TEXTURE_1D_BINDING_EXT i32 #x8068)
(bind-val GL_TEXTURE_2D_BINDING_EXT i32 #x8069)
(bind-val GL_TEXTURE_3D_BINDING_EXT i32 #x806A)


;; #if GL_EXT_texture_rectangle
(bind-val GL_TEXTURE_RECTANGLE_EXT i32 #x84F5)
(bind-val GL_TEXTURE_BINDING_RECTANGLE_EXT i32 #x84F6)
(bind-val GL_PROXY_TEXTURE_RECTANGLE_EXT i32 #x84F7)
(bind-val GL_MAX_RECTANGLE_TEXTURE_SIZE_EXT i32 #x84F8)


;; #if GL_EXT_texture_shared_exponent
(bind-val GL_RGB9_E5_EXT i32 #x8C3D)
(bind-val GL_UNSIGNED_INT_5_9_9_9_REV_EXT i32 #x8C3E)
(bind-val GL_TEXTURE_SHARED_SIZE_EXT i32 #x8C3F)


;; #if GL_EXT_texture_sRGB
(bind-val GL_SRGB_EXT i32 #x8C40)
(bind-val GL_SRGB8_EXT i32 #x8C41)
(bind-val GL_SRGB_ALPHA_EXT i32 #x8C42)
(bind-val GL_SRGB8_ALPHA8_EXT i32 #x8C43)
(bind-val GL_SLUMINANCE_ALPHA_EXT i32 #x8C44)
(bind-val GL_SLUMINANCE8_ALPHA8_EXT i32 #x8C45)
(bind-val GL_SLUMINANCE_EXT i32 #x8C46)
(bind-val GL_SLUMINANCE8_EXT i32 #x8C47)
(bind-val GL_COMPRESSED_SRGB_EXT i32 #x8C48)
(bind-val GL_COMPRESSED_SRGB_ALPHA_EXT i32 #x8C49)
(bind-val GL_COMPRESSED_SLUMINANCE_EXT i32 #x8C4A)
(bind-val GL_COMPRESSED_SLUMINANCE_ALPHA_EXT i32 #x8C4B)
(bind-val GL_COMPRESSED_SRGB_S3TC_DXT1_EXT i32 #x8C4C)
(bind-val GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT i32 #x8C4D)
(bind-val GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT i32 #x8C4E)
(bind-val GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT i32 #x8C4F)


;; #if GL_EXT_texture_sRGB_decode
(bind-val GL_TEXTURE_SRGB_DECODE_EXT i32 #x8A48)
(bind-val GL_DECODE_EXT i32 #x8A49)
(bind-val GL_SKIP_DECODE_EXT i32 #x8A4A)


;; #if GL_EXT_timer_query
(bind-val GL_TIME_ELAPSED_EXT i32 #x88BF)


;; #if GL_EXT_transform_feedback
(bind-val GL_TRANSFORM_FEEDBACK_BUFFER_EXT i32 #x8C8E)
(bind-val GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT i32 #x8C84)
(bind-val GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT i32 #x8C85)
(bind-val GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT i32 #x8C8F)
(bind-val GL_INTERLEAVED_ATTRIBS_EXT i32 #x8C8C)
(bind-val GL_SEPARATE_ATTRIBS_EXT i32 #x8C8D)
(bind-val GL_PRIMITIVES_GENERATED_EXT i32 #x8C87)
(bind-val GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT i32 #x8C88)
(bind-val GL_RASTERIZER_DISCARD_EXT i32 #x8C89)
(bind-val GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT i32 #x8C8A)
(bind-val GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT i32 #x8C8B)
(bind-val GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT i32 #x8C80)
(bind-val GL_TRANSFORM_FEEDBACK_VARYINGS_EXT i32 #x8C83)
(bind-val GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT i32 #x8C7F)
(bind-val GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT i32 #x8C76)


;; #if GL_EXT_vertex_array
(bind-val GL_VERTEX_ARRAY_EXT i32 #x8074)
(bind-val GL_NORMAL_ARRAY_EXT i32 #x8075)
(bind-val GL_COLOR_ARRAY_EXT i32 #x8076)
(bind-val GL_INDEX_ARRAY_EXT i32 #x8077)
(bind-val GL_TEXTURE_COORD_ARRAY_EXT i32 #x8078)
(bind-val GL_EDGE_FLAG_ARRAY_EXT i32 #x8079)
(bind-val GL_VERTEX_ARRAY_SIZE_EXT i32 #x807A)
(bind-val GL_VERTEX_ARRAY_TYPE_EXT i32 #x807B)
(bind-val GL_VERTEX_ARRAY_STRIDE_EXT i32 #x807C)
(bind-val GL_VERTEX_ARRAY_COUNT_EXT i32 #x807D)
(bind-val GL_NORMAL_ARRAY_TYPE_EXT i32 #x807E)
(bind-val GL_NORMAL_ARRAY_STRIDE_EXT i32 #x807F)
(bind-val GL_NORMAL_ARRAY_COUNT_EXT i32 #x8080)
(bind-val GL_COLOR_ARRAY_SIZE_EXT i32 #x8081)
(bind-val GL_COLOR_ARRAY_TYPE_EXT i32 #x8082)
(bind-val GL_COLOR_ARRAY_STRIDE_EXT i32 #x8083)
(bind-val GL_COLOR_ARRAY_COUNT_EXT i32 #x8084)
(bind-val GL_INDEX_ARRAY_TYPE_EXT i32 #x8085)
(bind-val GL_INDEX_ARRAY_STRIDE_EXT i32 #x8086)
(bind-val GL_INDEX_ARRAY_COUNT_EXT i32 #x8087)
(bind-val GL_TEXTURE_COORD_ARRAY_SIZE_EXT i32 #x8088)
(bind-val GL_TEXTURE_COORD_ARRAY_TYPE_EXT i32 #x8089)
(bind-val GL_TEXTURE_COORD_ARRAY_STRIDE_EXT i32 #x808A)
(bind-val GL_TEXTURE_COORD_ARRAY_COUNT_EXT i32 #x808B)
(bind-val GL_EDGE_FLAG_ARRAY_STRIDE_EXT i32 #x808C)
(bind-val GL_EDGE_FLAG_ARRAY_COUNT_EXT i32 #x808D)
(bind-val GL_VERTEX_ARRAY_POINTER_EXT i32 #x808E)
(bind-val GL_NORMAL_ARRAY_POINTER_EXT i32 #x808F)
(bind-val GL_COLOR_ARRAY_POINTER_EXT i32 #x8090)
(bind-val GL_INDEX_ARRAY_POINTER_EXT i32 #x8091)
(bind-val GL_TEXTURE_COORD_ARRAY_POINTER_EXT i32 #x8092)
(bind-val GL_EDGE_FLAG_ARRAY_POINTER_EXT i32 #x8093)


;; #if GL_APPLE_aux_depth_stencil
(bind-val GL_AUX_DEPTH_STENCIL_APPLE i32 #x8A14)


;; #if GL_APPLE_client_storage
(bind-val GL_UNPACK_CLIENT_STORAGE_APPLE i32 #x85B2)


;; #if GL_APPLE_element_array
(bind-val GL_ELEMENT_ARRAY_APPLE i32 #x8A0C)
(bind-val GL_ELEMENT_ARRAY_TYPE_APPLE i32 #x8A0D)
(bind-val GL_ELEMENT_ARRAY_POINTER_APPLE i32 #x8A0E)


;; #if GL_APPLE_fence
(bind-val GL_DRAW_PIXELS_APPLE i32 #x8A0A)
(bind-val GL_FENCE_APPLE i32 #x8A0B)
(bind-val GL_BUFFER_OBJECT_APPLE i32 #x85B3)


;; #if GL_APPLE_float_pixels
(bind-val GL_HALF_APPLE i32 #x140B)
(bind-val GL_COLOR_FLOAT_APPLE i32 #x8A0F)
(bind-val GL_RGBA_FLOAT32_APPLE i32 #x8814)
(bind-val GL_RGB_FLOAT32_APPLE i32 #x8815)
(bind-val GL_ALPHA_FLOAT32_APPLE i32 #x8816)
(bind-val GL_INTENSITY_FLOAT32_APPLE i32 #x8817)
(bind-val GL_LUMINANCE_FLOAT32_APPLE i32 #x8818)
(bind-val GL_LUMINANCE_ALPHA_FLOAT32_APPLE i32 #x8819)
(bind-val GL_RGBA_FLOAT16_APPLE i32 #x881A)
(bind-val GL_RGB_FLOAT16_APPLE i32 #x881B)
(bind-val GL_ALPHA_FLOAT16_APPLE i32 #x881C)
(bind-val GL_INTENSITY_FLOAT16_APPLE i32 #x881D)
(bind-val GL_LUMINANCE_FLOAT16_APPLE i32 #x881E)
(bind-val GL_LUMINANCE_ALPHA_FLOAT16_APPLE i32 #x881F)


;; #if GL_APPLE_flush_buffer_range
(bind-val GL_BUFFER_SERIALIZED_MODIFY_APPLE i32 #x8A12)
(bind-val GL_BUFFER_FLUSHING_UNMAP_APPLE i32 #x8A13)


;; #if GL_APPLE_object_purgeable
(bind-val GL_RELEASED_APPLE i32 #x8A19)
(bind-val GL_VOLATILE_APPLE i32 #x8A1A)
(bind-val GL_RETAINED_APPLE i32 #x8A1B)
(bind-val GL_UNDEFINED_APPLE i32 #x8A1C)
(bind-val GL_PURGEABLE_APPLE i32 #x8A1D)


;; #if GL_APPLE_pixel_buffer
(bind-val GL_MIN_PBUFFER_VIEWPORT_DIMS_APPLE i32 #x8A10)


;; #if GL_APPLE_rgb_422
(bind-val GL_RGB_422_APPLE i32 #x8A1F)


;; #if GL_APPLE_row_bytes
(bind-val GL_PACK_ROW_BYTES_APPLE i32 #x8A15)
(bind-val GL_UNPACK_ROW_BYTES_APPLE i32 #x8A16)
(bind-val GL_PACK_IMAGE_BYTES_APPLE i32 #x8A17)
(bind-val GL_UNPACK_IMAGE_BYTES_APPLE i32 #x8A18)


;; #if GL_APPLE_specular_vector
(bind-val GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE i32 #x85B0)


;; #if GL_APPLE_texture_range
(bind-val GL_TEXTURE_RANGE_LENGTH_APPLE i32 #x85B7)
(bind-val GL_TEXTURE_RANGE_POINTER_APPLE i32 #x85B8)
(bind-val GL_TEXTURE_STORAGE_HINT_APPLE i32 #x85BC)
(bind-val GL_TEXTURE_MINIMIZE_STORAGE_APPLE i32 #x85B6)
(bind-val GL_STORAGE_PRIVATE_APPLE i32 #x85BD)
(bind-val GL_STORAGE_CACHED_APPLE i32 #x85BE)
(bind-val GL_STORAGE_SHARED_APPLE i32 #x85BF)


;; #if GL_APPLE_transform_hint
(bind-val GL_TRANSFORM_HINT_APPLE i32 #x85B1)


;; #if GL_APPLE_vertex_array_object
(bind-val GL_VERTEX_ARRAY_BINDING_APPLE i32 #x85B5)


;; #if GL_APPLE_vertex_array_range
(bind-val GL_VERTEX_ARRAY_RANGE_APPLE i32 #x851D)
(bind-val GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE i32 #x851E)
(bind-val GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_APPLE i32 #x8520)
(bind-val GL_VERTEX_ARRAY_RANGE_POINTER_APPLE i32 #x8521)
(bind-val GL_VERTEX_ARRAY_STORAGE_HINT_APPLE i32 #x851F)
(bind-val GL_STORAGE_CLIENT_APPLE i32 #x85B4)
(bind-val GL_STORAGE_PRIVATE_APPLE i32 #x85BD)
(bind-val GL_STORAGE_CACHED_APPLE i32 #x85BE)
(bind-val GL_STORAGE_SHARED_APPLE i32 #x85BF)


;; #if GL_APPLE_vertex_point_size
(bind-val GL_VERTEX_POINT_SIZE_APPLE i32 #x8A26)
(bind-val GL_CURRENT_POINT_SIZE_APPLE i32 #x8A27)
(bind-val GL_POINT_SIZE_ARRAY_APPLE i32 #x8B9C)
(bind-val GL_POINT_SIZE_ARRAY_TYPE_APPLE i32 #x898A)
(bind-val GL_POINT_SIZE_ARRAY_STRIDE_APPLE i32 #x898B)
(bind-val GL_POINT_SIZE_ARRAY_POINTER_APPLE i32 #x898C)
(bind-val GL_POINT_SIZE_ARRAY_BUFFER_BINDING_APPLE i32 #x8B9F)


;; #if GL_APPLE_vertex_program_evaluators
(bind-val GL_VERTEX_ATTRIB_MAP1_APPLE i32 #x8A00)
(bind-val GL_VERTEX_ATTRIB_MAP2_APPLE i32 #x8A01)
(bind-val GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE i32 #x8A02)
(bind-val GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE i32 #x8A03)
(bind-val GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE i32 #x8A04)
(bind-val GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE i32 #x8A05)
(bind-val GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE i32 #x8A06)
(bind-val GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE i32 #x8A07)
(bind-val GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE i32 #x8A08)
(bind-val GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE i32 #x8A09)


;; #if GL_APPLE_ycbcr_422
(bind-val GL_YCBCR_422_APPLE i32 #x85B9)


;; #if GL_APPLE_ycbcr_422 || GL_APPLE_rgb_422
(bind-val GL_UNSIGNED_SHORT_8_8_APPLE i32 #x85BA)
(bind-val GL_UNSIGNED_SHORT_8_8_REV_APPLE i32 #x85BB)


;; #if GL_ATI_array_rev_comps_in_4_bytes
(bind-val GL_ARRAY_REV_COMPS_IN_4_BYTES_ATI i32 #x897C)


;; #if GL_ATI_blend_equation_separate
(bind-val GL_ALPHA_BLEND_EQUATION_ATI i32 #x883D)


;; #if GL_ATI_blend_weighted_minmax
(bind-val GL_MIN_WEIGHTED_ATI i32 #x877D)
(bind-val GL_MAX_WEIGHTED_ATI i32 #x877E)


;; #if GL_ATI_pn_triangles
(bind-val GL_PN_TRIANGLES_ATI i32 #x6090)
(bind-val GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI i32 #x6091)
(bind-val GL_PN_TRIANGLES_POINT_MODE_ATI i32 #x6092)
(bind-val GL_PN_TRIANGLES_NORMAL_MODE_ATI i32 #x6093)
(bind-val GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI i32 #x6094)
(bind-val GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI i32 #x6095)
(bind-val GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI i32 #x6096)
(bind-val GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI i32 #x6097)
(bind-val GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI i32 #x6098)


;; #if GL_ATI_point_cull_mode
(bind-val GL_POINT_CULL_MODE_ATI i32 #x60B3)
(bind-val GL_POINT_CULL_CENTER_ATI i32 #x60B4)
(bind-val GL_POINT_CULL_CLIP_ATI i32 #x60B5)


;; #if GL_ATI_separate_stencil
(bind-val GL_STENCIL_BACK_FUNC_ATI i32 #x8800)
(bind-val GL_STENCIL_BACK_FAIL_ATI i32 #x8801)
(bind-val GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI i32 #x8802)
(bind-val GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI i32 #x8803)


;; #if GL_ATI_text_fragment_shader
(bind-val GL_TEXT_FRAGMENT_SHADER_ATI i32 #x8200)


;; #if GL_ATI_texture_compression_3dc
(bind-val GL_COMPRESSED_LUMINANCE_ALPHA_3DC_ATI i32 #x8837)


;; #if GL_ATI_texture_env_combine3
(bind-val GL_MODULATE_ADD_ATI i32 #x8744)
(bind-val GL_MODULATE_SIGNED_ADD_ATI i32 #x8745)
(bind-val GL_MODULATE_SUBTRACT_ATI i32 #x8746)


;; #if GL_ATI_texture_float
(bind-val GL_RGBA_FLOAT32_ATI i32 #x8814)
(bind-val GL_RGB_FLOAT32_ATI i32 #x8815)
(bind-val GL_ALPHA_FLOAT32_ATI i32 #x8816)
(bind-val GL_INTENSITY_FLOAT32_ATI i32 #x8817)
(bind-val GL_LUMINANCE_FLOAT32_ATI i32 #x8818)
(bind-val GL_LUMINANCE_ALPHA_FLOAT32_ATI i32 #x8819)
(bind-val GL_RGBA_FLOAT16_ATI i32 #x881A)
(bind-val GL_RGB_FLOAT16_ATI i32 #x881B)
(bind-val GL_ALPHA_FLOAT16_ATI i32 #x881C)
(bind-val GL_INTENSITY_FLOAT16_ATI i32 #x881D)
(bind-val GL_LUMINANCE_FLOAT16_ATI i32 #x881E)
(bind-val GL_LUMINANCE_ALPHA_FLOAT16_ATI i32 #x881F)


;; #if GL_ATI_texture_mirror_once
(bind-val GL_MIRROR_CLAMP_ATI i32 #x8742)
(bind-val GL_MIRROR_CLAMP_TO_EDGE_ATI i32 #x8743)


;; #if GL_ATIX_pn_triangles
(bind-val GL_PN_TRIANGLES_ATIX i32 #x6090)
(bind-val GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATIX i32 #x6091)
(bind-val GL_PN_TRIANGLES_POINT_MODE_ATIX i32 #x6092)
(bind-val GL_PN_TRIANGLES_NORMAL_MODE_ATIX i32 #x6093)
(bind-val GL_PN_TRIANGLES_TESSELATION_LEVEL_ATIX i32 #x6094)
(bind-val GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATIX i32 #x6095)
(bind-val GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATIX i32 #x6096)
(bind-val GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATIX i32 #x6097)
(bind-val GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATIX i32 #x6098)


;; #if GL_HP_convolution_border_modes
(bind-val GL_IGNORE_BORDER_HP i32 #x8150)
(bind-val GL_CONSTANT_BORDER_HP i32 #x8151)
(bind-val GL_REPLICATE_BORDER_HP i32 #x8153)
(bind-val GL_CONVOLUTION_BORDER_COLOR_HP i32 #x8154)


;; #if GL_IBM_rasterpos_clip
(bind-val GL_RASTER_POSITION_UNCLIPPED_IBM i32 #x19262)


;; #if GL_NV_conditional_render
(bind-val GL_QUERY_WAIT_NV i32 #x8E13)
(bind-val GL_QUERY_NO_WAIT_NV i32 #x8E14)
(bind-val GL_QUERY_BY_REGION_WAIT_NV i32 #x8E15)
(bind-val GL_QUERY_BY_REGION_NO_WAIT_NV i32 #x8E16)


;; #if GL_NV_depth_clamp
(bind-val GL_DEPTH_CLAMP_NV i32 #x864F)


;; #if GL_NV_fog_distance
(bind-val GL_FOG_DISTANCE_MODE_NV i32 #x855A)
(bind-val GL_EYE_RADIAL_NV i32 #x855B)
(bind-val GL_EYE_PLANE_ABSOLUTE_NV i32 #x855C)
;; /* reuse GL_EYE_PLANE */


;; #if GL_NV_fragment_program2
(bind-val GL_MAX_PROGRAM_IF_DEPTH_NV i32 #x88F6)
(bind-val GL_MAX_PROGRAM_LOOP_DEPTH_NV i32 #x88F7)
(bind-val GL_MAX_PROGRAM_LOOP_COUNT_NV i32 #x88F8)


;; #if GL_NV_fragment_program2 || GL_NV_vertex_program2_option
(bind-val GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV i32 #x88F4)
(bind-val GL_MAX_PROGRAM_CALL_DEPTH_NV i32 #x88F5)


;; #if GL_NV_light_max_exponent
(bind-val GL_MAX_SHININESS_NV i32 #x8504)
(bind-val GL_MAX_SPOT_EXPONENT_NV i32 #x8505)


;; #if GL_NV_multisample_filter_hint
(bind-val GL_MULTISAMPLE_FILTER_HINT_NV i32 #x8534)


;; #if GL_NV_point_sprite
(bind-val GL_POINT_SPRITE_NV i32 #x8861)
(bind-val GL_COORD_REPLACE_NV i32 #x8862)
(bind-val GL_POINT_SPRITE_R_MODE_NV i32 #x8863)


;; #if GL_NV_register_combiners
(bind-val GL_REGISTER_COMBINERS_NV i32 #x8522)
(bind-val GL_VARIABLE_A_NV i32 #x8523)
(bind-val GL_VARIABLE_B_NV i32 #x8524)
(bind-val GL_VARIABLE_C_NV i32 #x8525)
(bind-val GL_VARIABLE_D_NV i32 #x8526)
(bind-val GL_VARIABLE_E_NV i32 #x8527)
(bind-val GL_VARIABLE_F_NV i32 #x8528)
(bind-val GL_VARIABLE_G_NV i32 #x8529)
(bind-val GL_CONSTANT_COLOR0_NV i32 #x852A)
(bind-val GL_CONSTANT_COLOR1_NV i32 #x852B)
(bind-val GL_PRIMARY_COLOR_NV i32 #x852C)
(bind-val GL_SECONDARY_COLOR_NV i32 #x852D)
(bind-val GL_SPARE0_NV i32 #x852E)
(bind-val GL_SPARE1_NV i32 #x852F)
(bind-val GL_DISCARD_NV i32 #x8530)
(bind-val GL_E_TIMES_F_NV i32 #x8531)
(bind-val GL_SPARE0_PLUS_SECONDARY_COLOR_NV i32 #x8532)
(bind-val GL_UNSIGNED_IDENTITY_NV i32 #x8536)
(bind-val GL_UNSIGNED_INVERT_NV i32 #x8537)
(bind-val GL_EXPAND_NORMAL_NV i32 #x8538)
(bind-val GL_EXPAND_NEGATE_NV i32 #x8539)
(bind-val GL_HALF_BIAS_NORMAL_NV i32 #x853A)
(bind-val GL_HALF_BIAS_NEGATE_NV i32 #x853B)
(bind-val GL_SIGNED_IDENTITY_NV i32 #x853C)
(bind-val GL_SIGNED_NEGATE_NV i32 #x853D)
(bind-val GL_SCALE_BY_TWO_NV i32 #x853E)
(bind-val GL_SCALE_BY_FOUR_NV i32 #x853F)
(bind-val GL_SCALE_BY_ONE_HALF_NV i32 #x8540)
(bind-val GL_BIAS_BY_NEGATIVE_ONE_HALF_NV i32 #x8541)
(bind-val GL_COMBINER_INPUT_NV i32 #x8542)
(bind-val GL_COMBINER_MAPPING_NV i32 #x8543)
(bind-val GL_COMBINER_COMPONENT_USAGE_NV i32 #x8544)
(bind-val GL_COMBINER_AB_DOT_PRODUCT_NV i32 #x8545)
(bind-val GL_COMBINER_CD_DOT_PRODUCT_NV i32 #x8546)
(bind-val GL_COMBINER_MUX_SUM_NV i32 #x8547)
(bind-val GL_COMBINER_SCALE_NV i32 #x8548)
(bind-val GL_COMBINER_BIAS_NV i32 #x8549)
(bind-val GL_COMBINER_AB_OUTPUT_NV i32 #x854A)
(bind-val GL_COMBINER_CD_OUTPUT_NV i32 #x854B)
(bind-val GL_COMBINER_SUM_OUTPUT_NV i32 #x854C)
(bind-val GL_MAX_GENERAL_COMBINERS_NV i32 #x854D)
(bind-val GL_NUM_GENERAL_COMBINERS_NV i32 #x854E)
(bind-val GL_COLOR_SUM_CLAMP_NV i32 #x854F)
(bind-val GL_COMBINER0_NV i32 #x8550)
(bind-val GL_COMBINER1_NV i32 #x8551)
(bind-val GL_COMBINER2_NV i32 #x8552)
(bind-val GL_COMBINER3_NV i32 #x8553)
(bind-val GL_COMBINER4_NV i32 #x8554)
(bind-val GL_COMBINER5_NV i32 #x8555)
(bind-val GL_COMBINER6_NV i32 #x8556)
(bind-val GL_COMBINER7_NV i32 #x8557)
;; /* reuse GL_TEXTURE0_ARB */
;; /* reuse GL_TEXTURE1_ARB */
;; /* reuse GL_ZERO */
;; /* reuse GL_NONE */
;; /* reuse GL_FOG */


;; #if GL_NV_register_combiners2
(bind-val GL_PER_STAGE_CONSTANTS_NV i32 #x8535)


;; #if GL_NV_texgen_reflection
(bind-val GL_NORMAL_MAP_NV i32 #x8511)
(bind-val GL_REFLECTION_MAP_NV i32 #x8512)


;; #if GL_NV_texture_shader
(bind-val GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV i32 #x86D9)
(bind-val GL_UNSIGNED_INT_S8_S8_8_8_NV i32 #x86DA)
(bind-val GL_UNSIGNED_INT_8_8_S8_S8_REV_NV i32 #x86DB)
(bind-val GL_DSDT_MAG_INTENSITY_NV i32 #x86DC)
(bind-val GL_TEXTURE_SHADER_NV i32 #x86DE)
(bind-val GL_SHADER_OPERATION_NV i32 #x86DF)
(bind-val GL_CULL_MODES_NV i32 #x86E0)
(bind-val GL_OFFSET_TEXTURE_MATRIX_NV i32 #x86E1)
(bind-val GL_OFFSET_TEXTURE_SCALE_NV i32 #x86E2)
(bind-val GL_OFFSET_TEXTURE_BIAS_NV i32 #x86E3)
(bind-val GL_OFFSET_TEXTURE_2D_MATRIX_NV i32 #x86E1)
(bind-val GL_OFFSET_TEXTURE_2D_SCALE_NV i32 #x86E2)
(bind-val GL_OFFSET_TEXTURE_2D_BIAS_NV i32 #x86E3)
(bind-val GL_PREVIOUS_TEXTURE_INPUT_NV i32 #x86E4)
(bind-val GL_CONST_EYE_NV i32 #x86E5)
(bind-val GL_SHADER_CONSISTENT_NV i32 #x86DD)
(bind-val GL_PASS_THROUGH_NV i32 #x86E6)
(bind-val GL_CULL_FRAGMENT_NV i32 #x86E7)
(bind-val GL_OFFSET_TEXTURE_2D_NV i32 #x86E8)
(bind-val GL_OFFSET_TEXTURE_RECTANGLE_NV i32 #x864C)
(bind-val GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV i32 #x864D)
(bind-val GL_DEPENDENT_AR_TEXTURE_2D_NV i32 #x86E9)
(bind-val GL_DEPENDENT_GB_TEXTURE_2D_NV i32 #x86EA)
(bind-val GL_DOT_PRODUCT_NV i32 #x86EC)
(bind-val GL_DOT_PRODUCT_DEPTH_REPLACE_NV i32 #x86ED)
(bind-val GL_DOT_PRODUCT_TEXTURE_2D_NV i32 #x86EE)
(bind-val GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV i32 #x864E)
(bind-val GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV i32 #x86F0)
(bind-val GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV i32 #x86F1)
(bind-val GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV i32 #x86F2)
(bind-val GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV i32 #x86F3)
(bind-val GL_HILO_NV i32 #x86F4)
(bind-val GL_DSDT_NV i32 #x86F5)
(bind-val GL_DSDT_MAG_NV i32 #x86F6)
(bind-val GL_DSDT_MAG_VIB_NV i32 #x86F7)
(bind-val GL_HILO16_NV i32 #x86F8)
(bind-val GL_SIGNED_HILO_NV i32 #x86F9)
(bind-val GL_SIGNED_HILO16_NV i32 #x86FA)
(bind-val GL_SIGNED_RGBA_NV i32 #x86FB)
(bind-val GL_SIGNED_RGBA8_NV i32 #x86FC)
(bind-val GL_SIGNED_RGB_NV i32 #x86FE)
(bind-val GL_SIGNED_RGB8_NV i32 #x86FF)
(bind-val GL_SIGNED_LUMINANCE_NV i32 #x8701)
(bind-val GL_SIGNED_LUMINANCE8_NV i32 #x8702)
(bind-val GL_SIGNED_LUMINANCE_ALPHA_NV i32 #x8703)
(bind-val GL_SIGNED_LUMINANCE8_ALPHA8_NV i32 #x8704)
(bind-val GL_SIGNED_ALPHA_NV i32 #x8705)
(bind-val GL_SIGNED_ALPHA8_NV i32 #x8706)
(bind-val GL_SIGNED_INTENSITY_NV i32 #x8707)
(bind-val GL_SIGNED_INTENSITY8_NV i32 #x8708)
(bind-val GL_DSDT8_NV i32 #x8709)
(bind-val GL_DSDT8_MAG8_NV i32 #x870A)
(bind-val GL_DSDT8_MAG8_INTENSITY8_NV i32 #x870B)
(bind-val GL_SIGNED_RGB_UNSIGNED_ALPHA_NV i32 #x870C)
(bind-val GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV i32 #x870D)
(bind-val GL_HI_SCALE_NV i32 #x870E)
(bind-val GL_LO_SCALE_NV i32 #x870F)
(bind-val GL_DS_SCALE_NV i32 #x8710)
(bind-val GL_DT_SCALE_NV i32 #x8711)
(bind-val GL_MAGNITUDE_SCALE_NV i32 #x8712)
(bind-val GL_VIBRANCE_SCALE_NV i32 #x8713)
(bind-val GL_HI_BIAS_NV i32 #x8714)
(bind-val GL_LO_BIAS_NV i32 #x8715)
(bind-val GL_DS_BIAS_NV i32 #x8716)
(bind-val GL_DT_BIAS_NV i32 #x8717)
(bind-val GL_MAGNITUDE_BIAS_NV i32 #x8718)
(bind-val GL_VIBRANCE_BIAS_NV i32 #x8719)
(bind-val GL_TEXTURE_BORDER_VALUES_NV i32 #x871A)
(bind-val GL_TEXTURE_HI_SIZE_NV i32 #x871B)
(bind-val GL_TEXTURE_LO_SIZE_NV i32 #x871C)
(bind-val GL_TEXTURE_DS_SIZE_NV i32 #x871D)
(bind-val GL_TEXTURE_DT_SIZE_NV i32 #x871E)
(bind-val GL_TEXTURE_MAG_SIZE_NV i32 #x871F)


;; #if GL_NV_texture_shader2
(bind-val GL_DOT_PRODUCT_TEXTURE_3D_NV i32 #x86EF)


;; #if GL_NV_texture_shader3
(bind-val GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV i32 #x8850)
(bind-val GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV i32 #x8851)
(bind-val GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV i32 #x8852)
(bind-val GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV i32 #x8853)
(bind-val GL_OFFSET_HILO_TEXTURE_2D_NV i32 #x8854)
(bind-val GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV i32 #x8855)
(bind-val GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV i32 #x8856)
(bind-val GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV i32 #x8857)
(bind-val GL_DEPENDENT_HILO_TEXTURE_2D_NV i32 #x8858)
(bind-val GL_DEPENDENT_RGB_TEXTURE_3D_NV i32 #x8859)
(bind-val GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV i32 #x885A)
(bind-val GL_DOT_PRODUCT_PASS_THROUGH_NV i32 #x885B)
(bind-val GL_DOT_PRODUCT_TEXTURE_1D_NV i32 #x885C)
(bind-val GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV i32 #x885D)
(bind-val GL_HILO8_NV i32 #x885E)
(bind-val GL_SIGNED_HILO8_NV i32 #x885F)
(bind-val GL_FORCE_BLUE_TO_ONE_NV i32 #x8860)


;; #if GL_NV_vertex_array_range
(bind-val GL_VERTEX_ARRAY_RANGE_NV i32 #x851D)
(bind-val GL_VERTEX_ARRAY_RANGE_LENGTH_NV i32 #x851E)
(bind-val GL_VERTEX_ARRAY_RANGE_VALID_NV i32 #x851F)
(bind-val GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV i32 #x8520)
(bind-val GL_VERTEX_ARRAY_RANGE_POINTER_NV i32 #x8521)


;; #if GL_NV_vertex_array_range2
(bind-val GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV i32 #x8533)


;; #if GL_NV_vertex_program
(bind-val GL_VERTEX_PROGRAM_NV i32 #x8620)
(bind-val GL_VERTEX_STATE_PROGRAM_NV i32 #x8621)
(bind-val GL_ATTRIB_ARRAY_SIZE_NV i32 #x8623)
(bind-val GL_ATTRIB_ARRAY_STRIDE_NV i32 #x8624)
(bind-val GL_ATTRIB_ARRAY_TYPE_NV i32 #x8625)
(bind-val GL_CURRENT_ATTRIB_NV i32 #x8626)
(bind-val GL_PROGRAM_LENGTH_NV i32 #x8627)
(bind-val GL_PROGRAM_STRING_NV i32 #x8628)
(bind-val GL_MODELVIEW_PROJECTION_NV i32 #x8629)
(bind-val GL_IDENTITY_NV i32 #x862A)
(bind-val GL_INVERSE_NV i32 #x862B)
(bind-val GL_TRANSPOSE_NV i32 #x862C)
(bind-val GL_INVERSE_TRANSPOSE_NV i32 #x862D)
(bind-val GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV i32 #x862E)
(bind-val GL_MAX_TRACK_MATRICES_NV i32 #x862F)
(bind-val GL_MATRIX0_NV i32 #x8630)
(bind-val GL_MATRIX1_NV i32 #x8631)
(bind-val GL_MATRIX2_NV i32 #x8632)
(bind-val GL_MATRIX3_NV i32 #x8633)
(bind-val GL_MATRIX4_NV i32 #x8634)
(bind-val GL_MATRIX5_NV i32 #x8635)
(bind-val GL_MATRIX6_NV i32 #x8636)
(bind-val GL_MATRIX7_NV i32 #x8637)
(bind-val GL_CURRENT_MATRIX_STACK_DEPTH_NV i32 #x8640)
(bind-val GL_CURRENT_MATRIX_NV i32 #x8641)
(bind-val GL_VERTEX_PROGRAM_POINT_SIZE_NV i32 #x8642)
(bind-val GL_VERTEX_PROGRAM_TWO_SIDE_NV i32 #x8643)
(bind-val GL_PROGRAM_PARAMETER_NV i32 #x8644)
(bind-val GL_ATTRIB_ARRAY_POINTER_NV i32 #x8645)
(bind-val GL_PROGRAM_TARGET_NV i32 #x8646)
(bind-val GL_PROGRAM_RESIDENT_NV i32 #x8647)
(bind-val GL_TRACK_MATRIX_NV i32 #x8648)
(bind-val GL_TRACK_MATRIX_TRANSFORM_NV i32 #x8649)
(bind-val GL_VERTEX_PROGRAM_BINDING_NV i32 #x864A)
(bind-val GL_PROGRAM_ERROR_POSITION_NV i32 #x864B)
(bind-val GL_VERTEX_ATTRIB_ARRAY0_NV i32 #x8650)
(bind-val GL_VERTEX_ATTRIB_ARRAY1_NV i32 #x8651)
(bind-val GL_VERTEX_ATTRIB_ARRAY2_NV i32 #x8652)
(bind-val GL_VERTEX_ATTRIB_ARRAY3_NV i32 #x8653)
(bind-val GL_VERTEX_ATTRIB_ARRAY4_NV i32 #x8654)
(bind-val GL_VERTEX_ATTRIB_ARRAY5_NV i32 #x8655)
(bind-val GL_VERTEX_ATTRIB_ARRAY6_NV i32 #x8656)
(bind-val GL_VERTEX_ATTRIB_ARRAY7_NV i32 #x8657)
(bind-val GL_VERTEX_ATTRIB_ARRAY8_NV i32 #x8658)
(bind-val GL_VERTEX_ATTRIB_ARRAY9_NV i32 #x8659)
(bind-val GL_VERTEX_ATTRIB_ARRAY10_NV i32 #x865A)
(bind-val GL_VERTEX_ATTRIB_ARRAY11_NV i32 #x865B)
(bind-val GL_VERTEX_ATTRIB_ARRAY12_NV i32 #x865C)
(bind-val GL_VERTEX_ATTRIB_ARRAY13_NV i32 #x865D)
(bind-val GL_VERTEX_ATTRIB_ARRAY14_NV i32 #x865E)
(bind-val GL_VERTEX_ATTRIB_ARRAY15_NV i32 #x865F)
(bind-val GL_MAP1_VERTEX_ATTRIB0_4_NV i32 #x8660)
(bind-val GL_MAP1_VERTEX_ATTRIB1_4_NV i32 #x8661)
(bind-val GL_MAP1_VERTEX_ATTRIB2_4_NV i32 #x8662)
(bind-val GL_MAP1_VERTEX_ATTRIB3_4_NV i32 #x8663)
(bind-val GL_MAP1_VERTEX_ATTRIB4_4_NV i32 #x8664)
(bind-val GL_MAP1_VERTEX_ATTRIB5_4_NV i32 #x8665)
(bind-val GL_MAP1_VERTEX_ATTRIB6_4_NV i32 #x8666)
(bind-val GL_MAP1_VERTEX_ATTRIB7_4_NV i32 #x8667)
(bind-val GL_MAP1_VERTEX_ATTRIB8_4_NV i32 #x8668)
(bind-val GL_MAP1_VERTEX_ATTRIB9_4_NV i32 #x8669)
(bind-val GL_MAP1_VERTEX_ATTRIB10_4_NV i32 #x866A)
(bind-val GL_MAP1_VERTEX_ATTRIB11_4_NV i32 #x866B)
(bind-val GL_MAP1_VERTEX_ATTRIB12_4_NV i32 #x866C)
(bind-val GL_MAP1_VERTEX_ATTRIB13_4_NV i32 #x866D)
(bind-val GL_MAP1_VERTEX_ATTRIB14_4_NV i32 #x866E)
(bind-val GL_MAP1_VERTEX_ATTRIB15_4_NV i32 #x866F)
(bind-val GL_MAP2_VERTEX_ATTRIB0_4_NV i32 #x8670)
(bind-val GL_MAP2_VERTEX_ATTRIB1_4_NV i32 #x8671)
(bind-val GL_MAP2_VERTEX_ATTRIB2_4_NV i32 #x8672)
(bind-val GL_MAP2_VERTEX_ATTRIB3_4_NV i32 #x8673)
(bind-val GL_MAP2_VERTEX_ATTRIB4_4_NV i32 #x8674)
(bind-val GL_MAP2_VERTEX_ATTRIB5_4_NV i32 #x8675)
(bind-val GL_MAP2_VERTEX_ATTRIB6_4_NV i32 #x8676)
(bind-val GL_MAP2_VERTEX_ATTRIB7_4_NV i32 #x8677)
(bind-val GL_MAP2_VERTEX_ATTRIB8_4_NV i32 #x8678)
(bind-val GL_MAP2_VERTEX_ATTRIB9_4_NV i32 #x8679)
(bind-val GL_MAP2_VERTEX_ATTRIB10_4_NV i32 #x867A)
(bind-val GL_MAP2_VERTEX_ATTRIB11_4_NV i32 #x867B)
(bind-val GL_MAP2_VERTEX_ATTRIB12_4_NV i32 #x867C)
(bind-val GL_MAP2_VERTEX_ATTRIB13_4_NV i32 #x867D)
(bind-val GL_MAP2_VERTEX_ATTRIB14_4_NV i32 #x867E)
(bind-val GL_MAP2_VERTEX_ATTRIB15_4_NV i32 #x867F)


;; #if GL_SGI_color_matrix
(bind-val GL_COLOR_MATRIX_SGI i32 #x80B1)
(bind-val GL_COLOR_MATRIX_STACK_DEPTH_SGI i32 #x80B2)
(bind-val GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI i32 #x80B3)
(bind-val GL_POST_COLOR_MATRIX_RED_SCALE_SGI i32 #x80B4)
(bind-val GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI i32 #x80B5)
(bind-val GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI i32 #x80B6)
(bind-val GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI i32 #x80B7)
(bind-val GL_POST_COLOR_MATRIX_RED_BIAS_SGI i32 #x80B8)
(bind-val GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI i32 #x80B9)
(bind-val GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI i32 #x80BA)
(bind-val GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI i32 #x80BB)


;; #if GL_SGI_color_table
(bind-val GL_COLOR_TABLE_SGI i32 #x80D0)
(bind-val GL_POST_CONVOLUTION_COLOR_TABLE_SGI i32 #x80D1)
(bind-val GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI i32 #x80D2)
(bind-val GL_PROXY_COLOR_TABLE_SGI i32 #x80D3)
(bind-val GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI i32 #x80D4)
(bind-val GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI i32 #x80D5)
(bind-val GL_COLOR_TABLE_SCALE_SGI i32 #x80D6)
(bind-val GL_COLOR_TABLE_BIAS_SGI i32 #x80D7)
(bind-val GL_COLOR_TABLE_FORMAT_SGI i32 #x80D8)
(bind-val GL_COLOR_TABLE_WIDTH_SGI i32 #x80D9)
(bind-val GL_COLOR_TABLE_RED_SIZE_SGI i32 #x80DA)
(bind-val GL_COLOR_TABLE_GREEN_SIZE_SGI i32 #x80DB)
(bind-val GL_COLOR_TABLE_BLUE_SIZE_SGI i32 #x80DC)
(bind-val GL_COLOR_TABLE_ALPHA_SIZE_SGI i32 #x80DD)
(bind-val GL_COLOR_TABLE_LUMINANCE_SIZE_SGI i32 #x80DE)
(bind-val GL_COLOR_TABLE_INTENSITY_SIZE_SGI i32 #x80DF)


;; #if GL_SGIS_generate_mipmap
(bind-val GL_GENERATE_MIPMAP_SGIS i32 #x8191)
(bind-val GL_GENERATE_MIPMAP_HINT_SGIS i32 #x8192)


;; #if GL_SGIS_point_parameters
(bind-val GL_POINT_SIZE_MIN_SGIS i32 #x8126)
(bind-val GL_POINT_SIZE_MAX_SGIS i32 #x8127)
(bind-val GL_POINT_FADE_THRESHOLD_SIZE_SGIS i32 #x8128)
(bind-val GL_DISTANCE_ATTENUATION_SGIS i32 #x8129)


;; #if GL_SGIS_texture_edge_clamp
(bind-val GL_CLAMP_TO_EDGE_SGIS i32 #x812F)


;; #if GL_SGIS_texture_border_clamp
(bind-val GL_CLAMP_TO_BORDER_SGIS i32 #x812D)


;; #if GL_SGIS_texture_lod
(bind-val GL_TEXTURE_MIN_LOD_SGIS i32 #x813A)
(bind-val GL_TEXTURE_MAX_LOD_SGIS i32 #x813B)
(bind-val GL_TEXTURE_BASE_LEVEL_SGIS i32 #x813C)
(bind-val GL_TEXTURE_MAX_LEVEL_SGIS i32 #x813D)


;; #if GL_SGIX_depth_texture
(bind-val GL_DEPTH_COMPONENT16_SGIX i32 #x81A5)
(bind-val GL_DEPTH_COMPONENT24_SGIX i32 #x81A6)
(bind-val GL_DEPTH_COMPONENT32_SGIX i32 #x81A7)

;; #if GL_ARB_color_buffer_float
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glClampColorARBProcPtr) (GLenum target, GLenum clamp);
;; #else
(bind-lib libGL glClampColorARB [void,GLenum,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_draw_buffers
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glDrawBuffersARBProcPtr) (GLsizei n, const GLenum *bufs);
;; #else
(bind-lib libGL glDrawBuffersARB [void,GLsizei,GLenum*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_draw_elements_base_vertex
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glDrawElementsBaseVertexProcPtr) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint base_vertex);
typedef void (* glDrawRangeElementsBaseVertexProcPtr) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint base_vertex);
typedef void (* glDrawElementsInstancedBaseVertexProcPtr) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint base_vertex);
typedef void (* glMultiDrawElementsBaseVertexProcPtr) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, const GLint *base_vertex);
;; #else
(bind-lib libGL glDrawElementsBaseVertex [void,GLenum,GLsizei,GLenum,GLvoid*,GLint]*)
(bind-lib libGL glDrawRangeElementsBaseVertex [void,GLenum,GLuint,GLuint,GLsizei,GLenum,GLvoid*,GLint]*)
(bind-lib libGL glDrawElementsInstancedBaseVertex [void,GLenum,GLsizei,GLenum,GLvoid*,GLsizei,GLint]*)
(bind-lib libGL glMultiDrawElementsBaseVertex [void,GLenum,GLsizei*,GLenum,GLvoid**,GLsizei,GLint*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_draw_instanced
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glDrawArraysInstancedARBProcPtr) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);
typedef void (* glDrawElementsInstancedARBProcPtr) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);
;; #else
(bind-lib libGL glDrawArraysInstancedARB [void,GLenum,GLint,GLsizei,GLsizei]*)
(bind-lib libGL glDrawElementsInstancedARB [void,GLenum,GLsizei,GLenum,GLvoid*,GLsizei]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_framebuffer_object
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef GLboolean (* glIsRenderbufferProcPtr) (GLuint renderbuffer);
typedef void (* glBindRenderbufferProcPtr) (GLenum target, GLuint renderbuffer);
typedef void (* glDeleteRenderbuffersProcPtr) (GLsizei n, const GLuint *renderbuffers);
typedef void (* glGenRenderbuffersProcPtr) (GLsizei n, GLuint *renderbuffers);
typedef void (* glRenderbufferStorageProcPtr) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* glGetRenderbufferParameterivProcPtr) (GLenum target, GLenum pname, GLint *params);
typedef GLboolean (* glIsFramebufferProcPtr) (GLuint framebuffer);
typedef void (* glBindFramebufferProcPtr) (GLenum target, GLuint framebuffer);
typedef void (* glDeleteFramebuffersProcPtr) (GLsizei n, const GLuint *framebuffers);
typedef void (* glGenFramebuffersProcPtr) (GLsizei n, GLuint *framebuffers);
typedef GLenum (* glCheckFramebufferStatusProcPtr) (GLenum target);
typedef void (* glFramebufferTexture1DProcPtr) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (* glFramebufferTexture2DProcPtr) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (* glFramebufferTexture3DProcPtr) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (* glFramebufferRenderbufferProcPtr) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (* glGetFramebufferAttachmentParameterivProcPtr) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void (* glGenerateMipmapProcPtr) (GLenum target);
typedef void (* glBlitFramebufferProcPtr) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
typedef void (* glRenderbufferStorageMultisampleProcPtr) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* glFramebufferTextureLayerProcPtr) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
;; #else
(bind-lib libGL glIsRenderbuffer [GLboolean,GLuint]*)
(bind-lib libGL glBindRenderbuffer [void,GLenum,GLuint]*)
(bind-lib libGL glDeleteRenderbuffers [void,GLsizei,GLuint*]*)
(bind-lib libGL glGenRenderbuffers [void,GLsizei,GLuint*]*)
(bind-lib libGL glRenderbufferStorage [void,GLenum,GLenum,GLsizei,GLsizei]*)
(bind-lib libGL glGetRenderbufferParameteriv [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glIsFramebuffer [GLboolean,GLuint]*)
(bind-lib libGL glBindFramebuffer [void,GLenum,GLuint]*)
(bind-lib libGL glDeleteFramebuffers [void,GLsizei,GLuint*]*)
(bind-lib libGL glGenFramebuffers [void,GLsizei,GLuint*]*)
(bind-lib libGL glCheckFramebufferStatus [GLenum,GLenum]*)
(bind-lib libGL glFramebufferTexture1D [void,GLenum,GLenum,GLenum,GLuint,GLint]*)
(bind-lib libGL glFramebufferTexture2D [void,GLenum,GLenum,GLenum,GLuint,GLint]*)
(bind-lib libGL glFramebufferTexture3D [void,GLenum,GLenum,GLenum,GLuint,GLint,GLint]*)
(bind-lib libGL glFramebufferRenderbuffer [void,GLenum,GLenum,GLenum,GLuint]*)
(bind-lib libGL glGetFramebufferAttachmentParameteriv [void,GLenum,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGenerateMipmap [void,GLenum]*)
(bind-lib libGL glBlitFramebuffer [void,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLbitfield,GLenum]*)
(bind-lib libGL glRenderbufferStorageMultisample [void,GLenum,GLsizei,GLenum,GLsizei,GLsizei]*)
(bind-lib libGL glFramebufferTextureLayer [void,GLenum,GLenum,GLuint,GLint,GLint]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_instanced_arrays
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glVertexAttribDivisorARBProcPtr) (GLuint index, GLuint divisor);
;; #else
(bind-lib libGL glVertexAttribDivisorARB [void,GLuint,GLuint]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_multisample
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glSampleCoverageARBProcPtr) (GLclampf value, GLboolean invert);
;; #else
(bind-lib libGL glSampleCoverageARB [void,GLclampf,GLboolean]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_multitexture
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glActiveTextureARBProcPtr) (GLenum texture);
typedef void (* glClientActiveTextureARBProcPtr) (GLenum texture);
typedef void (* glMultiTexCoord1dARBProcPtr) (GLenum target, GLdouble s);
typedef void (* glMultiTexCoord1dvARBProcPtr) (GLenum target, const GLdouble *v);
typedef void (* glMultiTexCoord1fARBProcPtr) (GLenum target, GLfloat s);
typedef void (* glMultiTexCoord1fvARBProcPtr) (GLenum target, const GLfloat *v);
typedef void (* glMultiTexCoord1iARBProcPtr) (GLenum target, GLint s);
typedef void (* glMultiTexCoord1ivARBProcPtr) (GLenum target, const GLint *v);
typedef void (* glMultiTexCoord1sARBProcPtr) (GLenum target, GLshort s);
typedef void (* glMultiTexCoord1svARBProcPtr) (GLenum target, const GLshort *v);
typedef void (* glMultiTexCoord2dARBProcPtr) (GLenum target, GLdouble s, GLdouble t);
typedef void (* glMultiTexCoord2dvARBProcPtr) (GLenum target, const GLdouble *v);
typedef void (* glMultiTexCoord2fARBProcPtr) (GLenum target, GLfloat s, GLfloat t);
typedef void (* glMultiTexCoord2fvARBProcPtr) (GLenum target, const GLfloat *v);
typedef void (* glMultiTexCoord2iARBProcPtr) (GLenum target, GLint s, GLint t);
typedef void (* glMultiTexCoord2ivARBProcPtr) (GLenum target, const GLint *v);
typedef void (* glMultiTexCoord2sARBProcPtr) (GLenum target, GLshort s, GLshort t);
typedef void (* glMultiTexCoord2svARBProcPtr) (GLenum target, const GLshort *v);
typedef void (* glMultiTexCoord3dARBProcPtr) (GLenum target, GLdouble s, GLdouble t, GLdouble r);
typedef void (* glMultiTexCoord3dvARBProcPtr) (GLenum target, const GLdouble *v);
typedef void (* glMultiTexCoord3fARBProcPtr) (GLenum target, GLfloat s, GLfloat t, GLfloat r);
typedef void (* glMultiTexCoord3fvARBProcPtr) (GLenum target, const GLfloat *v);
typedef void (* glMultiTexCoord3iARBProcPtr) (GLenum target, GLint s, GLint t, GLint r);
typedef void (* glMultiTexCoord3ivARBProcPtr) (GLenum target, const GLint *v);
typedef void (* glMultiTexCoord3sARBProcPtr) (GLenum target, GLshort s, GLshort t, GLshort r);
typedef void (* glMultiTexCoord3svARBProcPtr) (GLenum target, const GLshort *v);
typedef void (* glMultiTexCoord4dARBProcPtr) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
typedef void (* glMultiTexCoord4dvARBProcPtr) (GLenum target, const GLdouble *v);
typedef void (* glMultiTexCoord4fARBProcPtr) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
typedef void (* glMultiTexCoord4fvARBProcPtr) (GLenum target, const GLfloat *v);
typedef void (* glMultiTexCoord4iARBProcPtr) (GLenum target, GLint s, GLint t, GLint r, GLint q);
typedef void (* glMultiTexCoord4ivARBProcPtr) (GLenum target, const GLint *v);
typedef void (* glMultiTexCoord4sARBProcPtr) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
typedef void (* glMultiTexCoord4svARBProcPtr) (GLenum target, const GLshort *v);
;; #else
(bind-lib libGL glActiveTextureARB [void,GLenum]*)
(bind-lib libGL glClientActiveTextureARB [void,GLenum]*)
(bind-lib libGL glMultiTexCoord1dARB [void,GLenum,GLdouble]*)
(bind-lib libGL glMultiTexCoord1dvARB [void,GLenum,GLdouble*]*)
(bind-lib libGL glMultiTexCoord1fARB [void,GLenum,GLfloat]*)
(bind-lib libGL glMultiTexCoord1fvARB [void,GLenum,GLfloat*]*)
(bind-lib libGL glMultiTexCoord1iARB [void,GLenum,GLint]*)
(bind-lib libGL glMultiTexCoord1ivARB [void,GLenum,GLint*]*)
(bind-lib libGL glMultiTexCoord1sARB [void,GLenum,GLshort]*)
(bind-lib libGL glMultiTexCoord1svARB [void,GLenum,GLshort*]*)
(bind-lib libGL glMultiTexCoord2dARB [void,GLenum,GLdouble,GLdouble]*)
(bind-lib libGL glMultiTexCoord2dvARB [void,GLenum,GLdouble*]*)
(bind-lib libGL glMultiTexCoord2fARB [void,GLenum,GLfloat,GLfloat]*)
(bind-lib libGL glMultiTexCoord2fvARB [void,GLenum,GLfloat*]*)
(bind-lib libGL glMultiTexCoord2iARB [void,GLenum,GLint,GLint]*)
(bind-lib libGL glMultiTexCoord2ivARB [void,GLenum,GLint*]*)
(bind-lib libGL glMultiTexCoord2sARB [void,GLenum,GLshort,GLshort]*)
(bind-lib libGL glMultiTexCoord2svARB [void,GLenum,GLshort*]*)
(bind-lib libGL glMultiTexCoord3dARB [void,GLenum,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glMultiTexCoord3dvARB [void,GLenum,GLdouble*]*)
(bind-lib libGL glMultiTexCoord3fARB [void,GLenum,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glMultiTexCoord3fvARB [void,GLenum,GLfloat*]*)
(bind-lib libGL glMultiTexCoord3iARB [void,GLenum,GLint,GLint,GLint]*)
(bind-lib libGL glMultiTexCoord3ivARB [void,GLenum,GLint*]*)
(bind-lib libGL glMultiTexCoord3sARB [void,GLenum,GLshort,GLshort,GLshort]*)
(bind-lib libGL glMultiTexCoord3svARB [void,GLenum,GLshort*]*)
(bind-lib libGL glMultiTexCoord4dARB [void,GLenum,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glMultiTexCoord4dvARB [void,GLenum,GLdouble*]*)
(bind-lib libGL glMultiTexCoord4fARB [void,GLenum,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glMultiTexCoord4fvARB [void,GLenum,GLfloat*]*)
(bind-lib libGL glMultiTexCoord4iARB [void,GLenum,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glMultiTexCoord4ivARB [void,GLenum,GLint*]*)
(bind-lib libGL glMultiTexCoord4sARB [void,GLenum,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glMultiTexCoord4svARB [void,GLenum,GLshort*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_occlusion_query
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glGenQueriesARBProcPtr) (GLsizei n, GLuint *ids);
typedef void (* glDeleteQueriesARBProcPtr) (GLsizei n, const GLuint *ids);
typedef GLboolean (* glIsQueryARBProcPtr) (GLuint id);
typedef void (* glBeginQueryARBProcPtr) (GLenum target, GLuint id);
typedef void (* glEndQueryARBProcPtr) (GLenum target);
typedef void (* glGetQueryivARBProcPtr) (GLenum target, GLenum pname, GLint *params);
typedef void (* glGetQueryObjectivARBProcPtr) (GLuint id, GLenum pname, GLint *params);
typedef void (* glGetQueryObjectuivARBProcPtr) (GLuint id, GLenum pname, GLuint *params);
;; #else
(bind-lib libGL glGenQueriesARB [void,GLsizei,GLuint*]*)
(bind-lib libGL glDeleteQueriesARB [void,GLsizei,GLuint*]*)
(bind-lib libGL glIsQueryARB [GLboolean,GLuint]*)
(bind-lib libGL glBeginQueryARB [void,GLenum,GLuint]*)
(bind-lib libGL glEndQueryARB [void,GLenum]*)
(bind-lib libGL glGetQueryivARB [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetQueryObjectivARB [void,GLuint,GLenum,GLint*]*)
(bind-lib libGL glGetQueryObjectuivARB [void,GLuint,GLenum,GLuint*]*)
;; #endif
;; #endif

;; #if GL_ARB_point_parameters
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glPointParameterfARBProcPtr) (GLenum pname, GLfloat param);
typedef void (* glPointParameterfvARBProcPtr) (GLenum pname, const GLfloat *params);
;; #else
(bind-lib libGL glPointParameterfARB [void,GLenum,GLfloat]*)
(bind-lib libGL glPointParameterfvARB [void,GLenum,GLfloat*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_provoking_vertex
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glProvokingVertexProcPtr) (GLenum mode);
;; #else
(bind-lib libGL glProvokingVertex [void,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_shader_objects
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glDeleteObjectARBProcPtr) (GLhandleARB obj);
typedef GLhandleARB (* glGetHandleARBProcPtr) (GLenum pname);
typedef void (* glDetachObjectARBProcPtr) (GLhandleARB containerObj, GLhandleARB attachedObj);
typedef GLhandleARB (* glCreateShaderObjectARBProcPtr) (GLenum shaderType);
typedef void (* glShaderSourceARBProcPtr) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* const *string, const GLint *length);
typedef void (* glCompileShaderARBProcPtr) (GLhandleARB shaderObj);
typedef GLhandleARB (* glCreateProgramObjectARBProcPtr) (void);
typedef void (* glAttachObjectARBProcPtr) (GLhandleARB containerObj, GLhandleARB obj);
typedef void (* glLinkProgramARBProcPtr) (GLhandleARB programObj);
typedef void (* glUseProgramObjectARBProcPtr) (GLhandleARB programObj);
typedef void (* glValidateProgramARBProcPtr) (GLhandleARB programObj);
typedef void (* glUniform1fARBProcPtr) (GLint location, GLfloat v0);
typedef void (* glUniform2fARBProcPtr) (GLint location, GLfloat v0, GLfloat v1);
typedef void (* glUniform3fARBProcPtr) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
typedef void (* glUniform4fARBProcPtr) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
typedef void (* glUniform1iARBProcPtr) (GLint location, GLint v0);
typedef void (* glUniform2iARBProcPtr) (GLint location, GLint v0, GLint v1);
typedef void (* glUniform3iARBProcPtr) (GLint location, GLint v0, GLint v1, GLint v2);
typedef void (* glUniform4iARBProcPtr) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
typedef void (* glUniform1fvARBProcPtr) (GLint location, GLsizei count, const GLfloat *value);
typedef void (* glUniform2fvARBProcPtr) (GLint location, GLsizei count, const GLfloat *value);
typedef void (* glUniform3fvARBProcPtr) (GLint location, GLsizei count, const GLfloat *value);
typedef void (* glUniform4fvARBProcPtr) (GLint location, GLsizei count, const GLfloat *value);
typedef void (* glUniform1ivARBProcPtr) (GLint location, GLsizei count, const GLint *value);
typedef void (* glUniform2ivARBProcPtr) (GLint location, GLsizei count, const GLint *value);
typedef void (* glUniform3ivARBProcPtr) (GLint location, GLsizei count, const GLint *value);
typedef void (* glUniform4ivARBProcPtr) (GLint location, GLsizei count, const GLint *value);
typedef void (* glUniformMatrix2fvARBProcPtr) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (* glUniformMatrix3fvARBProcPtr) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (* glUniformMatrix4fvARBProcPtr) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
typedef void (* glGetObjectParameterfvARBProcPtr) (GLhandleARB obj, GLenum pname, GLfloat *params);
typedef void (* glGetObjectParameterivARBProcPtr) (GLhandleARB obj, GLenum pname, GLint *params);
typedef void (* glGetInfoLogARBProcPtr) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
typedef void (* glGetAttachedObjectsARBProcPtr) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
typedef GLint (* glGetUniformLocationARBProcPtr) (GLhandleARB programObj, const GLcharARB *name);
typedef void (* glGetActiveUniformARBProcPtr) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
typedef void (* glGetUniformfvARBProcPtr) (GLhandleARB programObj, GLint location, GLfloat *params);
typedef void (* glGetUniformivARBProcPtr) (GLhandleARB programObj, GLint location, GLint *params);
typedef void (* glGetShaderSourceARBProcPtr) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
;; #else
(bind-lib libGL glDeleteObjectARB [void,GLhandleARB]*)
(bind-lib libGL glGetHandleARB [GLhandleARB,GLenum]*)
(bind-lib libGL glDetachObjectARB [void,GLhandleARB,GLhandleARB]*)
(bind-lib libGL glCreateShaderObjectARB [GLhandleARB,GLenum]*)
(bind-lib libGL glShaderSourceARB [void,GLhandleARB,GLsizei,GLcharARB**,GLint*]*)
(bind-lib libGL glCompileShaderARB [void,GLhandleARB]*)
(bind-lib libGL glCreateProgramObjectARB [GLhandleARB]*)
(bind-lib libGL glAttachObjectARB [void,GLhandleARB,GLhandleARB]*)
(bind-lib libGL glLinkProgramARB [void,GLhandleARB]*)
(bind-lib libGL glUseProgramObjectARB [void,GLhandleARB]*)
(bind-lib libGL glValidateProgramARB [void,GLhandleARB]*)
(bind-lib libGL glUniform1fARB [void,GLint,GLfloat]*)
(bind-lib libGL glUniform2fARB [void,GLint,GLfloat,GLfloat]*)
(bind-lib libGL glUniform3fARB [void,GLint,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glUniform4fARB [void,GLint,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glUniform1iARB [void,GLint,GLint]*)
(bind-lib libGL glUniform2iARB [void,GLint,GLint,GLint]*)
(bind-lib libGL glUniform3iARB [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glUniform4iARB [void,GLint,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glUniform1fvARB [void,GLint,GLsizei,GLfloat*]*)
(bind-lib libGL glUniform2fvARB [void,GLint,GLsizei,GLfloat*]*)
(bind-lib libGL glUniform3fvARB [void,GLint,GLsizei,GLfloat*]*)
(bind-lib libGL glUniform4fvARB [void,GLint,GLsizei,GLfloat*]*)
(bind-lib libGL glUniform1ivARB [void,GLint,GLsizei,GLint*]*)
(bind-lib libGL glUniform2ivARB [void,GLint,GLsizei,GLint*]*)
(bind-lib libGL glUniform3ivARB [void,GLint,GLsizei,GLint*]*)
(bind-lib libGL glUniform4ivARB [void,GLint,GLsizei,GLint*]*)
(bind-lib libGL glUniformMatrix2fvARB [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glUniformMatrix3fvARB [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glUniformMatrix4fvARB [void,GLint,GLsizei,GLboolean,GLfloat*]*)
(bind-lib libGL glGetObjectParameterfvARB [void,GLhandleARB,GLenum,GLfloat*]*)
(bind-lib libGL glGetObjectParameterivARB [void,GLhandleARB,GLenum,GLint*]*)
(bind-lib libGL glGetInfoLogARB [void,GLhandleARB,GLsizei,GLsizei*,GLcharARB*]*)
(bind-lib libGL glGetAttachedObjectsARB [void,GLhandleARB,GLsizei,GLsizei*,GLhandleARB*]*)
(bind-lib libGL glGetUniformLocationARB [GLint,GLhandleARB,GLcharARB*]*)
(bind-lib libGL glGetActiveUniformARB [void,GLhandleARB,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,GLcharARB*]*)
(bind-lib libGL glGetUniformfvARB [void,GLhandleARB,GLint,GLfloat*]*)
(bind-lib libGL glGetUniformivARB [void,GLhandleARB,GLint,GLint*]*)
(bind-lib libGL glGetShaderSourceARB [void,GLhandleARB,GLsizei,GLsizei*,GLcharARB*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_sync
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef GLsync (* glFenceSyncProcPtr) (GLenum condition, GLbitfield flags);
typedef GLboolean (* glIsSyncProcPtr) (GLsync sync);
typedef void (* glDeleteSyncProcPtr) (GLsync sync);
typedef GLenum (* glClientWaitSyncProcPtr) (GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (* glWaitSyncProcPtr)(GLsync sync, GLbitfield flags, GLuint64 timeout);
typedef void (* glGetInteger64vProcPtr) (GLenum pname, GLint64 *params);
typedef void (* glGetSyncivProcPtr) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
;; #else
(bind-lib libGL glFenceSync [GLsync,GLenum,GLbitfield]*)
(bind-lib libGL glIsSync [GLboolean,GLsync]*)
(bind-lib libGL glDeleteSync [void,GLsync]*)
(bind-lib libGL glClientWaitSync [GLenum,GLsync,GLbitfield,GLuint64]*)
(bind-lib libGL glWaitSync [void,GLsync,GLbitfield,GLuint64]*)
(bind-lib libGL glGetInteger64v [void,GLenum,GLint64*]*)
(bind-lib libGL glGetSynciv [void,GLsync,GLenum,GLsizei,GLsizei*,GLint*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_texture_compression
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glCompressedTexImage3DARBProcPtr) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (* glCompressedTexImage2DARBProcPtr) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (* glCompressedTexImage1DARBProcPtr) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);
typedef void (* glCompressedTexSubImage3DARBProcPtr) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (* glCompressedTexSubImage2DARBProcPtr) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (* glCompressedTexSubImage1DARBProcPtr) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);
typedef void (* glGetCompressedTexImageARBProcPtr) (GLenum target, GLint level, GLvoid *data);
;; #else
(bind-lib libGL glCompressedTexImage3DARB [void,GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLsizei,GLvoid*]*)
(bind-lib libGL glCompressedTexImage2DARB [void,GLenum,GLint,GLenum,GLsizei,GLsizei,GLint,GLsizei,GLvoid*]*)
(bind-lib libGL glCompressedTexImage1DARB [void,GLenum,GLint,GLenum,GLsizei,GLint,GLsizei,GLvoid*]*)
(bind-lib libGL glCompressedTexSubImage3DARB [void,GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glCompressedTexSubImage2DARB [void,GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glCompressedTexSubImage1DARB [void,GLenum,GLint,GLint,GLsizei,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glGetCompressedTexImageARB [void,GLenum,GLint,GLvoid*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_transpose_matrix
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glLoadTransposeMatrixfARBProcPtr) (const GLfloat *m);
typedef void (* glLoadTransposeMatrixdARBProcPtr) (const GLdouble *m);
typedef void (* glMultTransposeMatrixfARBProcPtr) (const GLfloat *m);
typedef void (* glMultTransposeMatrixdARBProcPtr) (const GLdouble *m);
;; #else
(bind-lib libGL glLoadTransposeMatrixfARB [void,GLfloat*]*)
(bind-lib libGL glLoadTransposeMatrixdARB [void,GLdouble*]*)
(bind-lib libGL glMultTransposeMatrixfARB [void,GLfloat*]*)
(bind-lib libGL glMultTransposeMatrixdARB [void,GLdouble*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_vertex_blend
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glWeightbvARBProcPtr) (GLint size, const GLbyte *weights);
typedef void (* glWeightsvARBProcPtr) (GLint size, const GLshort *weights);
typedef void (* glWeightivARBProcPtr) (GLint size, const GLint *weights);
typedef void (* glWeightfvARBProcPtr) (GLint size, const GLfloat *weights);
typedef void (* glWeightdvARBProcPtr) (GLint size, const GLdouble *weights);
typedef void (* glWeightubvARBProcPtr) (GLint size, const GLubyte *weights);
typedef void (* glWeightusvARBProcPtr) (GLint size, const GLushort *weights);
typedef void (* glWeightuivARBProcPtr) (GLint size, const GLuint *weights);
typedef void (* glWeightPointerARBProcPtr) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (* glVertexBlendARBProcPtr) (GLint count);
;; #else
(bind-lib libGL glWeightbvARB [void,GLint,GLbyte*]*)
(bind-lib libGL glWeightsvARB [void,GLint,GLshort*]*)
(bind-lib libGL glWeightivARB [void,GLint,GLint*]*)
(bind-lib libGL glWeightfvARB [void,GLint,GLfloat*]*)
(bind-lib libGL glWeightdvARB [void,GLint,GLdouble*]*)
(bind-lib libGL glWeightubvARB [void,GLint,GLubyte*]*)
(bind-lib libGL glWeightusvARB [void,GLint,GLushort*]*)
(bind-lib libGL glWeightuivARB [void,GLint,GLuint*]*)
(bind-lib libGL glWeightPointerARB [void,GLint,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glVertexBlendARB [void,GLint]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_vertex_buffer_object
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBindBufferARBProcPtr) (GLenum target, GLuint buffer);
typedef void (* glDeleteBuffersARBProcPtr) (GLsizei n, const GLuint *buffers);
typedef void (* glGenBuffersARBProcPtr) (GLsizei n, GLuint *buffers);
typedef GLboolean (* glIsBufferARBProcPtr) (GLuint buffer);
typedef void (* glBufferDataARBProcPtr) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);
typedef void (* glBufferSubDataARBProcPtr) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);
typedef void (* glGetBufferSubDataARBProcPtr) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);
typedef GLvoid *(* glMapBufferARBProcPtr) (GLenum target, GLenum access);
typedef GLboolean (* glUnmapBufferARBProcPtr) (GLenum target);
typedef void (* glGetBufferParameterivARBProcPtr) (GLenum target, GLenum pname, GLint *params);
typedef void (* glGetBufferPointervARBProcPtr) (GLenum target, GLenum pname, GLvoid **params);
;; #else
(bind-lib libGL glBindBufferARB [void,GLenum,GLuint]*)
(bind-lib libGL glDeleteBuffersARB [void,GLsizei,GLuint*]*)
(bind-lib libGL glGenBuffersARB [void,GLsizei,GLuint*]*)
(bind-lib libGL glIsBufferARB [GLboolean,GLuint]*)
(bind-lib libGL glBufferDataARB [void,GLenum,GLsizeiptrARB,GLvoid*,GLenum]*)
(bind-lib libGL glBufferSubDataARB [void,GLenum,GLintptrARB,GLsizeiptrARB,GLvoid*]*)
(bind-lib libGL glGetBufferSubDataARB [void,GLenum,GLintptrARB,GLsizeiptrARB,GLvoid*]*)
(bind-lib libGL glMapBufferARB [GLvoid*,GLenum,GLenum]*)
(bind-lib libGL glUnmapBufferARB [GLboolean,GLenum]*)
(bind-lib libGL glGetBufferParameterivARB [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetBufferPointervARB [void,GLenum,GLenum,GLvoid**]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_vertex_program
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBindProgramARBProcPtr) (GLenum target, GLuint program);
typedef void (* glDeleteProgramsARBProcPtr) (GLsizei n, const GLuint *programs);
typedef void (* glGenProgramsARBProcPtr) (GLsizei n, GLuint *programs);
typedef GLboolean (* glIsProgramARBProcPtr) (GLuint program);
typedef void (* glProgramEnvParameter4dARBProcPtr) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* glProgramEnvParameter4dvARBProcPtr) (GLenum target, GLuint index, const GLdouble *params);
typedef void (* glProgramEnvParameter4fARBProcPtr) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* glProgramEnvParameter4fvARBProcPtr) (GLenum target, GLuint index, const GLfloat *params);
typedef void (* glProgramLocalParameter4dARBProcPtr) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* glProgramLocalParameter4dvARBProcPtr) (GLenum target, GLuint index, const GLdouble *params);
typedef void (* glProgramLocalParameter4fARBProcPtr) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* glProgramLocalParameter4fvARBProcPtr) (GLenum target, GLuint index, const GLfloat *params);
;; #if GL_EXT_gpu_program_parameters
typedef void (* glProgramEnvParameters4fvEXTProcPtr) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
typedef void (* glProgramLocalParameters4fvEXTProcPtr) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);
;; #endif
typedef void (* glGetProgramEnvParameterdvARBProcPtr) (GLenum target, GLuint index, GLdouble *params);
typedef void (* glGetProgramEnvParameterfvARBProcPtr) (GLenum target, GLuint index, GLfloat *params);
typedef void (* glGetProgramLocalParameterdvARBProcPtr) (GLenum target, GLuint index, GLdouble *params);
typedef void (* glGetProgramLocalParameterfvARBProcPtr) (GLenum target, GLuint index, GLfloat *params);
typedef void (* glProgramStringARBProcPtr) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);
typedef void (* glGetProgramStringARBProcPtr) (GLenum target, GLenum pname, GLvoid *string);
typedef void (* glGetProgramivARBProcPtr) (GLenum target, GLenum pname, GLint *params);
;; #else
(bind-lib libGL glBindProgramARB [void,GLenum,GLuint]*)
(bind-lib libGL glDeleteProgramsARB [void,GLsizei,GLuint*]*)
(bind-lib libGL glGenProgramsARB [void,GLsizei,GLuint*]*)
(bind-lib libGL glIsProgramARB [GLboolean,GLuint]*)
(bind-lib libGL glProgramEnvParameter4dARB [void,GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glProgramEnvParameter4dvARB [void,GLenum,GLuint,GLdouble*]*)
(bind-lib libGL glProgramEnvParameter4fARB [void,GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glProgramEnvParameter4fvARB [void,GLenum,GLuint,GLfloat*]*)
(bind-lib libGL glProgramLocalParameter4dARB [void,GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glProgramLocalParameter4dvARB [void,GLenum,GLuint,GLdouble*]*)
(bind-lib libGL glProgramLocalParameter4fARB [void,GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glProgramLocalParameter4fvARB [void,GLenum,GLuint,GLfloat*]*)
(bind-lib libGL glGetProgramEnvParameterdvARB [void,GLenum,GLuint,GLdouble*]*)
(bind-lib libGL glGetProgramEnvParameterfvARB [void,GLenum,GLuint,GLfloat*]*)
;; #if GL_EXT_gpu_program_parameters
(bind-lib libGL glProgramEnvParameters4fvEXT [void,GLenum,GLuint,GLsizei,GLfloat*]*)
(bind-lib libGL glProgramLocalParameters4fvEXT [void,GLenum,GLuint,GLsizei,GLfloat*]*)
;; #endif
(bind-lib libGL glGetProgramLocalParameterdvARB [void,GLenum,GLuint,GLdouble*]*)
(bind-lib libGL glGetProgramLocalParameterfvARB [void,GLenum,GLuint,GLfloat*]*)
(bind-lib libGL glProgramStringARB [void,GLenum,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glGetProgramStringARB [void,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetProgramivARB [void,GLenum,GLenum,GLint*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_vertex_shader
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBindAttribLocationARBProcPtr) (GLhandleARB programObj, GLuint index, const GLcharARB *name);
typedef void (* glGetActiveAttribARBProcPtr) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
typedef GLint (* glGetAttribLocationARBProcPtr) (GLhandleARB programObj, const GLcharARB *name);
;; #else
(bind-lib libGL glBindAttribLocationARB [void,GLhandleARB,GLuint,GLcharARB*]*)
(bind-lib libGL glGetActiveAttribARB [void,GLhandleARB,GLuint,GLsizei,GLsizei*,GLint*,GLenum*,GLcharARB*]*)
(bind-lib libGL glGetAttribLocationARB [GLint,GLhandleARB,GLcharARB*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_vertex_shader || GL_ARB_vertex_program
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glVertexAttrib1dARBProcPtr) (GLuint index, GLdouble x);
typedef void (* glVertexAttrib1dvARBProcPtr) (GLuint index, const GLdouble *v);
typedef void (* glVertexAttrib1fARBProcPtr) (GLuint index, GLfloat x);
typedef void (* glVertexAttrib1fvARBProcPtr) (GLuint index, const GLfloat *v);
typedef void (* glVertexAttrib1sARBProcPtr) (GLuint index, GLshort x);
typedef void (* glVertexAttrib1svARBProcPtr) (GLuint index, const GLshort *v);
typedef void (* glVertexAttrib2dARBProcPtr) (GLuint index, GLdouble x, GLdouble y);
typedef void (* glVertexAttrib2dvARBProcPtr) (GLuint index, const GLdouble *v);
typedef void (* glVertexAttrib2fARBProcPtr) (GLuint index, GLfloat x, GLfloat y);
typedef void (* glVertexAttrib2fvARBProcPtr) (GLuint index, const GLfloat *v);
typedef void (* glVertexAttrib2sARBProcPtr) (GLuint index, GLshort x, GLshort y);
typedef void (* glVertexAttrib2svARBProcPtr) (GLuint index, const GLshort *v);
typedef void (* glVertexAttrib3dARBProcPtr) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (* glVertexAttrib3dvARBProcPtr) (GLuint index, const GLdouble *v);
typedef void (* glVertexAttrib3fARBProcPtr) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (* glVertexAttrib3fvARBProcPtr) (GLuint index, const GLfloat *v);
typedef void (* glVertexAttrib3sARBProcPtr) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (* glVertexAttrib3svARBProcPtr) (GLuint index, const GLshort *v);
typedef void (* glVertexAttrib4NbvARBProcPtr) (GLuint index, const GLbyte *v);
typedef void (* glVertexAttrib4NivARBProcPtr) (GLuint index, const GLint *v);
typedef void (* glVertexAttrib4NsvARBProcPtr) (GLuint index, const GLshort *v);
typedef void (* glVertexAttrib4NubARBProcPtr) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (* glVertexAttrib4NubvARBProcPtr) (GLuint index, const GLubyte *v);
typedef void (* glVertexAttrib4NuivARBProcPtr) (GLuint index, const GLuint *v);
typedef void (* glVertexAttrib4NusvARBProcPtr) (GLuint index, const GLushort *v);
typedef void (* glVertexAttrib4bvARBProcPtr) (GLuint index, const GLbyte *v);
typedef void (* glVertexAttrib4dARBProcPtr) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* glVertexAttrib4dvARBProcPtr) (GLuint index, const GLdouble *v);
typedef void (* glVertexAttrib4fARBProcPtr) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* glVertexAttrib4fvARBProcPtr) (GLuint index, const GLfloat *v);
typedef void (* glVertexAttrib4ivARBProcPtr) (GLuint index, const GLint *v);
typedef void (* glVertexAttrib4sARBProcPtr) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (* glVertexAttrib4svARBProcPtr) (GLuint index, const GLshort *v);
typedef void (* glVertexAttrib4ubvARBProcPtr) (GLuint index, const GLubyte *v);
typedef void (* glVertexAttrib4uivARBProcPtr) (GLuint index, const GLuint *v);
typedef void (* glVertexAttrib4usvARBProcPtr) (GLuint index, const GLushort *v);
typedef void (* glVertexAttribPointerARBProcPtr) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);
typedef void (* glDisableVertexAttribArrayARBProcPtr) (GLuint index);
typedef void (* glEnableVertexAttribArrayARBProcPtr) (GLuint index);
typedef void (* glGetVertexAttribPointervARBProcPtr) (GLuint index, GLenum pname, GLvoid **pointer);
typedef void (* glGetVertexAttribdvARBProcPtr) (GLuint index, GLenum pname, GLdouble *params);
typedef void (* glGetVertexAttribfvARBProcPtr) (GLuint index, GLenum pname, GLfloat *params);
typedef void (* glGetVertexAttribivARBProcPtr) (GLuint index, GLenum pname, GLint *params);
;; #else
(bind-lib libGL glVertexAttrib1dARB [void,GLuint,GLdouble]*)
(bind-lib libGL glVertexAttrib1dvARB [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib1fARB [void,GLuint,GLfloat]*)
(bind-lib libGL glVertexAttrib1fvARB [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib1sARB [void,GLuint,GLshort]*)
(bind-lib libGL glVertexAttrib1svARB [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib2dARB [void,GLuint,GLdouble,GLdouble]*)
(bind-lib libGL glVertexAttrib2dvARB [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib2fARB [void,GLuint,GLfloat,GLfloat]*)
(bind-lib libGL glVertexAttrib2fvARB [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib2sARB [void,GLuint,GLshort,GLshort]*)
(bind-lib libGL glVertexAttrib2svARB [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib3dARB [void,GLuint,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glVertexAttrib3dvARB [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib3fARB [void,GLuint,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertexAttrib3fvARB [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib3sARB [void,GLuint,GLshort,GLshort,GLshort]*)
(bind-lib libGL glVertexAttrib3svARB [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib4NbvARB [void,GLuint,GLbyte*]*)
(bind-lib libGL glVertexAttrib4NivARB [void,GLuint,GLint*]*)
(bind-lib libGL glVertexAttrib4NsvARB [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib4NubARB [void,GLuint,GLubyte,GLubyte,GLubyte,GLubyte]*)
(bind-lib libGL glVertexAttrib4NubvARB [void,GLuint,GLubyte*]*)
(bind-lib libGL glVertexAttrib4NuivARB [void,GLuint,GLuint*]*)
(bind-lib libGL glVertexAttrib4NusvARB [void,GLuint,GLushort*]*)
(bind-lib libGL glVertexAttrib4bvARB [void,GLuint,GLbyte*]*)
(bind-lib libGL glVertexAttrib4dARB [void,GLuint,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glVertexAttrib4dvARB [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib4fARB [void,GLuint,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertexAttrib4fvARB [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib4ivARB [void,GLuint,GLint*]*)
(bind-lib libGL glVertexAttrib4sARB [void,GLuint,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glVertexAttrib4svARB [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib4ubvARB [void,GLuint,GLubyte*]*)
(bind-lib libGL glVertexAttrib4uivARB [void,GLuint,GLuint*]*)
(bind-lib libGL glVertexAttrib4usvARB [void,GLuint,GLushort*]*)
(bind-lib libGL glVertexAttribPointerARB [void,GLuint,GLint,GLenum,GLboolean,GLsizei,GLvoid*]*)
(bind-lib libGL glDisableVertexAttribArrayARB [void,GLuint]*)
(bind-lib libGL glEnableVertexAttribArrayARB [void,GLuint]*)
(bind-lib libGL glGetVertexAttribPointervARB [void,GLuint,GLenum,GLvoid**]*)
(bind-lib libGL glGetVertexAttribdvARB [void,GLuint,GLenum,GLdouble*]*)
(bind-lib libGL glGetVertexAttribfvARB [void,GLuint,GLenum,GLfloat*]*)
(bind-lib libGL glGetVertexAttribivARB [void,GLuint,GLenum,GLint*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ARB_window_pos
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glWindowPos2dARBProcPtr) (GLdouble x, GLdouble y);
typedef void (* glWindowPos2dvARBProcPtr) (const GLdouble *p);
typedef void (* glWindowPos2fARBProcPtr) (GLfloat x, GLfloat y);
typedef void (* glWindowPos2fvARBProcPtr) (const GLfloat *p);
typedef void (* glWindowPos2iARBProcPtr) (GLint x, GLint y);
typedef void (* glWindowPos2ivARBProcPtr) (const GLint *p);
typedef void (* glWindowPos2sARBProcPtr) (GLshort x, GLshort y);
typedef void (* glWindowPos2svARBProcPtr) (const GLshort *p);
typedef void (* glWindowPos3dARBProcPtr) (GLdouble x, GLdouble y, GLdouble z);
typedef void (* glWindowPos3dvARBProcPtr) (const GLdouble *p);
typedef void (* glWindowPos3fARBProcPtr) (GLfloat x, GLfloat y, GLfloat z);
typedef void (* glWindowPos3fvARBProcPtr) (const GLfloat *p);
typedef void (* glWindowPos3iARBProcPtr) (GLint x, GLint y, GLint z);
typedef void (* glWindowPos3ivARBProcPtr) (const GLint *p);
typedef void (* glWindowPos3sARBProcPtr) (GLshort x, GLshort y, GLshort z);
typedef void (* glWindowPos3svARBProcPtr) (const GLshort *p);
;; #else
(bind-lib libGL glWindowPos2dARB [void,GLdouble,GLdouble]*)
(bind-lib libGL glWindowPos2dvARB [void,GLdouble*]*)
(bind-lib libGL glWindowPos2fARB [void,GLfloat,GLfloat]*)
(bind-lib libGL glWindowPos2fvARB [void,GLfloat*]*)
(bind-lib libGL glWindowPos2iARB [void,GLint,GLint]*)
(bind-lib libGL glWindowPos2ivARB [void,GLint*]*)
(bind-lib libGL glWindowPos2sARB [void,GLshort,GLshort]*)
(bind-lib libGL glWindowPos2svARB [void,GLshort*]*)
(bind-lib libGL glWindowPos3dARB [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glWindowPos3dvARB [void,GLdouble*]*)
(bind-lib libGL glWindowPos3fARB [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glWindowPos3fvARB [void,GLfloat*]*)
(bind-lib libGL glWindowPos3iARB [void,GLint,GLint,GLint]*)
(bind-lib libGL glWindowPos3ivARB [void,GLint*]*)
(bind-lib libGL glWindowPos3sARB [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glWindowPos3svARB [void,GLshort*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_bindable_uniform
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (*glUniformBufferEXTProcPtr) (GLuint program, GLint location, GLuint buffer);
typedef GLint (*glGetUniformBufferSizeEXTProcPtr) (GLuint program, GLint location);
typedef GLintptr (*glGetUniformOffsetEXTProcPtr) (GLuint program, GLint location);
;; #else
(bind-lib libGL glUniformBufferEXT [void,GLuint,GLint,GLuint]*)
(bind-lib libGL glGetUniformBufferSizeEXT [GLint,GLuint,GLint]*)
(bind-lib libGL glGetUniformOffsetEXT [GLintptr,GLuint,GLint]*)
;; #endif
;; #endif /* GL_EXT_bindable_uniform */

;; #if GL_EXT_blend_color
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBlendColorEXTProcPtr) (GLclampf red, GLclampf blue, GLclampf green, GLclampf alpha);
;; #else
(bind-lib libGL glBlendColorEXT [void,GLclampf,GLclampf,GLclampf,GLclampf]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_blend_equation_separate
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBlendEquationSeparateEXTProcPtr) (GLenum modeRGB, GLenum modeAlpha);
;; #else
(bind-lib libGL glBlendEquationSeparateEXT [void,GLenum,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_blend_func_separate
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBlendFuncSeparateEXTProcPtr) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
;; #else
(bind-lib libGL glBlendFuncSeparateEXT [void,GLenum,GLenum,GLenum,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_blend_minmax
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBlendEquationEXTProcPtr) (GLenum mode);
;; #else
(bind-lib libGL glBlendEquationEXT [void,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_color_subtable
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glColorSubTableEXTProcPtr) (GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
typedef void (* glCopyColorSubTableEXTProcPtr) (GLenum, GLsizei, GLint, GLint, GLsizei);
;; #else
(bind-lib libGL glColorSubTableEXT [void,GLenum,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glCopyColorSubTableEXT [void,GLenum,GLsizei,GLint,GLint,GLsizei]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_compiled_vertex_array
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glLockArraysEXTProcPtr) (GLint first, GLsizei count);
typedef void (* glUnlockArraysEXTProcPtr) (void);
;; #else
(bind-lib libGL glLockArraysEXT [void,GLint,GLsizei]*)
(bind-lib libGL glUnlockArraysEXT [void]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_convolution
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glConvolutionFilter1DEXTProcPtr) (GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid *);
typedef void (* glConvolutionFilter2DEXTProcPtr) (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
typedef void (* glConvolutionParameterfEXTProcPtr) (GLenum, GLenum, GLfloat);
typedef void (* glConvolutionParameterfvEXTProcPtr) (GLenum, GLenum, const GLfloat *);
typedef void (* glConvolutionParameteriEXTProcPtr) (GLenum, GLenum, GLint);
typedef void (* glConvolutionParameterivEXTProcPtr) (GLenum, GLenum, const GLint *);
typedef void (* glCopyConvolutionFilter1DEXTProcPtr) (GLenum, GLenum, GLint, GLint, GLsizei);
typedef void (* glCopyConvolutionFilter2DEXTProcPtr) (GLenum, GLenum, GLint, GLint, GLsizei, GLsizei);
typedef void (* glGetConvolutionFilterEXTProcPtr) (GLenum, GLenum, GLenum, GLvoid *);
typedef void (* glGetConvolutionParameterfvEXTProcPtr) (GLenum, GLenum, GLfloat *);
typedef void (* glGetConvolutionParameterivEXTProcPtr) (GLenum, GLenum, GLint *);
typedef void (* glGetSeparableFilterEXTProcPtr) (GLenum, GLenum, GLenum, GLvoid *, GLvoid *, GLvoid *);
typedef void (* glSeparableFilter2DEXTProcPtr) (GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *, const GLvoid *);
;; #else
(bind-lib libGL glConvolutionFilter1DEXT [void,GLenum,GLenum,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glConvolutionFilter2DEXT [void,GLenum,GLenum,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glConvolutionParameterfEXT [void,GLenum,GLenum,GLfloat]*)
(bind-lib libGL glConvolutionParameterfvEXT [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glConvolutionParameteriEXT [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glConvolutionParameterivEXT [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glCopyConvolutionFilter1DEXT [void,GLenum,GLenum,GLint,GLint,GLsizei]*)
(bind-lib libGL glCopyConvolutionFilter2DEXT [void,GLenum,GLenum,GLint,GLint,GLsizei,GLsizei]*)
(bind-lib libGL glGetConvolutionFilterEXT [void,GLenum,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetConvolutionParameterfvEXT [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetConvolutionParameterivEXT [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetSeparableFilterEXT [void,GLenum,GLenum,GLenum,GLvoid*,GLvoid*,GLvoid*]*)
(bind-lib libGL glSeparableFilter2DEXT [void,GLenum,GLenum,GLsizei,GLsizei,GLenum,GLenum,GLvoid*,GLvoid*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_copy_texture
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glCopyTexImage1DEXTProcPtr) (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint);
typedef void (* glCopyTexImage2DEXTProcPtr) (GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint);
typedef void (* glCopyTexSubImage1DEXTProcPtr) (GLenum, GLint, GLint, GLint, GLint, GLsizei);
typedef void (* glCopyTexSubImage2DEXTProcPtr) (GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
typedef void (* glCopyTexSubImage3DEXTProcPtr) (GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei);
;; #else
(bind-lib libGL glCopyTexImage1DEXT [void,GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLint]*)
(bind-lib libGL glCopyTexImage2DEXT [void,GLenum,GLint,GLenum,GLint,GLint,GLsizei,GLsizei,GLint]*)
(bind-lib libGL glCopyTexSubImage1DEXT [void,GLenum,GLint,GLint,GLint,GLint,GLsizei]*)
(bind-lib libGL glCopyTexSubImage2DEXT [void,GLenum,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei]*)
(bind-lib libGL glCopyTexSubImage3DEXT [void,GLenum,GLint,GLint,GLint,GLint,GLint,GLint,GLsizei,GLsizei]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_debug_label
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glLabelObjectEXTProcPtr) (GLenum type, GLuint object, GLsizei length, const GLchar *label);
typedef void (* glGetObjectLabelEXTProcPtr) (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);
;; #else
(bind-lib libGL glLabelObjectEXT [void,GLenum,GLuint,GLsizei,GLchar*]*)
(bind-lib libGL glGetObjectLabelEXT [void,GLenum,GLuint,GLsizei,GLsizei*,GLchar*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_debug_marker
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glInsertEventMarkerEXTProcPtr) (GLsizei length, const char *marker);
typedef void (* glPushGroupMarkerEXTProcPtr) (GLsizei length, const char *marker);
typedef void (* glPopGroupMarkerEXTProcPtr) (void);
;; #else
(bind-lib libGL glInsertEventMarkerEXT [void,GLsizei,char*]*)
(bind-lib libGL glPushGroupMarkerEXT [void,GLsizei,char*]*)
(bind-lib libGL glPopGroupMarkerEXT [void]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_depth_bounds_test
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glDepthBoundsEXTProcPtr) (GLclampd zmin, GLclampd zmax);
;; #else
(bind-lib libGL glDepthBoundsEXT [void,GLclampd,GLclampd]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_draw_buffers2
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glColorMaskIndexedEXTProcPtr) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
typedef void (* glEnableIndexedEXTProcPtr) (GLenum target, GLuint index);
typedef void (* glDisableIndexedEXTProcPtr) (GLenum target, GLuint index);
typedef GLboolean (* glIsEnabledIndexedEXTProcPtr) (GLenum target, GLuint index);
;; #else
(bind-lib libGL glColorMaskIndexedEXT [void,GLuint,GLboolean,GLboolean,GLboolean,GLboolean]*)
(bind-lib libGL glEnableIndexedEXT [void,GLenum,GLuint]*)
(bind-lib libGL glDisableIndexedEXT [void,GLenum,GLuint]*)
(bind-lib libGL glIsEnabledIndexedEXT [GLboolean,GLenum,GLuint]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_draw_range_elements
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glDrawRangeElementsEXTProcPtr) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);
;; #else
(bind-lib libGL glDrawRangeElementsEXT [void,GLenum,GLuint,GLuint,GLsizei,GLenum,GLvoid*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_fog_coord
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glFogCoordfEXTProcPtr) (GLfloat coord);
typedef void (* glFogCoordfvEXTProcPtr) (const GLfloat *coord);
typedef void (* glFogCoorddEXTProcPtr) (GLdouble coord);
typedef void (* glFogCoorddvEXTProcPtr) (const GLdouble *coord);
typedef void (* glFogCoordPointerEXTProcPtr) (GLenum type, GLsizei stride, const GLvoid *pointer);
;; #else
(bind-lib libGL glFogCoordfEXT [void,GLfloat]*)
(bind-lib libGL glFogCoordfvEXT [void,GLfloat*]*)
(bind-lib libGL glFogCoorddEXT [void,GLdouble]*)
(bind-lib libGL glFogCoorddvEXT [void,GLdouble*]*)
(bind-lib libGL glFogCoordPointerEXT [void,GLenum,GLsizei,GLvoid*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_framebuffer_blit
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBlitFramebufferEXTProcPtr) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
;; #else
(bind-lib libGL glBlitFramebufferEXT [void,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLint,GLbitfield,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_framebuffer_multisample
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glRenderbufferStorageMultisampleEXTProcPtr) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
;; #else
(bind-lib libGL glRenderbufferStorageMultisampleEXT [void,GLenum,GLsizei,GLenum,GLsizei,GLsizei]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_framebuffer_object
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef GLboolean (* glIsRenderbufferEXTProcPtr) (GLuint renderbuffer);
typedef void (* glBindRenderbufferEXTProcPtr) (GLenum target, GLuint renderbuffer);
typedef void (* glDeleteRenderbuffersEXTProcPtr) (GLsizei n, const GLuint *renderbuffers);
typedef void (* glGenRenderbuffersEXTProcPtr) (GLsizei n, GLuint *renderbuffers);
typedef void (* glRenderbufferStorageEXTProcPtr) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
typedef void (* glGetRenderbufferParameterivEXTProcPtr) (GLenum target, GLenum pname, GLint *params);
typedef GLboolean (* glIsFramebufferEXTProcPtr) (GLuint framebuffer);
typedef void (* glBindFramebufferEXTProcPtr) (GLenum target, GLuint framebuffer);
typedef void (* glDeleteFramebuffersEXTProcPtr) (GLsizei n, const GLuint *framebuffers);
typedef void (* glGenFramebuffersEXTProcPtr) (GLsizei n, GLuint *framebuffers);
typedef GLenum (* glCheckFramebufferStatusEXTProcPtr) (GLenum target);
typedef void (* glFramebufferTexture1DEXTProcPtr) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (* glFramebufferTexture2DEXTProcPtr) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
typedef void (* glFramebufferTexture3DEXTProcPtr) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
typedef void (* glFramebufferRenderbufferEXTProcPtr) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
typedef void (* glGetFramebufferAttachmentParameterivEXTProcPtr) (GLenum target, GLenum attachment, GLenum pname, GLint *params);
typedef void (* glGenerateMipmapEXTProcPtr) (GLenum target);
;; #else
(bind-lib libGL glIsRenderbufferEXT [GLboolean,GLuint]*)
(bind-lib libGL glBindRenderbufferEXT [void,GLenum,GLuint]*)
(bind-lib libGL glDeleteRenderbuffersEXT [void,GLsizei,GLuint*]*)
(bind-lib libGL glGenRenderbuffersEXT [void,GLsizei,GLuint*]*)
(bind-lib libGL glRenderbufferStorageEXT [void,GLenum,GLenum,GLsizei,GLsizei]*)
(bind-lib libGL glGetRenderbufferParameterivEXT [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glIsFramebufferEXT [GLboolean,GLuint]*)
(bind-lib libGL glBindFramebufferEXT [void,GLenum,GLuint]*)
(bind-lib libGL glDeleteFramebuffersEXT [void,GLsizei,GLuint*]*)
(bind-lib libGL glGenFramebuffersEXT [void,GLsizei,GLuint*]*)
(bind-lib libGL glCheckFramebufferStatusEXT [GLenum,GLenum]*)
(bind-lib libGL glFramebufferTexture1DEXT [void,GLenum,GLenum,GLenum,GLuint,GLint]*)
(bind-lib libGL glFramebufferTexture2DEXT [void,GLenum,GLenum,GLenum,GLuint,GLint]*)
(bind-lib libGL glFramebufferTexture3DEXT [void,GLenum,GLenum,GLenum,GLuint,GLint,GLint]*)
(bind-lib libGL glFramebufferRenderbufferEXT [void,GLenum,GLenum,GLenum,GLuint]*)
(bind-lib libGL glGetFramebufferAttachmentParameterivEXT [void,GLenum,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGenerateMipmapEXT [void,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_geometry_shader4
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glProgramParameteriEXTProcPtr) (GLuint program, GLenum pname, GLint value);
typedef void (* glFramebufferTextureEXTProcPtr) (GLenum target, GLenum attachment, GLuint texture, GLint level);
typedef void (* glFramebufferTextureFaceEXTProcPtr) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
;; #else
(bind-lib libGL glProgramParameteriEXT [void,GLuint,GLenum,GLint]*)
(bind-lib libGL glFramebufferTextureEXT [void,GLenum,GLenum,GLuint,GLint]*)
(bind-lib libGL glFramebufferTextureFaceEXT [void,GLenum,GLenum,GLuint,GLint,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_geometry_shader4 || GL_EXT_texture_array
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glFramebufferTextureLayerEXTProcPtr) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
;; #else
(bind-lib libGL glFramebufferTextureLayerEXT [void,GLenum,GLenum,GLuint,GLint,GLint]*)
;; #endif
;; #endif

;; #if GL_EXT_gpu_shader4
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (*glVertexAttribI1iEXTProcPtr) (GLuint index, GLint x);
typedef void (*glVertexAttribI2iEXTProcPtr) (GLuint index, GLint x, GLint y);
typedef void (*glVertexAttribI3iEXTProcPtr) (GLuint index, GLint x, GLint y, GLint z);
typedef void (*glVertexAttribI4iEXTProcPtr) (GLuint index, GLint x, GLint y, GLint z, GLint w);
typedef void (*glVertexAttribI1uiEXTProcPtr) (GLuint index, GLuint x);
typedef void (*glVertexAttribI2uiEXTProcPtr) (GLuint index, GLuint x, GLuint y);
typedef void (*glVertexAttribI3uiEXTProcPtr) (GLuint index, GLuint x, GLuint y, GLuint z);
typedef void (*glVertexAttribI4uiEXTProcPtr) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
typedef void (*glVertexAttribI1ivEXTProcPtr) (GLuint index, const GLint *v);
typedef void (*glVertexAttribI2ivEXTProcPtr) (GLuint index, const GLint *v);
typedef void (*glVertexAttribI3ivEXTProcPtr) (GLuint index, const GLint *v);
typedef void (*glVertexAttribI4ivEXTProcPtr) (GLuint index, const GLint *v);
typedef void (*glVertexAttribI1uivEXTProcPtr) (GLuint index, const GLuint *v);
typedef void (*glVertexAttribI2uivEXTProcPtr) (GLuint index, const GLuint *v);
typedef void (*glVertexAttribI3uivEXTProcPtr) (GLuint index, const GLuint *v);
typedef void (*glVertexAttribI4uivEXTProcPtr) (GLuint index, const GLuint *v);
typedef void (*glVertexAttribI4bvEXTProcPtr) (GLuint index, const GLbyte *v);
typedef void (*glVertexAttribI4svEXTProcPtr) (GLuint index, const GLshort *v);
typedef void (*glVertexAttribI4ubvEXTProcPtr) (GLuint index, const GLubyte *v);
typedef void (*glVertexAttribI4usvEXTProcPtr) (GLuint index, const GLushort *v);
typedef void (*glVertexAttribIPointerEXTProcPtr) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (*glGetVertexAttribIivEXTProcPtr) (GLuint index, GLenum pname, GLint *params);
typedef void (*glGetVertexAttribIuivEXTProcPtr) (GLuint index, GLenum pname, GLuint *params);
typedef void (*glUniform1uiEXTProcPtr) (GLint location, GLuint v0);
typedef void (*glUniform2uiEXTProcPtr) (GLint location, GLuint v0, GLuint v1);
typedef void (*glUniform3uiEXTProcPtr) (GLint location, GLuint v0, GLuint v1, GLuint v2);
typedef void (*glUniform4uiEXTProcPtr) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
typedef void (*glUniform1uivEXTProcPtr) (GLint location, GLsizei count, const GLuint *value);
typedef void (*glUniform2uivEXTProcPtr) (GLint location, GLsizei count, const GLuint *value);
typedef void (*glUniform3uivEXTProcPtr) (GLint location, GLsizei count, const GLuint *value);
typedef void (*glUniform4uivEXTProcPtr) (GLint location, GLsizei count, const GLuint *value);
typedef void (*glGetUniformuivEXTProcPtr) (GLuint program, GLint location, GLuint *params);
typedef void (*glBindFragDataLocationEXTProcPtr) (GLuint program, GLuint colorNumber, const GLchar *name);
typedef GLint (*glGetFragDataLocationEXTProcPtr) (GLuint program, const GLchar *name);
;; #else
(bind-lib libGL glVertexAttribI1iEXT [void,GLuint,GLint]*)
(bind-lib libGL glVertexAttribI2iEXT [void,GLuint,GLint,GLint]*)
(bind-lib libGL glVertexAttribI3iEXT [void,GLuint,GLint,GLint,GLint]*)
(bind-lib libGL glVertexAttribI4iEXT [void,GLuint,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glVertexAttribI1uiEXT [void,GLuint,GLuint]*)
(bind-lib libGL glVertexAttribI2uiEXT [void,GLuint,GLuint,GLuint]*)
(bind-lib libGL glVertexAttribI3uiEXT [void,GLuint,GLuint,GLuint,GLuint]*)
(bind-lib libGL glVertexAttribI4uiEXT [void,GLuint,GLuint,GLuint,GLuint,GLuint]*)
(bind-lib libGL glVertexAttribI1ivEXT [void,GLuint,GLint*]*)
(bind-lib libGL glVertexAttribI2ivEXT [void,GLuint,GLint*]*)
(bind-lib libGL glVertexAttribI3ivEXT [void,GLuint,GLint*]*)
(bind-lib libGL glVertexAttribI4ivEXT [void,GLuint,GLint*]*)
(bind-lib libGL glVertexAttribI1uivEXT [void,GLuint,GLuint*]*)
(bind-lib libGL glVertexAttribI2uivEXT [void,GLuint,GLuint*]*)
(bind-lib libGL glVertexAttribI3uivEXT [void,GLuint,GLuint*]*)
(bind-lib libGL glVertexAttribI4uivEXT [void,GLuint,GLuint*]*)
(bind-lib libGL glVertexAttribI4bvEXT [void,GLuint,GLbyte*]*)
(bind-lib libGL glVertexAttribI4svEXT [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttribI4ubvEXT [void,GLuint,GLubyte*]*)
(bind-lib libGL glVertexAttribI4usvEXT [void,GLuint,GLushort*]*)
(bind-lib libGL glVertexAttribIPointerEXT [void,GLuint,GLint,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glGetVertexAttribIivEXT [void,GLuint,GLenum,GLint*]*)
(bind-lib libGL glGetVertexAttribIuivEXT [void,GLuint,GLenum,GLuint*]*)
(bind-lib libGL glUniform1uiEXT [void,GLint,GLuint]*)
(bind-lib libGL glUniform2uiEXT [void,GLint,GLuint,GLuint]*)
(bind-lib libGL glUniform3uiEXT [void,GLint,GLuint,GLuint,GLuint]*)
(bind-lib libGL glUniform4uiEXT [void,GLint,GLuint,GLuint,GLuint,GLuint]*)
(bind-lib libGL glUniform1uivEXT [void,GLint,GLsizei,GLuint*]*)
(bind-lib libGL glUniform2uivEXT [void,GLint,GLsizei,GLuint*]*)
(bind-lib libGL glUniform3uivEXT [void,GLint,GLsizei,GLuint*]*)
(bind-lib libGL glUniform4uivEXT [void,GLint,GLsizei,GLuint*]*)
(bind-lib libGL glGetUniformuivEXT [void,GLuint,GLint,GLuint*]*)
(bind-lib libGL glBindFragDataLocationEXT [void,GLuint,GLuint,GLchar*]*)
(bind-lib libGL glGetFragDataLocationEXT [GLint,GLuint,GLchar*]*)
;; #endif
;; #endif /* GL_EXT_gpu_shader4 */

;; #if GL_EXT_histogram
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glGetHistogramEXTProcPtr) (GLenum, GLboolean, GLenum, GLenum, GLvoid *);
typedef void (* glGetHistogramParameterfvEXTProcPtr) (GLenum, GLenum, GLfloat *);
typedef void (* glGetHistogramParameterivEXTProcPtr) (GLenum, GLenum, GLint *);
typedef void (* glGetMinmaxEXTProcPtr) (GLenum, GLboolean, GLenum, GLenum, GLvoid *);
typedef void (* glGetMinmaxParameterfvEXTProcPtr) (GLenum, GLenum, GLfloat *);
typedef void (* glGetMinmaxParameterivEXTProcPtr) (GLenum, GLenum, GLint *);
typedef void (* glHistogramEXTProcPtr) (GLenum, GLsizei, GLenum, GLboolean);
typedef void (* glMinmaxEXTProcPtr) (GLenum, GLenum, GLboolean);
typedef void (* glResetHistogramEXTProcPtr) (GLenum);
typedef void (* glResetMinmaxEXTProcPtr) (GLenum);
;; #else
(bind-lib libGL glGetHistogramEXT [void,GLenum,GLboolean,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetHistogramParameterfvEXT [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetHistogramParameterivEXT [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetMinmaxEXT [void,GLenum,GLboolean,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetMinmaxParameterfvEXT [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetMinmaxParameterivEXT [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glHistogramEXT [void,GLenum,GLsizei,GLenum,GLboolean]*)
(bind-lib libGL glMinmaxEXT [void,GLenum,GLenum,GLboolean]*)
(bind-lib libGL glResetHistogramEXT [void,GLenum]*)
(bind-lib libGL glResetMinmaxEXT [void,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_multi_draw_arrays
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glMultiDrawArraysEXTProcPtr) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
typedef void (* glMultiDrawElementsEXTProcPtr) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount);
;; #else
(bind-lib libGL glMultiDrawArraysEXT [void,GLenum,GLint*,GLsizei*,GLsizei]*)
(bind-lib libGL glMultiDrawElementsEXT [void,GLenum,GLsizei*,GLenum,GLvoid**,GLsizei]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_paletted_texture
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glColorTableEXTProcPtr) (GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid *);
typedef void (* glColorSubTableEXTProcPtr) (GLenum, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
typedef void (* glGetColorTableEXTProcPtr) (GLenum, GLenum, GLenum, GLvoid *);
typedef void (* glGetColorTableParameterivEXTProcPtr) (GLenum, GLenum, GLint *);
typedef void (* glGetColorTableParameterfvEXTProcPtr) (GLenum, GLenum, GLfloat *);
;; #else
(bind-lib libGL glColorTableEXT [void,GLenum,GLenum,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glColorSubTableEXT [void,GLenum,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetColorTableEXT [void,GLenum,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetColorTableParameterivEXT [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetColorTableParameterfvEXT [void,GLenum,GLenum,GLfloat*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_polygon_offset
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glPolygonOffsetEXTProcPtr) (GLfloat factor, GLfloat bias);
;; #else
(bind-lib libGL glPolygonOffsetEXT [void,GLfloat,GLfloat]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_provoking_vertex
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glProvokingVertexEXTProcPtr) (GLenum mode);
;; #else
(bind-lib libGL glProvokingVertexEXT [void,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_secondary_color
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glSecondaryColor3bEXTProcPtr) (GLbyte red, GLbyte green, GLbyte blue);
typedef void (* glSecondaryColor3bvEXTProcPtr) (const GLbyte *v);
typedef void (* glSecondaryColor3dEXTProcPtr) (GLdouble red, GLdouble green, GLdouble blue);
typedef void (* glSecondaryColor3dvEXTProcPtr) (const GLdouble *v);
typedef void (* glSecondaryColor3fEXTProcPtr) (GLfloat red, GLfloat green, GLfloat blue);
typedef void (* glSecondaryColor3fvEXTProcPtr) (const GLfloat *v);
typedef void (* glSecondaryColor3iEXTProcPtr) (GLint red, GLint green, GLint blue);
typedef void (* glSecondaryColor3ivEXTProcPtr) (const GLint *v);
typedef void (* glSecondaryColor3sEXTProcPtr) (GLshort red, GLshort green, GLshort blue);
typedef void (* glSecondaryColor3svEXTProcPtr) (const GLshort *v);
typedef void (* glSecondaryColor3ubEXTProcPtr) (GLubyte red, GLubyte green, GLubyte blue);
typedef void (* glSecondaryColor3ubvEXTProcPtr) (const GLubyte *v);
typedef void (* glSecondaryColor3uiEXTProcPtr) (GLuint red, GLuint green, GLuint blue);
typedef void (* glSecondaryColor3uivEXTProcPtr) (const GLuint *v);
typedef void (* glSecondaryColor3usEXTProcPtr) (GLushort red, GLushort green, GLushort blue);
typedef void (* glSecondaryColor3usvEXTProcPtr) (const GLushort *v);
typedef void (* glSecondaryColorPointerEXTProcPtr) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
;; #else
(bind-lib libGL glSecondaryColor3bEXT [void,GLbyte,GLbyte,GLbyte]*)
(bind-lib libGL glSecondaryColor3bvEXT [void,GLbyte*]*)
(bind-lib libGL glSecondaryColor3dEXT [void,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glSecondaryColor3dvEXT [void,GLdouble*]*)
(bind-lib libGL glSecondaryColor3fEXT [void,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glSecondaryColor3fvEXT [void,GLfloat*]*)
(bind-lib libGL glSecondaryColor3iEXT [void,GLint,GLint,GLint]*)
(bind-lib libGL glSecondaryColor3ivEXT [void,GLint*]*)
(bind-lib libGL glSecondaryColor3sEXT [void,GLshort,GLshort,GLshort]*)
(bind-lib libGL glSecondaryColor3svEXT [void,GLshort*]*)
(bind-lib libGL glSecondaryColor3ubEXT [void,GLubyte,GLubyte,GLubyte]*)
(bind-lib libGL glSecondaryColor3ubvEXT [void,GLubyte*]*)
(bind-lib libGL glSecondaryColor3uiEXT [void,GLuint,GLuint,GLuint]*)
(bind-lib libGL glSecondaryColor3uivEXT [void,GLuint*]*)
(bind-lib libGL glSecondaryColor3usEXT [void,GLushort,GLushort,GLushort]*)
(bind-lib libGL glSecondaryColor3usvEXT [void,GLushort*]*)
(bind-lib libGL glSecondaryColorPointerEXT [void,GLint,GLenum,GLsizei,GLvoid*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_stencil_two_side
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glActiveStencilFaceEXTProcPtr) (GLenum face);
;; #else
(bind-lib libGL glActiveStencilFaceEXT [void,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_subtexture
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glTexSubImage1DEXTProcPtr) (GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const GLvoid *);
typedef void (* glTexSubImage2DEXTProcPtr) (GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
;; #else
(bind-lib libGL glTexSubImage1DEXT [void,GLenum,GLint,GLint,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTexSubImage2DEXT [void,GLenum,GLint,GLint,GLint,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_texture3D
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glTexImage3DEXTProcPtr) (GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const GLvoid *);
typedef void (* glTexSubImage3DEXTProcPtr) (GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const GLvoid *);
;; #else
(bind-lib libGL glTexImage3DEXT [void,GLenum,GLint,GLenum,GLsizei,GLsizei,GLsizei,GLint,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glTexSubImage3DEXT [void,GLenum,GLint,GLint,GLint,GLint,GLsizei,GLsizei,GLsizei,GLenum,GLenum,GLvoid*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_texture_integer
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (*glClearColorIiEXTProcPtr) ( GLint r, GLint g, GLint b, GLint a );
typedef void (*glClearColorIuiEXTProcPtr) ( GLuint r, GLuint g, GLuint b, GLuint a );
typedef void (*glTexParameterIivEXTProcPtr)( GLenum target, GLenum pname, GLint *params );
typedef void (*glTexParameterIuivEXTProcPtr)( GLenum target, GLenum pname, GLuint *params );
typedef void (*glGetTexParameterIivEXTProcPtr) ( GLenum target, GLenum pname, GLint *params);
typedef void (*glGetTexParameterIuivEXTProcPtr) ( GLenum target, GLenum pname, GLuint *params);
;; #else
(bind-lib libGL glClearColorIiEXT [void,GLint,GLint,GLint,GLint]*)
(bind-lib libGL glClearColorIuiEXT [void,GLuint,GLuint,GLuint,GLuint]*)
(bind-lib libGL glTexParameterIivEXT [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glTexParameterIuivEXT [void,GLenum,GLenum,GLuint*]*)
(bind-lib libGL glGetTexParameterIivEXT [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetTexParameterIuivEXT [void,GLenum,GLenum,GLuint*]*)
;; #endif
;; #endif /* GL_EXT_texture_integer */

;; #if GL_EXT_texture_object
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef GLboolean (* glAreTexturesResidentEXTProcPtr) (GLsizei, const GLuint *, GLboolean *);
typedef void (* glBindTextureEXTProcPtr) (GLenum, GLuint);
typedef void (* glDeleteTexturesEXTProcPtr) (GLsizei, const GLuint *);
typedef void (* glGenTexturesEXTProcPtr) (GLsizei, GLuint *);
typedef GLboolean (* glIsTextureEXTProcPtr) (GLuint);
typedef void (* glPrioritizeTexturesEXTProcPtr) (GLsizei, const GLuint *, const GLclampf *);
;; #else
(bind-lib libGL glAreTexturesResidentEXT [GLboolean,GLsizei,GLuint*,GLboolean*]*)
(bind-lib libGL glBindTextureEXT [void,GLenum,GLuint]*)
(bind-lib libGL glDeleteTexturesEXT [void,GLsizei,GLuint*]*)
(bind-lib libGL glGenTexturesEXT [void,GLsizei,GLuint*]*)
(bind-lib libGL glIsTextureEXT [GLboolean,GLuint]*)
(bind-lib libGL glPrioritizeTexturesEXT [void,GLsizei,GLuint*,GLclampf*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_timer_query
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glGetQueryObjecti64vEXTProcPtr)(GLuint id, GLenum pname, GLint64EXT *params);
typedef void (* glGetQueryObjectui64vEXTProcPtr)(GLuint id, GLenum pname, GLuint64EXT *params);
;; #else
(bind-lib libGL glGetQueryObjecti64vEXT [void,GLuint,GLenum,GLint64EXT*]*)
(bind-lib libGL glGetQueryObjectui64vEXT [void,GLuint,GLenum,GLuint64EXT*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_EXT_transform_feedback
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBindBufferRangeEXTProcPtr) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
typedef void (* glBindBufferOffsetEXTProcPtr) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);
typedef void (* glBindBufferBaseEXTProcPtr) (GLenum target, GLuint index, GLuint buffer);
typedef void (* glBeginTransformFeedbackEXTProcPtr) (GLenum primitiveMode);
typedef void (* glEndTransformFeedbackEXTProcPtr) (void);
typedef void (* glTransformFeedbackVaryingsEXTProcPtr) (GLuint program, GLsizei count, const GLchar* const *varyings, GLenum bufferMode);
typedef void (* glGetTransformFeedbackVaryingEXTProcPtr) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
;; #else
(bind-lib libGL glBindBufferRangeEXT [void,GLenum,GLuint,GLuint,GLintptr,GLsizeiptr]*)
(bind-lib libGL glBindBufferOffsetEXT [void,GLenum,GLuint,GLuint,GLintptr]*)
(bind-lib libGL glBindBufferBaseEXT [void,GLenum,GLuint,GLuint]*)
(bind-lib libGL glBeginTransformFeedbackEXT [void,GLenum]*)
(bind-lib libGL glEndTransformFeedbackEXT [void]*)
(bind-lib libGL glTransformFeedbackVaryingsEXT [void,GLuint,GLsizei,GLchar**,GLenum]*)
(bind-lib libGL glGetTransformFeedbackVaryingEXT [void,GLuint,GLuint,GLsizei,GLsizei*,GLsizei*,GLenum*,GLchar*]*)
;; #endif
;; #endif /* GL_EXT_transform_feedback */

;; #if GL_EXT_transform_feedback || GL_EXT_draw_buffers2
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glGetIntegerIndexedvEXTProcPtr) (GLenum param, GLint index, GLint *values);
typedef void (* glGetBooleanIndexedvEXTProcPtr) (GLenum param, GLint index, GLboolean *values);
;; #else
(bind-lib libGL glGetIntegerIndexedvEXT [void,GLenum,GLuint,GLint*]*)
(bind-lib libGL glGetBooleanIndexedvEXT [void,GLenum,GLuint,GLboolean*]*)
;; #endif
;; #endif /* GL_EXT_transform_feedback || GL_EXT_draw_buffers2 */

;; #if GL_EXT_vertex_array
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glArrayElementEXTProcPtr) (GLint);
typedef void (* glColorPointerEXTProcPtr) (GLint, GLenum, GLsizei, GLsizei, const GLvoid *);
typedef void (* glDrawArraysEXTProcPtr) (GLenum, GLint, GLsizei);
typedef void (* glEdgeFlagPointerEXTProcPtr) (GLsizei, GLsizei, const GLvoid *);
typedef void (* glGetPointervEXTProcPtr) (GLenum, GLvoid **);
typedef void (* glIndexPointerEXTProcPtr) (GLenum, GLsizei, GLsizei, const GLvoid *);
typedef void (* glNormalPointerEXTProcPtr) (GLenum, GLsizei, GLsizei, const GLvoid *);
typedef void (* glTexCoordPointerEXTProcPtr) (GLint, GLenum, GLsizei, GLsizei, const GLvoid *);
typedef void (* glVertexPointerEXTProcPtr) (GLint, GLenum, GLsizei, GLsizei, const GLvoid *);
;; #else
(bind-lib libGL glArrayElementEXT [void,GLint]*)
(bind-lib libGL glColorPointerEXT [void,GLint,GLenum,GLsizei,GLsizei,GLvoid*]*)
(bind-lib libGL glDrawArraysEXT [void,GLenum,GLint,GLsizei]*)
(bind-lib libGL glEdgeFlagPointerEXT [void,GLsizei,GLsizei,GLvoid*]*)
(bind-lib libGL glGetPointervEXT [void,GLenum,GLvoid**]*)
(bind-lib libGL glIndexPointerEXT [void,GLenum,GLsizei,GLsizei,GLvoid*]*)
(bind-lib libGL glNormalPointerEXT [void,GLenum,GLsizei,GLsizei,GLvoid*]*)
(bind-lib libGL glTexCoordPointerEXT [void,GLint,GLenum,GLsizei,GLsizei,GLvoid*]*)
(bind-lib libGL glVertexPointerEXT [void,GLint,GLenum,GLsizei,GLsizei,GLvoid*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_APPLE_element_array
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glElementPointerAPPLEProcPtr) (GLenum type, const GLvoid *pointer);
typedef void (* glDrawElementArrayAPPLEProcPtr) (GLenum mode, GLint first, GLsizei count);
typedef void (* glDrawRangeElementArrayAPPLEProcPtr) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
typedef void (* glMultiDrawElementArrayAPPLEProcPtr) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
typedef void (* glMultiDrawRangeElementArrayAPPLEProcPtr) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
;; #else
(bind-lib libGL glElementPointerAPPLE [void,GLenum,GLvoid*]*)
(bind-lib libGL glDrawElementArrayAPPLE [void,GLenum,GLint,GLsizei]*)
(bind-lib libGL glDrawRangeElementArrayAPPLE [void,GLenum,GLuint,GLuint,GLint,GLsizei]*)
(bind-lib libGL glMultiDrawElementArrayAPPLE [void,GLenum,GLint*,GLsizei*,GLsizei]*)
(bind-lib libGL glMultiDrawRangeElementArrayAPPLE [void,GLenum,GLuint,GLuint,GLint*,GLsizei*,GLsizei]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_APPLE_fence
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glGenFencesAPPLEProcPtr) (GLsizei n, GLuint *fences);
typedef void (* glDeleteFencesAPPLEProcPtr) (GLsizei n, const GLuint *fences);
typedef void (* glSetFenceAPPLEProcPtr) (GLuint fence);
typedef GLboolean (* glIsFenceAPPLEProcPtr) (GLuint fence);
typedef GLboolean (* glTestFenceAPPLEProcPtr) (GLuint fence);
typedef void (* glFinishFenceAPPLEProcPtr) (GLuint fence);
typedef GLboolean (* glTestObjectAPPLEProcPtr) (GLenum object, GLuint name);
typedef void (* glFinishObjectAPPLEProcPtr) (GLenum object, GLuint name);
;; #else
(bind-lib libGL glGenFencesAPPLE [void,GLsizei,GLuint*]*)
(bind-lib libGL glDeleteFencesAPPLE [void,GLsizei,GLuint*]*)
(bind-lib libGL glSetFenceAPPLE [void,GLuint]*)
(bind-lib libGL glIsFenceAPPLE [GLboolean,GLuint]*)
(bind-lib libGL glTestFenceAPPLE [GLboolean,GLuint]*)
(bind-lib libGL glFinishFenceAPPLE [void,GLuint]*)
(bind-lib libGL glTestObjectAPPLE [GLboolean,GLenum,GLuint]*)
(bind-lib libGL glFinishObjectAPPLE [void,GLenum,GLuint]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_APPLE_flush_buffer_range
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBufferParameteriAPPLEProcPtr) (GLenum target, GLenum pname, GLint param);
typedef void (* glFlushMappedBufferRangeAPPLEProcPtr) (GLenum target, GLintptr offset, GLsizeiptr size);
;; #else
(bind-lib libGL glBufferParameteriAPPLE [void,GLenum,GLenum,GLint]*)
(bind-lib libGL glFlushMappedBufferRangeAPPLE [void,GLenum,GLintptr,GLsizeiptr]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_APPLE_flush_render
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glFlushRenderAPPLEProcPtr) (void);
typedef void (* glFinishRenderAPPLEProcPtr) (void);
typedef void (* glSwapAPPLEProcPtr) (void);
;; #else
(bind-lib libGL glFlushRenderAPPLE [void]*)
(bind-lib libGL glFinishRenderAPPLE [void]*)
(bind-lib libGL glSwapAPPLE [void]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_APPLE_object_purgeable
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef GLenum (* glObjectPurgeableAPPLEProcPtr) (GLenum objectType, GLuint name, GLenum option);
typedef GLenum (* glObjectUnpurgeableAPPLEProcPtr) (GLenum objectType, GLuint name, GLenum option);
typedef void (* glGetObjectParameterivAPPLEProcPtr) (GLenum objectType, GLuint name, GLenum pname, GLint *params);
;; #else
(bind-lib libGL glObjectPurgeableAPPLE [GLenum,GLenum,GLuint,GLenum]*)
(bind-lib libGL glObjectUnpurgeableAPPLE [GLenum,GLenum,GLuint,GLenum]*)
(bind-lib libGL glGetObjectParameterivAPPLE [void,GLenum,GLuint,GLenum,GLint*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_APPLE_texture_range
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glTextureRangeAPPLEProcPtr) (GLenum target, GLsizei length, const GLvoid *pointer);
typedef void (* glGetTexParameterPointervAPPLEProcPtr) (GLenum target, GLenum pname, GLvoid **params);
;; #else
(bind-lib libGL glTextureRangeAPPLE [void,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glGetTexParameterPointervAPPLE [void,GLenum,GLenum,GLvoid**]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_APPLE_vertex_array_object
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBindVertexArrayAPPLEProcPtr) (GLuint id);
typedef void (* glDeleteVertexArraysAPPLEProcPtr) (GLsizei n, const GLuint *ids);
typedef void (* glGenVertexArraysAPPLEProcPtr) (GLsizei n, GLuint *ids);
typedef GLboolean (* glIsVertexArrayAPPLEProcPtr) (GLuint id);
;; #else
(bind-lib libGL glBindVertexArrayAPPLE [void,GLuint]*)
(bind-lib libGL glDeleteVertexArraysAPPLE [void,GLsizei,GLuint*]*)
(bind-lib libGL glGenVertexArraysAPPLE [void,GLsizei,GLuint*]*)
(bind-lib libGL glIsVertexArrayAPPLE [GLboolean,GLuint]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_APPLE_vertex_array_range
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glVertexArrayRangeAPPLEProcPtr) (GLsizei length, const GLvoid *pointer);
typedef void (* glFlushVertexArrayRangeAPPLEProcPtr) (GLsizei length, const GLvoid *pointer);
typedef void (* glVertexArrayParameteriAPPLEProcPtr) (GLenum pname, GLint param);
;; #else
(bind-lib libGL glVertexArrayRangeAPPLE [void,GLsizei,GLvoid*]*)
(bind-lib libGL glFlushVertexArrayRangeAPPLE [void,GLsizei,GLvoid*]*)
(bind-lib libGL glVertexArrayParameteriAPPLE [void,GLenum,GLint]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_APPLE_vertex_point_size
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glPointSizePointerAPPLEProcPtr) (GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (* glVertexPointSizefAPPLEProcPtr) (GLfloat size);
;; #else
(bind-lib libGL glPointSizePointerAPPLE [void,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glVertexPointSizefAPPLE [void,GLfloat]*)
;; #endif
;; #endif

;; #if GL_APPLE_vertex_program_evaluators
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glEnableVertexAttribAPPLEProcPtr) (GLuint index, GLenum pname);
typedef void (* glDisableVertexAttribAPPLEProcPtr) (GLuint index, GLenum pname);
typedef GLboolean (* glIsVertexAttribEnabledAPPLEProcPtr) (GLuint index, GLenum pname);
typedef void (* glMapVertexAttrib1dAPPLEProcPtr) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
typedef void (* glMapVertexAttrib1fAPPLEProcPtr) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
typedef void (* glMapVertexAttrib2dAPPLEProcPtr) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
typedef void (* glMapVertexAttrib2fAPPLEProcPtr) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
;; #else
(bind-lib libGL glEnableVertexAttribAPPLE [void,GLuint,GLenum]*)
(bind-lib libGL glDisableVertexAttribAPPLE [void,GLuint,GLenum]*)
(bind-lib libGL glIsVertexAttribEnabledAPPLE [GLboolean,GLuint,GLenum]*)
(bind-lib libGL glMapVertexAttrib1dAPPLE [void,GLuint,GLuint,GLdouble,GLdouble,GLint,GLint,GLdouble*]*)
(bind-lib libGL glMapVertexAttrib1fAPPLE [void,GLuint,GLuint,GLfloat,GLfloat,GLint,GLint,GLfloat*]*)
(bind-lib libGL glMapVertexAttrib2dAPPLE [void,GLuint,GLuint,GLdouble,GLdouble,GLint,GLint,GLdouble,GLdouble,GLint,GLint,GLdouble*]*)
(bind-lib libGL glMapVertexAttrib2fAPPLE [void,GLuint,GLuint,GLfloat,GLfloat,GLint,GLint,GLfloat,GLfloat,GLint,GLint,GLfloat*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ATI_blend_equation_separate
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBlendEquationSeparateATIProcPtr) (GLenum equationRGB, GLenum equationAlpha);
;; #else
(bind-lib libGL glBlendEquationSeparateATI [void,GLenum,GLenum]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ATI_pn_triangles
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glPNTrianglesiATIProcPtr) (GLenum pname, GLint param);
typedef void (* glPNTrianglesfATIProcPtr) (GLenum pname, GLfloat param);
;; #else
(bind-lib libGL glPNTrianglesiATI [void,GLenum,GLint]*)
(bind-lib libGL glPNTrianglesfATI [void,GLenum,GLfloat]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ATI_separate_stencil
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glStencilOpSeparateATIProcPtr) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
typedef void (* glStencilFuncSeparateATIProcPtr) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
;; #else
(bind-lib libGL glStencilOpSeparateATI [void,GLenum,GLenum,GLenum,GLenum]*)
(bind-lib libGL glStencilFuncSeparateATI [void,GLenum,GLenum,GLint,GLuint]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_ATIX_pn_triangles
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glPNTrianglesiATIXProcPtr) (GLenum pname, GLint param);
typedef void (* glPNTrianglesfATIXProcPtr) (GLenum pname, GLfloat param);
;; #else
(bind-lib libGL glPNTrianglesiATIX [void,GLenum,GLint]*)
(bind-lib libGL glPNTrianglesfATIX [void,GLenum,GLfloat]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_NV_conditional_render
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBeginConditionalRenderNVProcPtr) (GLuint id, GLenum mode);
typedef void (* glEndConditionalRenderNVProcPtr) (void);
;; #else
(bind-lib libGL glBeginConditionalRenderNV [void,GLuint,GLenum]*)
(bind-lib libGL glEndConditionalRenderNV [void]*)
;; #endif
;; #endif

;; #if GL_NV_point_sprite
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glPointParameteriNVProcPtr) (GLenum pname, GLint param);
typedef void (* glPointParameterivNVProcPtr) (GLenum pname, const GLint *params);
;; #else
(bind-lib libGL glPointParameteriNV [void,GLenum,GLint]*)
(bind-lib libGL glPointParameterivNV [void,GLenum,GLint*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_NV_register_combiners
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glCombinerParameterfvNVProcPtr) (GLenum, const GLfloat *);
typedef void (* glCombinerParameterfNVProcPtr) (GLenum, GLfloat);
typedef void (* glCombinerParameterivNVProcPtr) (GLenum, const GLint *);
typedef void (* glCombinerParameteriNVProcPtr) (GLenum, GLint);
typedef void (* glCombinerInputNVProcPtr) (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum);
typedef void (* glCombinerOutputNVProcPtr) (GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean);
typedef void (* glFinalCombinerInputNVProcPtr) (GLenum, GLenum, GLenum, GLenum);
typedef void (* glGetCombinerInputParameterfvNVProcPtr) (GLenum, GLenum, GLenum, GLenum, GLfloat *);
typedef void (* glGetCombinerInputParameterivNVProcPtr) (GLenum, GLenum, GLenum, GLenum, GLint *);
typedef void (* glGetCombinerOutputParameterfvNVProcPtr) (GLenum, GLenum, GLenum, GLfloat *);
typedef void (* glGetCombinerOutputParameterivNVProcPtr) (GLenum, GLenum, GLenum, GLint *);
typedef void (* glGetFinalCombinerInputParameterfvNVProcPtr) (GLenum, GLenum, GLfloat *);
typedef void (* glGetFinalCombinerInputParameterivNVProcPtr) (GLenum, GLenum, GLint *);
;; #else
(bind-lib libGL glCombinerParameterfvNV [void,GLenum,GLfloat*]*)
(bind-lib libGL glCombinerParameterfNV [void,GLenum,GLfloat]*)
(bind-lib libGL glCombinerParameterivNV [void,GLenum,GLint*]*)
(bind-lib libGL glCombinerParameteriNV [void,GLenum,GLint]*)
(bind-lib libGL glCombinerInputNV [void,GLenum,GLenum,GLenum,GLenum,GLenum,GLenum]*)
(bind-lib libGL glCombinerOutputNV [void,GLenum,GLenum,GLenum,GLenum,GLenum,GLenum,GLenum,GLboolean,GLboolean,GLboolean]*)
(bind-lib libGL glFinalCombinerInputNV [void,GLenum,GLenum,GLenum,GLenum]*)
(bind-lib libGL glGetCombinerInputParameterfvNV [void,GLenum,GLenum,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetCombinerInputParameterivNV [void,GLenum,GLenum,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetCombinerOutputParameterfvNV [void,GLenum,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetCombinerOutputParameterivNV [void,GLenum,GLenum,GLenum,GLint*]*)
(bind-lib libGL glGetFinalCombinerInputParameterfvNV [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetFinalCombinerInputParameterivNV [void,GLenum,GLenum,GLint*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_NV_register_combiners2
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glCombinerStageParameterfvNVProcPtr) (GLenum, GLenum, const GLfloat *);
typedef void (* glGetCombinerStageParameterfvNVProcPtr) (GLenum, GLenum, GLfloat *);
;; #else
(bind-lib libGL glCombinerStageParameterfvNV [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetCombinerStageParameterfvNV [void,GLenum,GLenum,GLfloat*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_NV_texture_barrier
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glTextureBarrierNVProcPtr) (void);
;; #else
(bind-lib libGL glTextureBarrierNV [void]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_NV_vertex_array_range
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glFlushVertexArrayRangeNVProcPtr) (void);
typedef void (* glVertexArrayRangeNVProcPtr) (GLsizei, const GLvoid *);
;; #else
(bind-lib libGL glFlushVertexArrayRangeNV [void]*)
(bind-lib libGL glVertexArrayRangeNV [void,GLsizei,GLvoid*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_NV_vertex_program
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glBindProgramNVProcPtr) (GLenum target, GLuint id);
typedef void (* glDeleteProgramsNVProcPtr) (GLsizei n, const GLuint *ids);
typedef void (* glExecuteProgramNVProcPtr) (GLenum target, GLuint id, const GLfloat *params);
typedef void (* glGenProgramsNVProcPtr) (GLsizei n, GLuint *ids);
typedef GLboolean (* glAreProgramsResidentNVProcPtr) (GLsizei n, const GLuint *ids, GLboolean *residences);
typedef void (* glRequestResidentProgramsNVProcPtr) (GLsizei n, GLuint *ids);
typedef void (* glGetProgramParameterfvNVProcPtr) (GLenum target, GLuint index, GLenum pname, GLfloat *params);
typedef void (* glGetProgramParameterdvNVProcPtr) (GLenum target, GLuint index, GLenum pname, GLdouble *params);
typedef void (* glGetProgramivNVProcPtr) (GLuint id, GLenum pname, GLint *params);
typedef void (* glGetProgramStringNVProcPtr) (GLuint id, GLenum pname, GLubyte *program);
typedef void (* glGetTrackMatrixivNVProcPtr) (GLenum target, GLuint address, GLenum pname, GLint *params);
typedef void (* glGetVertexAttribdvNVProcPtr) (GLuint index, GLenum pname, GLdouble *params);
typedef void (* glGetVertexAttribfvNVProcPtr) (GLuint index, GLenum pname, GLfloat *params);
typedef void (* glGetVertexAttribivNVProcPtr) (GLuint index, GLenum pname, GLint *params);
typedef void (* glGetVertexAttribPointervNVProcPtr) (GLuint index, GLenum pname, GLvoid **pointer);
typedef GLboolean (* glIsProgramNVProcPtr) (GLuint id);
typedef void (* glLoadProgramNVProcPtr) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);
typedef void (* glProgramParameter4fNVProcPtr) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* glProgramParameter4dNVProcPtr) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* glProgramParameter4dvNVProcPtr) (GLenum target, GLuint index, const GLdouble *params);
typedef void (* glProgramParameter4fvNVProcPtr) (GLenum target, GLuint index, const GLfloat *params);
typedef void (* glProgramParameters4dvNVProcPtr) (GLenum target, GLuint index, GLuint num, const GLdouble *params);
typedef void (* glProgramParameters4fvNVProcPtr) (GLenum target, GLuint index, GLuint num, const GLfloat *params);
typedef void (* glTrackMatrixNVProcPtr) (GLenum target, GLuint address, GLenum matrix, GLenum transform);
typedef void (* glVertexAttribPointerNVProcPtr) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);
typedef void (* glVertexAttrib1sNVProcPtr) (GLuint index, GLshort x);
typedef void (* glVertexAttrib1fNVProcPtr) (GLuint index, GLfloat x);
typedef void (* glVertexAttrib1dNVProcPtr) (GLuint index, GLdouble x);
typedef void (* glVertexAttrib2sNVProcPtr) (GLuint index, GLshort x, GLshort y);
typedef void (* glVertexAttrib2fNVProcPtr) (GLuint index, GLfloat x, GLfloat y);
typedef void (* glVertexAttrib2dNVProcPtr) (GLuint index, GLdouble x, GLdouble y);
typedef void (* glVertexAttrib3sNVProcPtr) (GLuint index, GLshort x, GLshort y, GLshort z);
typedef void (* glVertexAttrib3fNVProcPtr) (GLuint index, GLfloat x, GLfloat y, GLfloat z);
typedef void (* glVertexAttrib3dNVProcPtr) (GLuint index, GLdouble x, GLdouble y, GLdouble z);
typedef void (* glVertexAttrib4sNVProcPtr) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
typedef void (* glVertexAttrib4fNVProcPtr) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
typedef void (* glVertexAttrib4dNVProcPtr) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
typedef void (* glVertexAttrib4ubNVProcPtr) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
typedef void (* glVertexAttrib1svNVProcPtr) (GLuint index, GLshort *v);
typedef void (* glVertexAttrib1fvNVProcPtr) (GLuint index, GLfloat *v);
typedef void (* glVertexAttrib1dvNVProcPtr) (GLuint index, GLdouble *v);
typedef void (* glVertexAttrib2svNVProcPtr) (GLuint index, GLshort *v);
typedef void (* glVertexAttrib2fvNVProcPtr) (GLuint index, GLfloat *v);
typedef void (* glVertexAttrib2dvNVProcPtr) (GLuint index, GLdouble *v);
typedef void (* glVertexAttrib3svNVProcPtr) (GLuint index, GLshort *v);
typedef void (* glVertexAttrib3fvNVProcPtr) (GLuint index, GLfloat *v);
typedef void (* glVertexAttrib3dvNVProcPtr) (GLuint index, GLdouble *v);
typedef void (* glVertexAttrib4svNVProcPtr) (GLuint index, GLshort *v);
typedef void (* glVertexAttrib4fvNVProcPtr) (GLuint index, GLfloat *v);
typedef void (* glVertexAttrib4dvNVProcPtr) (GLuint index, GLdouble *v);
typedef void (* glVertexAttrib4ubvNVProcPtr) (GLuint index, GLubyte *v);
typedef void (* glVertexAttribs1svNVProcPtr) (GLuint index, GLsizei n, GLshort *v);
typedef void (* glVertexAttribs1fvNVProcPtr) (GLuint index, GLsizei n, GLfloat *v);
typedef void (* glVertexAttribs1dvNVProcPtr) (GLuint index, GLsizei n, GLdouble *v);
typedef void (* glVertexAttribs2svNVProcPtr) (GLuint index, GLsizei n, GLshort *v);
typedef void (* glVertexAttribs2fvNVProcPtr) (GLuint index, GLsizei n, GLfloat *v);
typedef void (* glVertexAttribs2dvNVProcPtr) (GLuint index, GLsizei n, GLdouble *v);
typedef void (* glVertexAttribs3svNVProcPtr) (GLuint index, GLsizei n, GLshort *v);
typedef void (* glVertexAttribs3fvNVProcPtr) (GLuint index, GLsizei n, GLfloat *v);
typedef void (* glVertexAttribs3dvNVProcPtr) (GLuint index, GLsizei n, GLdouble *v);
typedef void (* glVertexAttribs4svNVProcPtr) (GLuint index, GLsizei n, GLshort *v);
typedef void (* glVertexAttribs4fvNVProcPtr) (GLuint index, GLsizei n, GLfloat *v);
typedef void (* glVertexAttribs4dvNVProcPtr) (GLuint index, GLsizei n, GLdouble *v);
typedef void (* glVertexAttribs4ubvNVProcPtr) (GLuint index, GLsizei n, GLubyte *v);
;; #else
(bind-lib libGL glBindProgramNV [void,GLenum,GLuint]*)
(bind-lib libGL glDeleteProgramsNV [void,GLsizei,GLuint*]*)
(bind-lib libGL glExecuteProgramNV [void,GLenum,GLuint,GLfloat*]*)
(bind-lib libGL glGenProgramsNV [void,GLsizei,GLuint*]*)
(bind-lib libGL glAreProgramsResidentNV [GLboolean,GLsizei,GLuint*,GLboolean*]*)
(bind-lib libGL glRequestResidentProgramsNV [void,GLsizei,GLuint*]*)
(bind-lib libGL glGetProgramParameterfvNV [void,GLenum,GLuint,GLenum,GLfloat*]*)
(bind-lib libGL glGetProgramParameterdvNV [void,GLenum,GLuint,GLenum,GLdouble*]*)
(bind-lib libGL glGetProgramivNV [void,GLuint,GLenum,GLint*]*)
(bind-lib libGL glGetProgramStringNV [void,GLuint,GLenum,GLubyte*]*)
(bind-lib libGL glGetTrackMatrixivNV [void,GLenum,GLuint,GLenum,GLint*]*)
(bind-lib libGL glGetVertexAttribdvNV [void,GLuint,GLenum,GLdouble*]*)
(bind-lib libGL glGetVertexAttribfvNV [void,GLuint,GLenum,GLfloat*]*)
(bind-lib libGL glGetVertexAttribivNV [void,GLuint,GLenum,GLint*]*)
(bind-lib libGL glGetVertexAttribPointervNV [void,GLuint,GLenum,GLvoid**]*)
(bind-lib libGL glIsProgramNV [GLboolean,GLuint]*)
(bind-lib libGL glLoadProgramNV [void,GLenum,GLuint,GLsizei,GLubyte*]*)
(bind-lib libGL glProgramParameter4fNV [void,GLenum,GLuint,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glProgramParameter4dNV [void,GLenum,GLuint,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glProgramParameter4dvNV [void,GLenum,GLuint,GLdouble*]*)
(bind-lib libGL glProgramParameter4fvNV [void,GLenum,GLuint,GLfloat*]*)
(bind-lib libGL glProgramParameters4dvNV [void,GLenum,GLuint,GLuint,GLdouble*]*)
(bind-lib libGL glProgramParameters4fvNV [void,GLenum,GLuint,GLuint,GLfloat*]*)
(bind-lib libGL glTrackMatrixNV [void,GLenum,GLuint,GLenum,GLenum]*)
(bind-lib libGL glVertexAttribPointerNV [void,GLuint,GLint,GLenum,GLsizei,GLvoid*]*)
(bind-lib libGL glVertexAttrib1sNV [void,GLuint,GLshort]*)
(bind-lib libGL glVertexAttrib1fNV [void,GLuint,GLfloat]*)
(bind-lib libGL glVertexAttrib1dNV [void,GLuint,GLdouble]*)
(bind-lib libGL glVertexAttrib2sNV [void,GLuint,GLshort,GLshort]*)
(bind-lib libGL glVertexAttrib2fNV [void,GLuint,GLfloat,GLfloat]*)
(bind-lib libGL glVertexAttrib2dNV [void,GLuint,GLdouble,GLdouble]*)
(bind-lib libGL glVertexAttrib3sNV [void,GLuint,GLshort,GLshort,GLshort]*)
(bind-lib libGL glVertexAttrib3fNV [void,GLuint,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertexAttrib3dNV [void,GLuint,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glVertexAttrib4sNV [void,GLuint,GLshort,GLshort,GLshort,GLshort]*)
(bind-lib libGL glVertexAttrib4fNV [void,GLuint,GLfloat,GLfloat,GLfloat,GLfloat]*)
(bind-lib libGL glVertexAttrib4dNV [void,GLuint,GLdouble,GLdouble,GLdouble,GLdouble]*)
(bind-lib libGL glVertexAttrib4ubNV [void,GLuint,GLubyte,GLubyte,GLubyte,GLubyte]*)
(bind-lib libGL glVertexAttrib1svNV [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib1fvNV [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib1dvNV [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib2svNV [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib2fvNV [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib2dvNV [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib3svNV [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib3fvNV [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib3dvNV [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib4svNV [void,GLuint,GLshort*]*)
(bind-lib libGL glVertexAttrib4fvNV [void,GLuint,GLfloat*]*)
(bind-lib libGL glVertexAttrib4dvNV [void,GLuint,GLdouble*]*)
(bind-lib libGL glVertexAttrib4ubvNV [void,GLuint,GLubyte*]*)
(bind-lib libGL glVertexAttribs1svNV [void,GLuint,GLsizei,GLshort*]*)
(bind-lib libGL glVertexAttribs1fvNV [void,GLuint,GLsizei,GLfloat*]*)
(bind-lib libGL glVertexAttribs1dvNV [void,GLuint,GLsizei,GLdouble*]*)
(bind-lib libGL glVertexAttribs2svNV [void,GLuint,GLsizei,GLshort*]*)
(bind-lib libGL glVertexAttribs2fvNV [void,GLuint,GLsizei,GLfloat*]*)
(bind-lib libGL glVertexAttribs2dvNV [void,GLuint,GLsizei,GLdouble*]*)
(bind-lib libGL glVertexAttribs3svNV [void,GLuint,GLsizei,GLshort*]*)
(bind-lib libGL glVertexAttribs3fvNV [void,GLuint,GLsizei,GLfloat*]*)
(bind-lib libGL glVertexAttribs3dvNV [void,GLuint,GLsizei,GLdouble*]*)
(bind-lib libGL glVertexAttribs4svNV [void,GLuint,GLsizei,GLshort*]*)
(bind-lib libGL glVertexAttribs4fvNV [void,GLuint,GLsizei,GLfloat*]*)
(bind-lib libGL glVertexAttribs4dvNV [void,GLuint,GLsizei,GLdouble*]*)
(bind-lib libGL glVertexAttribs4ubvNV [void,GLuint,GLsizei,GLubyte*]*)
;; #endif /* GL_GLEXT_FUNCTION_POINTERS */
;; #endif

;; #if GL_SGI_color_table
;; #ifdef GL_GLEXT_FUNCTION_POINTERS
typedef void (* glColorTableSGIProcPtr) (GLenum, GLenum, GLsizei, GLenum, GLenum, const GLvoid *);
typedef void (* glColorTableParameterfvSGIProcPtr) (GLenum, GLenum, const GLfloat *);
typedef void (* glColorTableParameterivSGIProcPtr) (GLenum, GLenum, const GLint *);
typedef void (* glCopyColorTableSGIProcPtr) (GLenum, GLenum, GLint, GLint, GLsizei);
typedef void (* glGetColorTableSGIProcPtr) (GLenum, GLenum, GLenum, GLvoid *);
typedef void (* glGetColorTableParameterfvSGIProcPtr) (GLenum, GLenum, GLfloat *);
typedef void (* glGetColorTableParameterivSGIProcPtr) (GLenum, GLenum, GLint *);
;; #else
(bind-lib libGL glColorTableSGI [void,GLenum,GLenum,GLsizei,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glColorTableParameterfvSGI [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glColorTableParameterivSGI [void,GLenum,GLenum,GLint*]*)
(bind-lib libGL glCopyColorTableSGI [void,GLenum,GLenum,GLint,GLint,GLsizei]*)
(bind-lib libGL glGetColorTableSGI [void,GLenum,GLenum,GLenum,GLvoid*]*)
(bind-lib libGL glGetColorTableParameterfvSGI [void,GLenum,GLenum,GLfloat*]*)
(bind-lib libGL glGetColorTableParameterivSGI [void,GLenum,GLenum,GLint*]*)
